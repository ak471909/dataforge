================================================================================
TRAINING DATA BOT - PROJECT ARCHITECTURE DOCUMENTATION
================================================================================

TABLE OF CONTENTS
--------------------------------------------------------------------------------
1. Project Overview
2. Directory Structure
3. Module Breakdown
4. File Descriptions
5. Code Statistics
6. Dependencies


================================================================================
1. PROJECT OVERVIEW
================================================================================

Project Name: Training Data Bot
Version: 0.1.0
Purpose: Enterprise-grade training data curation bot for LLM fine-tuning

Architecture Pattern: Separate Project & Package (Industry Standard)

Key Features:
- Multi-format document loading (PDF, DOCX, TXT, MD, HTML, CSV, JSON, URLs)
- Automatic text preprocessing and chunking
- AI-powered task generation (Q&A, Classification, Summarization)
- Quality evaluation and filtering
- Multi-format export (JSONL, JSON, CSV, Parquet)


================================================================================
2. DIRECTORY STRUCTURE
================================================================================

my_training_data_bot/
├── api
│   ├── middleware
│   │   ├── __init__.py
│   │   ├── auth.py
│   │   └── rate_limit.py
│   ├── routes
│   │   ├── __init__.py
│   │   ├── datasets.py
│   │   ├── documents.py
│   │   ├── monitoring.py
│   │   └── processing.py
│   ├── __init__.py
│   ├── dependencies.py
│   └── server.py
├── config
│   └── production.yaml
├── deployment
│   └── docker
│       └── README.md
├── documents
│   ├── ai.txt
│   ├── python.txt
│   └── test.txt
├── monitoring
│   ├── __init__.py
│   ├── health.py
│   └── metrics.py
├── scripts
│   ├── diagnostics.py
│   └── production_bot.py
├── training_data_bot
│   ├── ai
│   │   ├── providers
│   │   │   ├── __init__.py
│   │   │   ├── anthropic_provider.py
│   │   │   ├── base.py
│   │   │   └── openai_provider.py
│   │   ├── __init__.py
│   │   └── client.py
│   ├── config
│   │   └── production.yaml
│   ├── core
│   │   ├── __init__.py
│   │   ├── config.py
│   │   ├── exceptions.py
│   │   ├── logging.py
│   │   └── models.py
│   ├── evaluation
│   │   ├── __init__.py
│   │   └── evaluator.py
│   ├── preprocessing
│   │   ├── __init__.py
│   │   └── processor.py
│   ├── sources
│   │   ├── __init__.py
│   │   ├── base.py
│   │   ├── document_loader.py
│   │   ├── pdf_loader.py
│   │   ├── unified.py
│   │   └── web_loader.py
│   ├── storage
│   │   ├── __init__.py
│   │   └── exporter.py
│   ├── tasks
│   │   ├── generators
│   │   │   ├── __init__.py
│   │   │   ├── classification_generator.py
│   │   │   ├── qa_generator.py
│   │   │   └── summarization_generator.py
│   │   ├── __init__.py
│   │   ├── base.py
│   │   └── manager.py
│   ├── test_documents
│   │   ├── sample.csv
│   │   ├── sample.html
│   │   ├── sample.json
│   │   ├── sample.md
│   │   ├── sample.txt
│   │   └── sample_ml_intro.txt
│   ├── API_key_test.py
│   ├── __init__.py
│   ├── bot.py
│   ├── diagnostic.py
│   ├── example_session7_usage.py
│   ├── example_usage.py
│   ├── production_bot.py
│   ├── requirements.txt
│   ├── tasks.py
│   ├── test_foundation.py
│   ├── test_imports.py
│   ├── test_openai_live.py
│   ├── test_session2.py
│   ├── test_session3.py
│   ├── test_session4.py
│   ├── test_session5.py
│   ├── test_session6.py
│   ├── test_session7.py
│   └── test_session8.py
├── .dockerignore
├── Dockerfile
├── README.md
├── docker-compose.yaml
├── docker-entrypoint.sh
├── documentation_architecture.py
├── find_bad_imports.py
├── project_architecture.txt
├── project_complete_code.py
├── project_complete_code.txt
├── requirements-api.txt
├── requirements-ui.txt
├── requirements.txt
├── setup.py
├── streamlit_app.py
├── test_api.py
├── test_imports.py
├── test_phase1.py
└── test_real_world.py


================================================================================
3. MODULE BREAKDOWN
================================================================================

training_data_bot/
  → Main package - contains all core functionality

training_data_bot/core/
  → Foundation - data models, config, logging, exceptions

training_data_bot/sources/
  → Document loading - PDF, DOCX, web, unified loader

training_data_bot/preprocessing/
  → Text processing - chunking and preparation

training_data_bot/ai/
  → AI integration - OpenAI, Anthropic providers

training_data_bot/tasks/
  → Task generation - Q&A, classification, summarization

training_data_bot/evaluation/
  → Quality assessment - multi-metric evaluation

training_data_bot/storage/
  → Data export - JSONL, JSON, CSV, Parquet formats

config/
  → Configuration files - production, development, staging

scripts/
  → Operational scripts - production runner, batch processing

output/
  → Generated training data outputs

documents/
  → Input documents for processing


================================================================================
4. FILE DESCRIPTIONS
================================================================================


training_data_bot\.venv\Lib\site-packages/
--------------------------------------------------------------------------------

_black_version.py
  No description

training_data_bot\.venv\Lib\site-packages\_pytest/
--------------------------------------------------------------------------------

__init__.py
  No description

_argcomplete.py
  Allow bash-completion for argparse with argcomplete if installed. Needs argcomplete>=0.5.6 for python 3.2/3.3 (older versions fail

training_data_bot\.venv\Lib\site-packages\_pytest\_code/
--------------------------------------------------------------------------------

__init__.py
  Python inspection/code generation API.""" from __future__ import annotations

code.py
  Wrapper around Python code objects.""" __slots__ = ("raw",)

source.py
  An immutable object holding a source code fragment. When using Source(...), the source lines are deindented.

training_data_bot\.venv\Lib\site-packages\_pytest\_io/
--------------------------------------------------------------------------------

__init__.py
  No description

pprint.py
  Helper function for key functions when sorting unorderable objects. The wrapped-object will fallback to a Py2.x style comparison for

saferepr.py
  repr.Repr that limits the resulting size of repr() and includes information on exceptions raised during the call.

terminalwriter.py
  Helper functions for writing to terminals and files.""" from __future__ import annotations

wcwidth.py
  Determine how many columns are needed to display a character in a terminal. Returns -1 if the character is not printable.

training_data_bot\.venv\Lib\site-packages\_pytest\_py/
--------------------------------------------------------------------------------

__init__.py
  No description

error.py
  create errno-specific classes for IO or os calls.""" from __future__ import annotations

path.py
  local path implementation.""" from __future__ import annotations

training_data_bot\.venv\Lib\site-packages\_pytest/
--------------------------------------------------------------------------------

_version.py
  No description

training_data_bot\.venv\Lib\site-packages\_pytest\assertion/
--------------------------------------------------------------------------------

__init__.py
  Support for presenting detailed information in failing assertions.""" from __future__ import annotations

rewrite.py
  Rewrite assertion AST to produce nice error messages.""" from __future__ import annotations

truncate.py
  Utilities for truncating assertion output. Current default behaviour is to truncate assertion explanations at

util.py
  Utilities for assertion debugging.""" from __future__ import annotations

training_data_bot\.venv\Lib\site-packages\_pytest/
--------------------------------------------------------------------------------

cacheprovider.py
  Implementation of the cache provider.""" # This plugin was not named "cache" to avoid conflicts with the external

capture.py
  Per-test stdout/stderr capturing mechanism.""" from __future__ import annotations

compat.py
  Python version compatibility code.""" from __future__ import annotations

training_data_bot\.venv\Lib\site-packages\_pytest\config/
--------------------------------------------------------------------------------

__init__.py
  Command line options, ini-file and conftest.py processing.""" from __future__ import annotations

argparsing.py
  Parser for command line arguments and ini-file values. :ivar extra_info: Dict of generic param -> value to display in case

compat.py
  this helper wraps around hook callers until pluggy supports fixingcalls, this one will do

exceptions.py
  Error in pytest usage or invocation.""" class PrintHelp(Exception):

findpaths.py
  Parse the given generic '.ini' file using legacy IniConfig parser, returning the parsed object.

training_data_bot\.venv\Lib\site-packages\_pytest/
--------------------------------------------------------------------------------

debugging.py
  Interactive debugging with PDB, the Python Debugger.""" from __future__ import annotations

deprecated.py
  Deprecation messages and bits of code used elsewhere in the codebase that is planned to be removed in the next pytest release.

doctest.py
  Discover and run doctests in modules and test files.""" from __future__ import annotations

faulthandler.py
  Cancel any traceback dumping due to timeout before entering pdb.""" import faulthandler

fixtures.py
  Get the closest parent node (including self) which matches the given scope.

freeze_support.py
  Provides a function to report all internal modules for using freezing

helpconfig.py
  Version info, help messages, tracing configuration.""" from __future__ import annotations

hookspec.py
  Hook specifications for pytest plugins which are invoked by pytest itself

junitxml.py
  Report test results in JUnit-XML format, for use with Jenkins and build integration servers.

legacypath.py
  Add backward compatibility support for the legacy py path type.""" from __future__ import annotations

logging.py
  Access and control log capturing.""" from __future__ import annotations

main.py
  Core implementation of the testing process: init, session, runtest loop.""" from __future__ import annotations

training_data_bot\.venv\Lib\site-packages\_pytest\mark/
--------------------------------------------------------------------------------

__init__.py
  Generic mechanism for marking and selecting python functions.""" from __future__ import annotations

expression.py
  Evaluate match expressions, as used by `-k` and `-m`. The grammar is:

structures.py
  A set of values for a set of parameters along with associated marks and an optional ID for the set.

training_data_bot\.venv\Lib\site-packages\_pytest/
--------------------------------------------------------------------------------

monkeypatch.py
  Monkeypatching and mocking functionality.""" from __future__ import annotations

nodes.py
  Metaclass used by :class:`Node` to enforce that direct construction raises :class:`Failed`.

outcomes.py
  Exception classes and constants handling test outcomes as well as

pastebin.py
  Submit failure or test session information to a pastebin service.""" from __future__ import annotations

pathlib.py
  Handle known read-only errors during rmtree. The returned value is used only by our own tests.

pytester.py
  (Disabled by default) support for testing pytest and pytest plugins. PYTEST_DONT_REWRITE

pytester_assertions.py
  Helper plugin for pytester; should not be loaded on its own.""" # This plugin contains assertions used by pytester. pytester cannot

python.py
  Python test discovery, setup and run of test functions.""" from __future__ import annotations

python_api.py
  Provide shared utilities for making approximate comparisons between

raises.py
  Assert that a code block/function call raises an exception type, or one of its subclasses. :param expected_exception:

recwarn.py
  Record warnings during test function execution.""" from __future__ import annotations

reports.py
  Read-only property that returns the full string representation of ``longrepr``.

runner.py
  Basic collect and runtest protocol implementations.""" from __future__ import annotations

scope.py
  Scope definition and related utilities. Those are defined here, instead of in the 'fixtures' module because

setuponly.py
  No description

setupplan.py
  No description

skipping.py
  Support for skip/xfail functions and markers.""" from __future__ import annotations

stash.py
  ``StashKey`` is an object used as a key to a :class:`Stash`. A ``StashKey`` is associated with the type ``T`` of the value of the key.

stepwise.py
  No description

terminal.py
  Terminal reporting of the full testing process. This is a good source for looking at the various reporting hooks.

threadexception.py
  No description

timing.py
  Indirection for time functions. We intentionally grab some "time" functions internally to avoid tests mocking "time" to affect

tmpdir.py
  Support for providing temporary directories to test functions.""" from __future__ import annotations

tracemalloc.py
  No description

unittest.py
  Discover and run std-library "unittest" style tests.""" from __future__ import annotations

unraisableexception.py
  No description

warning_types.py
  Base class for all warnings emitted by pytest.""" __module__ = "pytest"

warnings.py
  Context manager that catches warnings generated in the contained execution block. ``item`` can be None if we are not in the context of an item execution.

training_data_bot\.venv\Lib\site-packages\_yaml/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\aiofiles/
--------------------------------------------------------------------------------

__init__.py
  Utilities for asyncio-friendly file handling.""" from .threadpool import (

base.py
  Various base classes.""" from collections.abc import Awaitable

os.py
  Async executor versions of file functions from the os module.""" import os

ospath.py
  Async executor versions of file functions from the os.path module.""" import asyncio

training_data_bot\.venv\Lib\site-packages\aiofiles\tempfile/
--------------------------------------------------------------------------------

__init__.py
  Async open a named temporary file""" return AiofilesContextManager(

temptypes.py
  Async wrappers for spooled temp files and temp directory objects""" from functools import partial

training_data_bot\.venv\Lib\site-packages\aiofiles\threadpool/
--------------------------------------------------------------------------------

__init__.py
  Handle files using a thread pool executor.""" import asyncio

binary.py
  The asyncio executor version of io.BufferedWriter and BufferedIOBase.""" @delegate_to_executor("peek")

text.py
  The asyncio executor version of io.TextIOWrapper.""" @delegate_to_executor(

utils.py
  For spooled temp files, delegate only if rolled to file object""" async def method(self, *args, **kwargs):

training_data_bot\.venv\Lib\site-packages\annotated_types/
--------------------------------------------------------------------------------

__init__.py
  Base class for all metadata. This exists mainly so that implementers

test_cases.py
  A test case for `annotated_types`.

training_data_bot\.venv\Lib\site-packages\anthropic/
--------------------------------------------------------------------------------

__init__.py
  No description

_base_client.py
  Stores the necessary information to build the request to retrieve the next page. Either `url` or `params` must be set.

_client.py
  Construct a new synchronous Anthropic client instance. This automatically infers the following arguments from their corresponding environment variables if they are not provided:

_compat.py
  No description

_constants.py
  No description

training_data_bot\.venv\Lib\site-packages\anthropic\_decoders/
--------------------------------------------------------------------------------

jsonl.py
  A decoder for [JSON Lines](https://jsonlines.org) format. This class provides an iterator over a byte-iterator that parses each JSON Line

training_data_bot\.venv\Lib\site-packages\anthropic/
--------------------------------------------------------------------------------

_exceptions.py
  The API response body. If the API responded with a valid JSON structure then this property will be the

_files.py
  No description

_legacy_response.py
  This is a legacy class as it will be replaced by `APIResponse` and `AsyncAPIResponse` in the `_response.py` file in the next major

_models.py
  The ID of the request, returned via the `request-id` header. Useful for debugging requests and reporting issues to Anthropic. This will **only** be set for the top-level response object, it will not be defined for nested objects. For example:

_qs.py
  No description

_resource.py
  No description

_response.py
  The number of retries made. If no retries happened this will be `0`""" def __init__(

_streaming.py
  Provides the core interface to iterate over a synchronous stream response.""" response: httpx.Response

_types.py
  For parameters with a meaningful None value, we need to distinguish between the user explicitly passing None, and the user not passing the parameter at

training_data_bot\.venv\Lib\site-packages\anthropic\_utils/
--------------------------------------------------------------------------------

__init__.py
  No description

_compat.py
  No description

_datetime_parse.py
  This file contains code from https://github.com/pydantic/pydantic/blob/main/pydantic/v1/datetime_parse.py without the Pydantic v1 specific errors.

_httpx.py
  This file includes code adapted from HTTPX's utility module (https://github.com/encode/httpx/blob/336204f0121a9aefdebac5cacd81f912bafe8057/httpx/_utils.py).

_logs.py
  No description

_proxy.py
  Implements data methods to pretend that an instance is another instance. This includes forwarding attribute access and other methods.

_reflection.py
  Returns whether or not the given function has a specific parameter""" sig = inspect.signature(func)

_resources_proxy.py
  A proxy for the `anthropic.resources` module. This is used so that we can lazily import `anthropic.resources` only when

_streams.py
  No description

_sync.py
  Asynchronously run function *func* in a separate thread. Any *args and **kwargs supplied for this function are directly passed

_transform.py
  Metadata class to be used in Annotated types to provide information about a given type. For example:

_typing.py
  If the given type is `typing.Iterable[T]`""" origin = get_origin(typ) or typ

_utils.py
  Recursively extract files from the given dictionary based on specified paths. A path may look like this ['foo', 'files', '<array>', 'data'].

training_data_bot\.venv\Lib\site-packages\anthropic/
--------------------------------------------------------------------------------

_version.py
  No description

training_data_bot\.venv\Lib\site-packages\anthropic\lib/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\anthropic\lib\_extras/
--------------------------------------------------------------------------------

__init__.py
  No description

_common.py
  Anthropic error: missing required dependency `{library}`. $ pip install anthropic[{extra}]

_google_auth.py
  No description

training_data_bot\.venv\Lib\site-packages\anthropic\lib\bedrock/
--------------------------------------------------------------------------------

__init__.py
  No description

_auth.py
  No description

_beta.py
  This property can be used as a prefix for any HTTP method call to return the the raw response object instead of the parsed content.

_beta_messages.py
  This property can be used as a prefix for any HTTP method call to return the the raw response object instead of the parsed content.

_client.py
  Infer the AWS region from the environment variables or from the boto3 session if available.

_stream.py
  No description

_stream_decoder.py
  Given an iterator that yields lines, iterate over it & yield every event encountered""" from botocore.eventstream import EventStreamBuffer

training_data_bot\.venv\Lib\site-packages\anthropic\lib\streaming/
--------------------------------------------------------------------------------

__init__.py
  No description

_beta_messages.py
  Iterator over just the text deltas in the stream. ```py

_beta_types.py
  The text delta""" snapshot: str

_messages.py
  Iterator over just the text deltas in the stream. ```py

_types.py
  The text delta""" snapshot: str

training_data_bot\.venv\Lib\site-packages\anthropic\lib\tools/
--------------------------------------------------------------------------------

__init__.py
  No description

_beta_builtin_memory_tool.py
  Abstract base class for memory tool implementations. This class provides the interface for implementing a custom memory backend for Claude.

_beta_functions.py
  The function this tool is wrapping""" name: str

_beta_runner.py
  Update the parameters for the next API call. This invalidates any cached tool responses. Args:

training_data_bot\.venv\Lib\site-packages\anthropic\lib\vertex/
--------------------------------------------------------------------------------

__init__.py
  No description

_auth.py
  No description

_beta.py
  This property can be used as a prefix for any HTTP method call to return the the raw response object instead of the parsed content.

_beta_messages.py
  This property can be used as a prefix for any HTTP method call to return the the raw response object instead of the parsed content.

_client.py
  Create a new client instance re-using the same options given to the current client with optional overriding.

training_data_bot\.venv\Lib\site-packages\anthropic/
--------------------------------------------------------------------------------

pagination.py
  No description

training_data_bot\.venv\Lib\site-packages\anthropic\resources/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\anthropic\resources\beta/
--------------------------------------------------------------------------------

__init__.py
  No description

beta.py
  This property can be used as a prefix for any HTTP method call to return the raw response object instead of the parsed content.

files.py
  This property can be used as a prefix for any HTTP method call to return the raw response object instead of the parsed content.

training_data_bot\.venv\Lib\site-packages\anthropic\resources\beta\messages/
--------------------------------------------------------------------------------

__init__.py
  No description

batches.py
  This property can be used as a prefix for any HTTP method call to return the raw response object instead of the parsed content.

messages.py
  This property can be used as a prefix for any HTTP method call to return the raw response object instead of the parsed content.

training_data_bot\.venv\Lib\site-packages\anthropic\resources\beta/
--------------------------------------------------------------------------------

models.py
  This property can be used as a prefix for any HTTP method call to return the raw response object instead of the parsed content.

training_data_bot\.venv\Lib\site-packages\anthropic\resources/
--------------------------------------------------------------------------------

completions.py
  This property can be used as a prefix for any HTTP method call to return the raw response object instead of the parsed content.

training_data_bot\.venv\Lib\site-packages\anthropic\resources\messages/
--------------------------------------------------------------------------------

__init__.py
  No description

batches.py
  This property can be used as a prefix for any HTTP method call to return the raw response object instead of the parsed content.

messages.py
  This property can be used as a prefix for any HTTP method call to return the raw response object instead of the parsed content.

training_data_bot\.venv\Lib\site-packages\anthropic\resources/
--------------------------------------------------------------------------------

models.py
  This property can be used as a prefix for any HTTP method call to return the raw response object instead of the parsed content.

training_data_bot\.venv\Lib\site-packages\anthropic\types/
--------------------------------------------------------------------------------

__init__.py
  No description

anthropic_beta_param.py
  No description

base64_image_source_param.py
  No description

base64_pdf_source_param.py
  No description

training_data_bot\.venv\Lib\site-packages\anthropic\types\beta/
--------------------------------------------------------------------------------

__init__.py
  No description

beta_base64_image_source_param.py
  No description

beta_base64_pdf_block_param.py
  No description

beta_base64_pdf_source.py
  No description

beta_base64_pdf_source_param.py
  No description

beta_bash_code_execution_output_block.py
  No description

beta_bash_code_execution_output_block_param.py
  No description

beta_bash_code_execution_result_block.py
  No description

beta_bash_code_execution_result_block_param.py
  No description

beta_bash_code_execution_tool_result_block.py
  No description

beta_bash_code_execution_tool_result_block_param.py
  Create a cache control breakpoint at this content block."""

beta_bash_code_execution_tool_result_error.py
  No description

beta_bash_code_execution_tool_result_error_param.py
  No description

beta_cache_control_ephemeral_param.py
  The time-to-live for the cache control breakpoint. This may be one the following values:

beta_cache_creation.py
  The number of input tokens used to create the 1 hour cache entry.""" ephemeral_5m_input_tokens: int

beta_citation_char_location.py
  No description

beta_citation_char_location_param.py
  No description

beta_citation_config.py
  No description

beta_citation_content_block_location.py
  No description

beta_citation_content_block_location_param.py
  No description

beta_citation_page_location.py
  No description

beta_citation_page_location_param.py
  No description

beta_citation_search_result_location.py
  No description

beta_citation_search_result_location_param.py
  No description

beta_citation_web_search_result_location_param.py
  No description

beta_citations_config_param.py
  No description

beta_citations_delta.py
  No description

beta_citations_web_search_result_location.py
  No description

beta_clear_tool_uses_20250919_edit_param.py
  Minimum number of tokens that must be cleared when triggered. Context will only be modified if at least this many tokens can be removed.

beta_clear_tool_uses_20250919_edit_response.py
  Number of input tokens cleared by this edit.""" cleared_tool_uses: int

beta_code_execution_output_block.py
  No description

beta_code_execution_output_block_param.py
  No description

beta_code_execution_result_block.py
  No description

beta_code_execution_result_block_param.py
  No description

beta_code_execution_tool_20250522_param.py
  Name of the tool. This is how the tool will be called by the model and in `tool_use` blocks.

beta_code_execution_tool_20250825_param.py
  Name of the tool. This is how the tool will be called by the model and in `tool_use` blocks.

beta_code_execution_tool_result_block.py
  No description

beta_code_execution_tool_result_block_content.py
  No description

beta_code_execution_tool_result_block_param.py
  Create a cache control breakpoint at this content block."""

beta_code_execution_tool_result_block_param_content_param.py
  No description

beta_code_execution_tool_result_error.py
  No description

beta_code_execution_tool_result_error_code.py
  No description

beta_code_execution_tool_result_error_param.py
  No description

beta_container.py
  Identifier for the container used in this request""" expires_at: datetime

beta_container_upload_block.py
  No description

beta_container_upload_block_param.py
  Create a cache control breakpoint at this content block."""

beta_content_block.py
  No description

beta_content_block_param.py
  No description

beta_content_block_source_content_param.py
  No description

beta_content_block_source_param.py
  No description

beta_context_management_config_param.py
  List of context management edits to apply"""

beta_context_management_response.py
  List of context management edits that were applied."""

beta_count_tokens_context_management_response.py
  The original token count before context management was applied"""

beta_document_block.py
  Citation configuration for the document""" source: Source

beta_file_document_source_param.py
  No description

beta_file_image_source_param.py
  No description

beta_image_block_param.py
  Create a cache control breakpoint at this content block."""

beta_input_json_delta.py
  No description

beta_input_tokens_clear_at_least_param.py
  No description

beta_input_tokens_trigger_param.py
  No description

beta_mcp_tool_result_block.py
  No description

beta_mcp_tool_use_block.py
  The name of the MCP tool""" server_name: str

beta_mcp_tool_use_block_param.py
  The name of the MCP server""" type: Required[Literal["mcp_tool_use"]]

beta_memory_tool_20250818_command.py
  No description

beta_memory_tool_20250818_create_command.py
  Command type identifier""" file_text: str

beta_memory_tool_20250818_delete_command.py
  Command type identifier""" path: str

beta_memory_tool_20250818_insert_command.py
  Command type identifier""" insert_line: int

beta_memory_tool_20250818_param.py
  Name of the tool. This is how the tool will be called by the model and in `tool_use` blocks.

beta_memory_tool_20250818_rename_command.py
  Command type identifier""" new_path: str

beta_memory_tool_20250818_str_replace_command.py
  Command type identifier""" new_str: str

beta_memory_tool_20250818_view_command.py
  Command type identifier""" path: str

beta_message.py
  Unique object identifier. The format and length of IDs may change over time.

beta_message_delta_usage.py
  The cumulative number of input tokens used to create the cache entry.""" cache_read_input_tokens: Optional[int] = None

beta_message_param.py
  No description

beta_message_tokens_count.py
  Information about context management applied to the message.""" input_tokens: int

beta_metadata_param.py
  An external identifier for the user who is associated with the request. This should be a uuid, hash value, or other opaque identifier. Anthropic may use

beta_model_info.py
  Unique model identifier.""" created_at: datetime

beta_plain_text_source.py
  No description

beta_plain_text_source_param.py
  No description

beta_raw_content_block_delta.py
  No description

beta_raw_content_block_delta_event.py
  No description

beta_raw_content_block_start_event.py
  Response model for a file uploaded to the container.""" index: int

beta_raw_content_block_stop_event.py
  No description

beta_raw_message_delta_event.py
  Information about the container used in the request (for the code execution tool)

beta_raw_message_start_event.py
  No description

beta_raw_message_stop_event.py
  No description

beta_raw_message_stream_event.py
  No description

beta_redacted_thinking_block.py
  No description

beta_redacted_thinking_block_param.py
  No description

beta_request_document_block_param.py
  Create a cache control breakpoint at this content block.""" citations: Optional[BetaCitationsConfigParam]

beta_request_mcp_server_tool_configuration_param.py
  No description

beta_request_mcp_server_url_definition_param.py
  No description

beta_request_mcp_tool_result_block_param.py
  Create a cache control breakpoint at this content block.""" content: Union[str, Iterable[BetaTextBlockParam]]

beta_search_result_block_param.py
  Create a cache control breakpoint at this content block.""" citations: BetaCitationsConfigParam

beta_server_tool_usage.py
  The number of web fetch tool requests.""" web_search_requests: int

beta_server_tool_use_block.py
  No description

beta_server_tool_use_block_param.py
  Create a cache control breakpoint at this content block."""

beta_signature_delta.py
  No description

beta_stop_reason.py
  No description

beta_text_block.py
  Citations supporting the text block. The type of citation returned will depend on the type of document being cited.

beta_text_block_param.py
  Create a cache control breakpoint at this content block.""" citations: Optional[Iterable[BetaTextCitationParam]]

beta_text_citation.py
  No description

beta_text_citation_param.py
  No description

beta_text_delta.py
  No description

beta_text_editor_code_execution_create_result_block.py
  No description

beta_text_editor_code_execution_create_result_block_param.py
  No description

beta_text_editor_code_execution_str_replace_result_block.py
  No description

beta_text_editor_code_execution_str_replace_result_block_param.py
  No description

beta_text_editor_code_execution_tool_result_block.py
  No description

beta_text_editor_code_execution_tool_result_block_param.py
  Create a cache control breakpoint at this content block."""

beta_text_editor_code_execution_tool_result_error.py
  No description

beta_text_editor_code_execution_tool_result_error_param.py
  No description

beta_text_editor_code_execution_view_result_block.py
  No description

beta_text_editor_code_execution_view_result_block_param.py
  No description

beta_thinking_block.py
  No description

beta_thinking_block_param.py
  No description

beta_thinking_config_disabled_param.py
  No description

beta_thinking_config_enabled_param.py
  Determines how many tokens Claude can use for its internal reasoning process. Larger budgets can enable more thorough analysis for complex problems, improving

beta_thinking_config_param.py
  No description

beta_thinking_delta.py
  No description

beta_tool_bash_20241022_param.py
  Name of the tool. This is how the tool will be called by the model and in `tool_use` blocks.

beta_tool_bash_20250124_param.py
  Name of the tool. This is how the tool will be called by the model and in `tool_use` blocks.

beta_tool_choice_any_param.py
  Whether to disable parallel tool use. Defaults to `false`. If set to `true`, the model will output exactly one tool

beta_tool_choice_auto_param.py
  Whether to disable parallel tool use. Defaults to `false`. If set to `true`, the model will output at most one tool

beta_tool_choice_none_param.py
  No description

beta_tool_choice_param.py
  No description

beta_tool_choice_tool_param.py
  The name of the tool to use.""" type: Required[Literal["tool"]]

beta_tool_computer_use_20241022_param.py
  The height of the display in pixels.""" display_width_px: Required[int]

beta_tool_computer_use_20250124_param.py
  The height of the display in pixels.""" display_width_px: Required[int]

beta_tool_param.py
  [JSON schema](https://json-schema.org/draft/2020-12) for this tool's input. This defines the shape of the `input` that your tool accepts and that the model

beta_tool_result_block_param.py
  Create a cache control breakpoint at this content block.""" content: Union[str, Iterable[Content]]

beta_tool_text_editor_20241022_param.py
  Name of the tool. This is how the tool will be called by the model and in `tool_use` blocks.

beta_tool_text_editor_20250124_param.py
  Name of the tool. This is how the tool will be called by the model and in `tool_use` blocks.

beta_tool_text_editor_20250429_param.py
  Name of the tool. This is how the tool will be called by the model and in `tool_use` blocks.

beta_tool_text_editor_20250728_param.py
  Name of the tool. This is how the tool will be called by the model and in `tool_use` blocks.

beta_tool_union_param.py
  No description

beta_tool_use_block.py
  No description

beta_tool_use_block_param.py
  Create a cache control breakpoint at this content block."""

beta_tool_uses_keep_param.py
  No description

beta_tool_uses_trigger_param.py
  No description

beta_url_image_source_param.py
  No description

beta_url_pdf_source_param.py
  No description

beta_usage.py
  Breakdown of cached tokens by TTL""" cache_creation_input_tokens: Optional[int] = None

beta_web_fetch_block.py
  ISO 8601 timestamp when the content was retrieved""" type: Literal["web_fetch_result"]

beta_web_fetch_block_param.py
  Fetched content URL""" retrieved_at: Optional[str]

beta_web_fetch_tool_20250910_param.py
  Name of the tool. This is how the tool will be called by the model and in `tool_use` blocks.

beta_web_fetch_tool_result_block.py
  No description

beta_web_fetch_tool_result_block_param.py
  Create a cache control breakpoint at this content block."""

beta_web_fetch_tool_result_error_block.py
  No description

beta_web_fetch_tool_result_error_block_param.py
  No description

beta_web_fetch_tool_result_error_code.py
  No description

beta_web_search_result_block.py
  No description

beta_web_search_result_block_param.py
  No description

beta_web_search_tool_20250305_param.py
  The city of the user.""" country: Optional[str]

beta_web_search_tool_request_error_param.py
  No description

beta_web_search_tool_result_block.py
  No description

beta_web_search_tool_result_block_content.py
  No description

beta_web_search_tool_result_block_param.py
  Create a cache control breakpoint at this content block."""

beta_web_search_tool_result_block_param_content_param.py
  No description

beta_web_search_tool_result_error.py
  No description

beta_web_search_tool_result_error_code.py
  No description

deleted_file.py
  ID of the deleted file.""" type: Optional[Literal["file_deleted"]] = None

file_list_params.py
  ID of the object to use as a cursor for pagination. When provided, returns the page of results immediately after this object.

file_metadata.py
  Unique object identifier. The format and length of IDs may change over time.

file_upload_params.py
  The file to upload""" betas: Annotated[List[AnthropicBetaParam], PropertyInfo(alias="anthropic-beta")]

message_count_tokens_params.py
  Input messages. Our models are trained to operate on alternating `user` and `assistant`

message_create_params.py
  The maximum number of tokens to generate before stopping. Note that our models may stop _before_ reaching this maximum. This parameter

training_data_bot\.venv\Lib\site-packages\anthropic\types\beta\messages/
--------------------------------------------------------------------------------

__init__.py
  No description

batch_create_params.py
  List of requests for prompt completion. Each is an individual request to create a Message.

batch_list_params.py
  ID of the object to use as a cursor for pagination. When provided, returns the page of results immediately after this object.

beta_deleted_message_batch.py
  ID of the Message Batch.""" type: Literal["message_batch_deleted"]

beta_message_batch.py
  Unique object identifier. The format and length of IDs may change over time.

beta_message_batch_canceled_result.py
  No description

beta_message_batch_errored_result.py
  No description

beta_message_batch_expired_result.py
  No description

beta_message_batch_individual_response.py
  Developer-provided ID created for each request in a Message Batch. Useful for matching results to requests, as results may be given out of request

beta_message_batch_request_counts.py
  Number of requests in the Message Batch that have been canceled. This is zero until processing of the entire Message Batch has ended.

beta_message_batch_result.py
  No description

beta_message_batch_succeeded_result.py
  No description

training_data_bot\.venv\Lib\site-packages\anthropic\types\beta/
--------------------------------------------------------------------------------

model_list_params.py
  ID of the object to use as a cursor for pagination. When provided, returns the page of results immediately after this object.

training_data_bot\.venv\Lib\site-packages\anthropic\types/
--------------------------------------------------------------------------------

beta_api_error.py
  No description

beta_authentication_error.py
  No description

beta_billing_error.py
  No description

beta_error.py
  No description

beta_error_response.py
  No description

beta_gateway_timeout_error.py
  No description

beta_invalid_request_error.py
  No description

beta_not_found_error.py
  No description

beta_overloaded_error.py
  No description

beta_permission_error.py
  No description

beta_rate_limit_error.py
  No description

cache_control_ephemeral_param.py
  The time-to-live for the cache control breakpoint. This may be one the following values:

cache_creation.py
  The number of input tokens used to create the 1 hour cache entry.""" ephemeral_5m_input_tokens: int

citation_char_location.py
  No description

citation_char_location_param.py
  No description

citation_content_block_location.py
  No description

citation_content_block_location_param.py
  No description

citation_page_location.py
  No description

citation_page_location_param.py
  No description

citation_search_result_location_param.py
  No description

citation_web_search_result_location_param.py
  No description

citations_config_param.py
  No description

citations_delta.py
  No description

citations_search_result_location.py
  No description

citations_web_search_result_location.py
  No description

completion.py
  Unique object identifier. The format and length of IDs may change over time.

completion_create_params.py
  The maximum number of tokens to generate before stopping. Note that our models may stop _before_ reaching this maximum. This parameter

content_block.py
  No description

content_block_delta_event.py
  The RawContentBlockDeltaEvent type should be used instead"""

content_block_param.py
  No description

content_block_source_content_param.py
  No description

content_block_source_param.py
  No description

content_block_start_event.py
  The RawContentBlockStartEvent type should be used instead"""

content_block_stop_event.py
  The RawContentBlockStopEvent type should be used instead"""

document_block_param.py
  Create a cache control breakpoint at this content block.""" citations: Optional[CitationsConfigParam]

image_block_param.py
  Create a cache control breakpoint at this content block."""

input_json_delta.py
  No description

message.py
  Unique object identifier. The format and length of IDs may change over time.

message_count_tokens_params.py
  Input messages. Our models are trained to operate on alternating `user` and `assistant`

message_count_tokens_tool_param.py
  No description

message_create_params.py
  The maximum number of tokens to generate before stopping. Note that our models may stop _before_ reaching this maximum. This parameter

message_delta_event.py
  The RawMessageDeltaEvent type should be used instead"""

message_delta_usage.py
  The cumulative number of input tokens used to create the cache entry.""" cache_read_input_tokens: Optional[int] = None

message_param.py
  No description

message_start_event.py
  The RawMessageStartEvent type should be used instead"""

message_stop_event.py
  The RawMessageStopEvent type should be used instead"""

message_stream_event.py
  The RawMessageStreamEvent type should be used instead"""

message_tokens_count.py
  The total number of tokens across the provided list of messages, system prompt, and tools.

training_data_bot\.venv\Lib\site-packages\anthropic\types\messages/
--------------------------------------------------------------------------------

__init__.py
  No description

batch_create_params.py
  List of requests for prompt completion. Each is an individual request to create a Message.

batch_list_params.py
  ID of the object to use as a cursor for pagination. When provided, returns the page of results immediately after this object.

deleted_message_batch.py
  ID of the Message Batch.""" type: Literal["message_batch_deleted"]

message_batch.py
  Unique object identifier. The format and length of IDs may change over time.

message_batch_canceled_result.py
  No description

message_batch_errored_result.py
  No description

message_batch_expired_result.py
  No description

message_batch_individual_response.py
  Developer-provided ID created for each request in a Message Batch. Useful for matching results to requests, as results may be given out of request

message_batch_request_counts.py
  Number of requests in the Message Batch that have been canceled. This is zero until processing of the entire Message Batch has ended.

message_batch_result.py
  No description

message_batch_succeeded_result.py
  No description

training_data_bot\.venv\Lib\site-packages\anthropic\types/
--------------------------------------------------------------------------------

metadata_param.py
  An external identifier for the user who is associated with the request. This should be a uuid, hash value, or other opaque identifier. Anthropic may use

model.py
  No description

model_info.py
  Unique model identifier.""" created_at: datetime

model_list_params.py
  ID of the object to use as a cursor for pagination. When provided, returns the page of results immediately after this object.

model_param.py
  No description

plain_text_source_param.py
  No description

raw_content_block_delta.py
  No description

raw_content_block_delta_event.py
  No description

raw_content_block_start_event.py
  No description

raw_content_block_stop_event.py
  No description

raw_message_delta_event.py
  Billing and rate-limit usage. Anthropic's API bills and rate-limits by token counts, as tokens represent the

raw_message_start_event.py
  No description

raw_message_stop_event.py
  No description

raw_message_stream_event.py
  No description

redacted_thinking_block.py
  No description

redacted_thinking_block_param.py
  No description

search_result_block_param.py
  Create a cache control breakpoint at this content block.""" citations: CitationsConfigParam

server_tool_usage.py
  The number of web search tool requests."""

server_tool_use_block.py
  No description

server_tool_use_block_param.py
  Create a cache control breakpoint at this content block."""

training_data_bot\.venv\Lib\site-packages\anthropic\types\shared/
--------------------------------------------------------------------------------

__init__.py
  No description

api_error_object.py
  No description

authentication_error.py
  No description

billing_error.py
  No description

error_object.py
  No description

error_response.py
  No description

gateway_timeout_error.py
  No description

invalid_request_error.py
  No description

not_found_error.py
  No description

overloaded_error.py
  No description

permission_error.py
  No description

rate_limit_error.py
  No description

training_data_bot\.venv\Lib\site-packages\anthropic\types/
--------------------------------------------------------------------------------

signature_delta.py
  No description

stop_reason.py
  No description

text_block.py
  Citations supporting the text block. The type of citation returned will depend on the type of document being cited.

text_block_param.py
  Create a cache control breakpoint at this content block.""" citations: Optional[Iterable[TextCitationParam]]

text_citation.py
  No description

text_citation_param.py
  No description

text_delta.py
  No description

thinking_block.py
  No description

thinking_block_param.py
  No description

thinking_config_disabled_param.py
  No description

thinking_config_enabled_param.py
  Determines how many tokens Claude can use for its internal reasoning process. Larger budgets can enable more thorough analysis for complex problems, improving

thinking_config_param.py
  No description

thinking_delta.py
  No description

tool_bash_20250124_param.py
  Name of the tool. This is how the tool will be called by the model and in `tool_use` blocks.

tool_choice_any_param.py
  Whether to disable parallel tool use. Defaults to `false`. If set to `true`, the model will output exactly one tool

tool_choice_auto_param.py
  Whether to disable parallel tool use. Defaults to `false`. If set to `true`, the model will output at most one tool

tool_choice_none_param.py
  No description

tool_choice_param.py
  No description

tool_choice_tool_param.py
  The name of the tool to use.""" type: Required[Literal["tool"]]

tool_param.py
  [JSON schema](https://json-schema.org/draft/2020-12) for this tool's input. This defines the shape of the `input` that your tool accepts and that the model

tool_result_block_param.py
  Create a cache control breakpoint at this content block.""" content: Union[str, Iterable[Content]]

tool_text_editor_20250124_param.py
  Name of the tool. This is how the tool will be called by the model and in `tool_use` blocks.

tool_text_editor_20250429_param.py
  Name of the tool. This is how the tool will be called by the model and in `tool_use` blocks.

tool_text_editor_20250728_param.py
  Name of the tool. This is how the tool will be called by the model and in `tool_use` blocks.

tool_union_param.py
  No description

tool_use_block.py
  No description

tool_use_block_param.py
  Create a cache control breakpoint at this content block."""

url_image_source_param.py
  No description

url_pdf_source_param.py
  No description

usage.py
  Breakdown of cached tokens by TTL""" cache_creation_input_tokens: Optional[int] = None

web_search_result_block.py
  No description

web_search_result_block_param.py
  No description

web_search_tool_20250305_param.py
  The city of the user.""" country: Optional[str]

web_search_tool_request_error_param.py
  No description

web_search_tool_result_block.py
  No description

web_search_tool_result_block_content.py
  No description

web_search_tool_result_block_param.py
  Create a cache control breakpoint at this content block."""

web_search_tool_result_block_param_content_param.py
  No description

web_search_tool_result_error.py
  No description

training_data_bot\.venv\Lib\site-packages\anyio/
--------------------------------------------------------------------------------

__init__.py
  Support deprecated aliases.""" if attr == "BrokenWorkerIntepreter":

training_data_bot\.venv\Lib\site-packages\anyio\_backends/
--------------------------------------------------------------------------------

__init__.py
  No description

_asyncio.py
  Shutdown and close event loop.""" if self._state is not _State.INITIALIZED:

_trio.py
  No description

training_data_bot\.venv\Lib\site-packages\anyio\_core/
--------------------------------------------------------------------------------

__init__.py
  No description

_asyncio_selector_thread.py
  No description

_contextmanagers.py
  Mixin class providing context manager functionality via a generator-based implementation.

_eventloop.py
  Run the given coroutine function in an asynchronous event loop. The current thread must not be already running an event loop.

_exceptions.py
  Raised when trying to use a resource that has been rendered unusable due to external causes (e.g. a send stream whose peer has disconnected).

_fileio.py
  An asynchronous file object. This class wraps a standard file object and provides async friendly versions of the

_resources.py
  Close an asynchronous resource in a cancelled scope. Doing this closes the resource without waiting on anything.

_signals.py
  Start receiving operating system signals. :param signals: signals to receive (e.g. ``signal.SIGINT``)

_sockets.py
  Connect to a host using the TCP protocol. This function implements the stateless version of the Happy Eyeballs algorithm (RFC

_streams.py
  Create a memory object stream. The stream's item type can be annotated like

_subprocesses.py
  Run an external command in a subprocess and wait until it completes. .. seealso:: :func:`subprocess.run`

_synchronization.py
  :ivar int tasks_waiting: number of tasks waiting on :meth:`~.Event.wait`

_tasks.py
  Wraps a unit of work that can be made separately cancellable. :param deadline: The time (clock value) when this scope is cancelled automatically

_tempfile.py
  An asynchronous temporary file that is automatically created and cleaned up. This class provides an asynchronous context manager interface to a temporary file.

_testing.py
  Represents an asynchronous task. :ivar int id: the unique identifier of the task

_typedattr.py
  Return a unique object, used to mark typed attributes.""" return object()

training_data_bot\.venv\Lib\site-packages\anyio\abc/
--------------------------------------------------------------------------------

__init__.py
  No description

_eventloop.py
  Run the given coroutine function in an asynchronous event loop. The current thread must not be already running an event loop.

_resources.py
  Abstract base class for all closeable asynchronous resources. Works as an asynchronous context manager which returns the instance itself on enter,

_sockets.py
  .. attribute:: family :type: socket.AddressFamily

_streams.py
  An interface for receiving objects. This interface makes no guarantees that the received messages arrive in the order in

_subprocesses.py
  An asynchronous version of :class:`subprocess.Popen`.""" @abstractmethod

_tasks.py
  Signal that the task has started. :param value: object passed back to the starter of the task

_testing.py
  Encapsulates a running event loop. Every call made through this object will use the same event loop.

training_data_bot\.venv\Lib\site-packages\anyio/
--------------------------------------------------------------------------------

from_thread.py
  Call a coroutine function from a worker thread. :param func: a coroutine function

lowlevel.py
  Check for cancellation and allow the scheduler to switch to another task. Equivalent to (but more efficient than)::

pytest_plugin.py
  Manages port generation based on specified socket kind, ensuring no duplicate ports are generated.

training_data_bot\.venv\Lib\site-packages\anyio\streams/
--------------------------------------------------------------------------------

__init__.py
  No description

buffered.py
  Wraps any bytes-based receive stream and uses a buffer to provide sophisticated receiving capabilities in the form of a byte stream.

file.py
  A byte stream that reads from a file in the file system. :param file: a file that has been opened for reading in binary mode

memory.py
  Receive the next item if it can be done without waiting. :return: the received item

stapled.py
  Combines two byte streams into a single, bidirectional byte stream. Extra attributes will be provided from both streams, with the receive stream

text.py
  Stream wrapper that decodes bytes to strings using the given encoding. Decoding is done using :class:`~codecs.IncrementalDecoder` which returns any

tls.py
  Contains Transport Layer Security related attributes.""" #: the selected ALPN protocol

training_data_bot\.venv\Lib\site-packages\anyio/
--------------------------------------------------------------------------------

to_interpreter.py
  import _interpqueues from _interpreters import NotShareableError

to_process.py
  Call the given function with the given arguments in a worker process. If the ``cancellable`` option is enabled and the task waiting for its completion is

to_thread.py
  Call the given function with the given arguments in a worker thread. If the ``cancellable`` option is enabled and the task waiting for its completion is

training_data_bot\.venv\Lib\site-packages\black/
--------------------------------------------------------------------------------

__init__.py
  Inject Black configuration from "pyproject.toml" into defaults in `ctx`. Returns the path to a successfully found and read configuration file, None

__main__.py
  No description

_width_table.py
  No description

brackets.py
  Builds on top of nodes.py to track brackets.""" from collections.abc import Iterable, Sequence

cache.py
  Caching of formatted files with feature-based invalidation.""" import hashlib

comments.py
  Describes a piece of syntax that is a comment. It's not a :class:`blib2to3.pytree.Leaf` so that:

concurrency.py
  Formatting many files at once via multiprocessing. Contains entrypoint and utilities. NOTE: this module is only imported if we need to format several files at once.

const.py
  No description

debug.py
  Pretty-print the lib2to3 AST of a given string of `code`. Convenience method for debugging.

files.py
  Return a directory containing .git, .hg, or pyproject.toml. pyproject.toml files are only considered if they contain a [tool.black]

handle_ipynb_magics.py
  Functions to process IPython magics with.""" import ast

linegen.py
  Generating lines of code.

lines.py
  Holds leaves and comments. Can be printed with `str(line)`.""" mode: Mode = field(repr=False)

mode.py
  Data structures configuring Black behavior. Mostly around Python language feature support per version and Black configuration

nodes.py
  blib2to3 Node/Leaf transformation-related utility functions.

numerics.py
  Formatting numeric literals.

output.py
  Nice output for Black. The double calls are for patching purposes in tests.

parsing.py
  Parse Python code and perform AST validation.

ranges.py
  Functions related to Black's formatting by line ranges feature.""" import difflib

report.py
  Summarize Black runs to users.

training_data_bot\.venv\Lib\site-packages\black\resources/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\black/
--------------------------------------------------------------------------------

rusty.py
  An error-handling model influenced by that used by the Rust programming language See https://doc.rust-lang.org/book/ch09-00-error-handling.html.

schema.py
  Get the stored complete schema for black's settings.""" assert tool_name == "black", "Only black is supported."

strings.py
  Simple formatting on strings. Further string formatting code is in trans.py.

trans.py
  String transformers that can split and merge strings.

training_data_bot\.venv\Lib\site-packages\blackd/
--------------------------------------------------------------------------------

__init__.py
  No description

__main__.py
  No description

middlewares.py
  No description

training_data_bot\.venv\Lib\site-packages\blib2to3/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\blib2to3\pgen2/
--------------------------------------------------------------------------------

__init__.py
  The pgen2 package."""

conv.py
  Convert graminit.[ch] spit out by pgen to Python code. Pgen is the Python parser generator.  It is useful to quickly create a

driver.py
  Parser driver. This provides a high-level interface to parse a file into a syntax tree.

grammar.py
  This module defines the data structures used to represent a grammar. These are a bit arcane because they are derived from the data

literals.py
  Safely evaluate Python string literals without using eval().""" import re

parse.py
  Parser engine for the grammar tables generated by pgen. The grammar table must be loaded first.

pgen.py
  No description

token.py
  Token constants (from "token.h").""" from typing import Final

tokenize.py
  Tokenization help for Python programs. generate_tokens(readline) is a generator that breaks a stream of

training_data_bot\.venv\Lib\site-packages\blib2to3/
--------------------------------------------------------------------------------

pygram.py
  Export the Python grammar and symbols.""" # Python imports

pytree.py
  Python parse tree definitions. This is a very concrete parse tree; we need to keep every token and

training_data_bot\.venv\Lib\site-packages\bs4/
--------------------------------------------------------------------------------

__init__.py
  Beautiful Soup Elixir and Tonic - "The Screen-Scraper's Friend". http://www.crummy.com/software/BeautifulSoup/

_deprecation.py
  Helper functions for deprecation. This interface is itself unstable and may change without warning. Do

_typing.py
  A protocol object which can accept either Python's built-in `re.Pattern` objects, or the similar ``Regex`` objects defined by the

_warnings.py
  Define some custom warnings.""" class GuessedAtParserWarning(UserWarning):

training_data_bot\.venv\Lib\site-packages\bs4\builder/
--------------------------------------------------------------------------------

__init__.py
  A way of looking up TreeBuilder subclasses by their name or by desired features.

_html5lib.py
  Use `html5lib <https://github.com/html5lib/html5lib-python>`_ to build a tree.

_htmlparser.py
  Use the HTMLParser library to parse HTML files that aren't too bad.""" from __future__ import annotations

_lxml.py
  Let the BeautifulSoup object know about the standard namespace mapping.

training_data_bot\.venv\Lib\site-packages\bs4/
--------------------------------------------------------------------------------

css.py
  Integration code for CSS selectors using `Soup Sieve <https://facelessuser.github.io/soupsieve/>`_ (pypi: ``soupsieve``). Acquire a `CSS` object through the `element.Tag.css` attribute of

dammit.py
  Beautiful Soup bonus library: Unicode, Dammit This library converts a bytestream to Unicode through any means

diagnose.py
  Diagnostic functions, mainly for use when doing tech support.""" # Use of this source code is governed by the MIT license.

element.py
  A namespaced attribute (e.g. the 'xml:lang' in 'xml:lang="en"') which remembers the namespace prefix ('xml') and the name ('lang')

exceptions.py
  Exceptions defined by Beautiful Soup itself.""" from typing import Union

filter.py
  `ElementFilter` encapsulates the logic necessary to decide: 1. whether a `PageElement` (a `Tag` or a `NavigableString`) matches a

formatter.py
  Describes a strategy to use when outputting a parse tree to a string. Some parts of this strategy come from the distinction between

training_data_bot\.venv\Lib\site-packages\certifi/
--------------------------------------------------------------------------------

__init__.py
  No description

__main__.py
  No description

core.py
  certifi.py ~~~~~~~~~~

training_data_bot\.venv\Lib\site-packages\charset_normalizer/
--------------------------------------------------------------------------------

__init__.py
  Charset-Normalizer ~~~~~~~~~~~~~~

__main__.py
  No description

api.py
  Given a raw bytes sequence, return the best possibles charset usable to render str objects. If there is no results, it is a strong indicator that the source is binary/not text.

cd.py
  Return associated unicode ranges in a single byte code page.

training_data_bot\.venv\Lib\site-packages\charset_normalizer\cli/
--------------------------------------------------------------------------------

__init__.py
  No description

__main__.py
  Ask a yes/no question via input() and return their answer. "question" is a string that is presented to the user.

training_data_bot\.venv\Lib\site-packages\charset_normalizer/
--------------------------------------------------------------------------------

constant.py
  No description

legacy.py
  chardet legacy method Detect the encoding of the given byte string. It should be mostly backward-compatible.

md.py
  Base abstract class used for mess detection plugins. All detectors MUST extend and implement given methods.

models.py
  Implemented to make sorted available upon CharsetMatches items.

utils.py
  Retrieve the Unicode range official name from a single character.

version.py
  Expose version

training_data_bot\.venv\Lib\site-packages\click/
--------------------------------------------------------------------------------

__init__.py
  Click is a simple Python module inspired by the stdlib optparse to make writing command line scripts fun. Unlike other modules, it's based

_compat.py
  Checks if a given encoding is ascii.""" try:

_termui_impl.py
  This module contains implementations for the termui module. To keep the import time of Click down, some infrequently used functionality is

_textwrap.py
  No description

_utils.py
  Enum used to define sentinel values. .. seealso::

_winconsole.py
  No description

core.py
  List all the subcommands of a group that start with the incomplete value and aren't hidden.

decorators.py
  Marks a callback as wanting to receive the current context object as first argument.

exceptions.py
  An exception that Click can handle and show to the user.""" #: The exit code for this exception.

formatting.py
  A helper function that intelligently wraps text.  By default, it assumes that it operates on a single paragraph of text but if the

globals.py
  Returns the current click context.  This can be used as a way to access the current context object from anywhere.  This is a more implicit

parser.py
  This module started out as largely a copy paste from the stdlib's optparse module with the features removed that we do not need from

shell_completion.py
  Perform shell completion for the given CLI program. :param cli: Command being called.

termui.py
  Prompts a user for input.  This is a convenience function that can be used to prompt a user for input later.

testing.py
  Patch ``io.BytesIO`` to let the written stream be copied to another. .. versionadded:: 8.2

types.py
  Represents the type of a parameter. Validates and converts values from the command line or Python into the correct type.

utils.py
  Wraps a function so that it swallows exceptions.""" def wrapper(*args: P.args, **kwargs: P.kwargs) -> R | None:

training_data_bot\.venv\Lib\site-packages\colorama/
--------------------------------------------------------------------------------

__init__.py
  No description

ansi.py
  No description

ansitowin32.py
  No description

initialise.py
  No description

training_data_bot\.venv\Lib\site-packages\colorama\tests/
--------------------------------------------------------------------------------

__init__.py
  No description

ansi_test.py
  No description

ansitowin32_test.py
  No description

initialise_test.py
  No description

isatty_test.py
  No description

utils.py
  No description

winterm_test.py
  No description

training_data_bot\.venv\Lib\site-packages\colorama/
--------------------------------------------------------------------------------

win32.py
  struct in wincon.h.""" _fields_ = [

winterm.py
  No description

training_data_bot\.venv\Lib\site-packages\dateutil/
--------------------------------------------------------------------------------

__init__.py
  No description

_common.py
  Common code used in multiple modules.

_version.py
  No description

easter.py
  This module offers a generic Easter computing method for any given year, using Western, Orthodox or Julian algorithms.

training_data_bot\.venv\Lib\site-packages\dateutil\parser/
--------------------------------------------------------------------------------

__init__.py
  No description

_parser.py
  This module offers a generic date/time string parser which is able to parse most known formats to represent a date and/or time.

isoparser.py
  This module offers a parser for ISO-8601 strings It is intended to support all valid date, time and datetime formats per the

training_data_bot\.venv\Lib\site-packages\dateutil/
--------------------------------------------------------------------------------

relativedelta.py
  The relativedelta type is designed to be applied to an existing datetime and can replace specific components of that datetime, or represents an interval

rrule.py
  The rrule module offers a small, complete, and very fast, implementation of the recurrence rules documented in the

training_data_bot\.venv\Lib\site-packages\dateutil\tz/
--------------------------------------------------------------------------------

__init__.py
  Warning raised when time zones are parsed from deprecated formats."""

_common.py
  Change unicode output into bytestrings in Python 2 tzname() API changed in Python 3. It used to return bytes, but was changed

_factories.py
  Alternate constructor that returns a fresh instance""" return type.__call__(cls, *args, **kwargs)

tz.py
  This module offers timezone implementations subclassing the abstract :py:class:`datetime.tzinfo` type. There are classes to handle tzfile format

win.py
  This module provides an interface to the native time zone data on Windows, including :py:class:`datetime.tzinfo` implementations.

training_data_bot\.venv\Lib\site-packages\dateutil/
--------------------------------------------------------------------------------

tzwin.py
  No description

utils.py
  This module offers general convenience and utility functions for dealing with datetimes.

training_data_bot\.venv\Lib\site-packages\dateutil\zoneinfo/
--------------------------------------------------------------------------------

__init__.py
  Wrapper for :func:`ZoneInfoFile.zones.get`. This is a convenience method for retrieving zones from the zone dictionary.

rebuild.py
  Rebuild the internal timezone info in dateutil/zoneinfo/zoneinfo*tar* filename is the timezone tarball from ``ftp.iana.org/tz``.

training_data_bot\.venv\Lib\site-packages\distro/
--------------------------------------------------------------------------------

__init__.py
  No description

__main__.py
  No description

distro.py
  The ``distro`` package (``distro`` stands for Linux Distribution) provides information about the Linux distribution it runs on, such as a reliable

training_data_bot\.venv\Lib\site-packages\docstring_parser/
--------------------------------------------------------------------------------

__init__.py
  Parse docstrings as per Sphinx notation.""" from .common import (

attrdoc.py
  Attribute docstrings parsing. .. seealso:: https://peps.python.org/pep-0257/#what-is-a-docstring

common.py
  Common methods for parsing.""" import enum

epydoc.py
  Epyoc-style docstring parsing. .. seealso:: http://epydoc.sourceforge.net/manual-fields.html

google.py
  Google-style docstring parsing.""" import inspect

numpydoc.py
  Numpydoc-style docstring parsing. :see: https://numpydoc.readthedocs.io/en/latest/format.html

parser.py
  The main parsing routine.""" import inspect

rest.py
  ReST-style docstring parsing.""" import inspect

training_data_bot\.venv\Lib\site-packages\docstring_parser\tests/
--------------------------------------------------------------------------------

__init__.py
  Tests for docstring parser."""

_pydoctor.py
  Private pydoctor customization code in order to exclude the package docstring_parser.tests from the API documentation. Based on Twisted code.

test_epydoc.py
  Tests for epydoc-style docstring routines.""" import typing as T

test_google.py
  Tests for Google-style docstring routines.""" import typing as T

test_numpydoc.py
  Tests for numpydoc-style docstring routines.""" import typing as T

test_parse_from_object.py
  Tests for parse_from_object function and attribute docstrings.""" from unittest.mock import patch

test_parser.py
  Tests for generic docstring routines.""" import pytest

test_rest.py
  Tests for ReST-style docstring routines.""" import typing as T

test_util.py
  Test for utility functions.""" from docstring_parser.common import DocstringReturns

training_data_bot\.venv\Lib\site-packages\docstring_parser/
--------------------------------------------------------------------------------

util.py
  Utility functions for working with docstrings.""" import typing as T

training_data_bot\.venv\Lib\site-packages\docx/
--------------------------------------------------------------------------------

__init__.py
  Initialize `docx` package. Export the `Document` constructor function and establish the mapping of part-type to

api.py
  Directly exposed API functions and classes, :func:`Document` for now. Provides a syntactically more convenient API for interacting with the OpcPackage graph.

blkcntnr.py
  Block item container, used by body, cell, header, etc. Block level items are things like paragraph and table, although there are a few other

comments.py
  Collection providing access to comments added to this document.""" from __future__ import annotations

training_data_bot\.venv\Lib\site-packages\docx\dml/
--------------------------------------------------------------------------------

__init__.py
  No description

color.py
  DrawingML objects related to color, ColorFormat being the most prominent.""" from __future__ import annotations

training_data_bot\.venv\Lib\site-packages\docx/
--------------------------------------------------------------------------------

document.py
  |Document| and closely related objects.""" from __future__ import annotations

training_data_bot\.venv\Lib\site-packages\docx\drawing/
--------------------------------------------------------------------------------

__init__.py
  DrawingML-related objects are in this subpackage.""" from __future__ import annotations

training_data_bot\.venv\Lib\site-packages\docx\enum/
--------------------------------------------------------------------------------

__init__.py
  No description

base.py
  Base classes and other objects used by enumerations.""" from __future__ import annotations

dml.py
  Enumerations used by DrawingML objects.""" from .base import BaseEnum, BaseXmlEnum

section.py
  Enumerations related to the main document in WordprocessingML files.""" from .base import BaseXmlEnum

shape.py
  Enumerations related to DrawingML shapes in WordprocessingML files.""" import enum

style.py
  Enumerations related to styles.""" from .base import BaseEnum, BaseXmlEnum

table.py
  Enumerations related to tables in WordprocessingML files.""" from docx.enum.base import BaseEnum, BaseXmlEnum

text.py
  Enumerations related to text in WordprocessingML files.""" from __future__ import annotations

training_data_bot\.venv\Lib\site-packages\docx/
--------------------------------------------------------------------------------

exceptions.py
  Exceptions used with python-docx. The base exception class is PythonDocxError.

training_data_bot\.venv\Lib\site-packages\docx\image/
--------------------------------------------------------------------------------

__init__.py
  Provides objects that can characterize image streams. That characterization is as to content type and size, as a required step in including

bmp.py
  Image header parser for BMP images.""" @classmethod

constants.py
  Constants specific the the image sub-package.""" class JPEG_MARKER_CODE:

exceptions.py
  Exceptions specific the the image sub-package.""" class InvalidImageStreamError(Exception):

gif.py
  Image header parser for GIF images. Note that the GIF format does not support resolution (DPI) information. Both

helpers.py
  Wraps a file-like object to provide access to structured data from a binary file. Byte-order is configurable. `base_offset` is added to any base value provided to

image.py
  Provides objects that can characterize image streams. That characterization is as to content type and size, as a required step in including

jpeg.py
  Objects related to parsing headers of JPEG image streams. Includes both JFIF and Exif sub-formats.

png.py
  Image header parser for PNG images.""" @property

tiff.py
  Image header parser for TIFF images. Handles both big and little endian byte ordering.

training_data_bot\.venv\Lib\site-packages\docx\opc/
--------------------------------------------------------------------------------

__init__.py
  No description

constants.py
  Constant values related to the Open Packaging Convention. In particular it includes content types and relationship types.

coreprops.py
  Provides CoreProperties, Dublin-Core attributes of the document. These are broadly-standardized attributes like author, last-modified, etc.

exceptions.py
  Exceptions specific to python-opc. The base exception class is OpcError.

oxml.py
  Temporary stand-in for main oxml module. This module came across with the PackageReader transplant. Probably much will get

package.py
  Objects that implement reading and writing OPC packages.""" from __future__ import annotations

packuri.py
  Provides the PackURI value type. Also some useful known pack URI strings such as PACKAGE_URI.

part.py
  Open Packaging Convention (OPC) objects related to package parts.""" from __future__ import annotations

training_data_bot\.venv\Lib\site-packages\docx\opc\parts/
--------------------------------------------------------------------------------

__init__.py
  No description

coreprops.py
  Core properties part, corresponds to ``/docProps/core.xml`` part in package.""" from __future__ import annotations

training_data_bot\.venv\Lib\site-packages\docx\opc/
--------------------------------------------------------------------------------

phys_pkg.py
  Provides a general interface to a `physical` OPC package, such as a zip file.""" import os

pkgreader.py
  Low-level, read-only API to a serialized Open Packaging Convention (OPC) package.""" from docx.opc.constants import RELATIONSHIP_TARGET_MODE as RTM

pkgwriter.py
  Provides low-level, write-only API to serialized (OPC) package. OPC stands for Open Packaging Convention. This is e, essentially an implementation of

rel.py
  Relationship-related objects.""" from __future__ import annotations

shared.py
  Objects shared by opc modules.""" from __future__ import annotations

spec.py
  Provides mappings that embody aspects of the Open XML spec ISO/IEC 29500.""" from docx.opc.constants import CONTENT_TYPE as CT

training_data_bot\.venv\Lib\site-packages\docx\oxml/
--------------------------------------------------------------------------------

__init__.py
  Initializes oxml sub-package. This including registering custom element classes corresponding to Open XML elements.

comments.py
  Custom element classes related to document comments.""" from __future__ import annotations

coreprops.py
  Custom element classes for core properties-related XML elements.""" from __future__ import annotations

document.py
  Custom element classes that correspond to the document part, e.g. <w:document>.""" from __future__ import annotations

drawing.py
  Custom element-classes for DrawingML-related elements like `<w:drawing>`. For legacy reasons, many DrawingML-related elements are in `docx.oxml.shape`. Expect

exceptions.py
  Exceptions for oxml sub-package.""" class XmlchemyError(Exception):

ns.py
  Namespace-related objects.""" from __future__ import annotations

numbering.py
  Custom element classes related to the numbering part.""" from docx.oxml.parser import OxmlElement

parser.py
  XML parser for python-docx.""" from __future__ import annotations

section.py
  Section-related custom element classes.""" from __future__ import annotations

settings.py
  Custom element classes related to document settings.""" from __future__ import annotations

shape.py
  Custom element classes for shape-related elements like `<w:inline>`.""" from __future__ import annotations

shared.py
  Objects shared by modules in the docx.oxml subpackage.""" from __future__ import annotations

simpletypes.py
  Simple-type classes, corresponding to ST_* schema items. These provide validation and format translation for values stored in XML element

styles.py
  Custom element classes related to the styles part.""" from __future__ import annotations

table.py
  Custom element classes for tables.""" from __future__ import annotations

training_data_bot\.venv\Lib\site-packages\docx\oxml\text/
--------------------------------------------------------------------------------

__init__.py
  No description

font.py
  Custom element classes related to run properties (font).""" from __future__ import annotations

hyperlink.py
  Custom element classes related to hyperlinks (CT_Hyperlink).""" from __future__ import annotations

pagebreak.py
  Custom element class for rendered page-break (CT_LastRenderedPageBreak).""" from __future__ import annotations

paragraph.py
  Custom element classes related to paragraphs (CT_P).""" from __future__ import annotations

parfmt.py
  Custom element classes related to paragraph properties (CT_PPr).""" from __future__ import annotations

run.py
  Custom element classes related to text runs (CT_R).""" from __future__ import annotations

training_data_bot\.venv\Lib\site-packages\docx\oxml/
--------------------------------------------------------------------------------

xmlchemy.py
  Enabling declarative definition of lxml custom element classes.""" from __future__ import annotations

training_data_bot\.venv\Lib\site-packages\docx/
--------------------------------------------------------------------------------

package.py
  WordprocessingML Package class and related objects.""" from __future__ import annotations

training_data_bot\.venv\Lib\site-packages\docx\parts/
--------------------------------------------------------------------------------

__init__.py
  No description

comments.py
  Contains comments added to the document.""" from __future__ import annotations

document.py
  |DocumentPart| and closely related objects.""" from __future__ import annotations

hdrftr.py
  Header and footer part objects.""" from __future__ import annotations

image.py
  The proxy class for an image part, and related objects.""" from __future__ import annotations

numbering.py
  |NumberingPart| and closely related objects.""" from ..opc.part import XmlPart

settings.py
  |SettingsPart| and closely related objects.""" from __future__ import annotations

story.py
  |StoryPart| and related objects.""" from __future__ import annotations

styles.py
  Provides StylesPart and related objects.""" from __future__ import annotations

training_data_bot\.venv\Lib\site-packages\docx/
--------------------------------------------------------------------------------

section.py
  The |Section| object and related proxy classes.""" from __future__ import annotations

settings.py
  Settings object, providing access to document-level settings.""" from __future__ import annotations

shape.py
  Objects related to shapes. A shape is a visual object that appears on the drawing layer of a document.

shared.py
  Objects shared by docx modules.""" from __future__ import annotations

training_data_bot\.venv\Lib\site-packages\docx\styles/
--------------------------------------------------------------------------------

__init__.py
  Sub-package module for docx.styles sub-package.""" from __future__ import annotations

latent.py
  Latent style-related objects.""" from docx.shared import ElementProxy

style.py
  Style object hierarchy.""" from __future__ import annotations

styles.py
  Styles object, container for all objects in the styles part.""" from __future__ import annotations

training_data_bot\.venv\Lib\site-packages\docx/
--------------------------------------------------------------------------------

table.py
  The |Table| object and related proxy classes.""" from __future__ import annotations

training_data_bot\.venv\Lib\site-packages\docx\text/
--------------------------------------------------------------------------------

__init__.py
  No description

font.py
  Font-related proxy objects.""" from __future__ import annotations

hyperlink.py
  Hyperlink-related proxy objects for python-docx, Hyperlink in particular. A hyperlink occurs in a paragraph, at the same level as a Run, and a hyperlink itself

pagebreak.py
  Proxy objects related to rendered page-breaks.""" from __future__ import annotations

paragraph.py
  Paragraph-related proxy types.""" from __future__ import annotations

parfmt.py
  Paragraph-related proxy types.""" from docx.enum.text import WD_LINE_SPACING

run.py
  Run-related proxy objects for python-docx, Run in particular.""" from __future__ import annotations

tabstops.py
  Tabstop-related proxy types.""" from docx.enum.text import WD_TAB_ALIGNMENT, WD_TAB_LEADER

training_data_bot\.venv\Lib\site-packages\docx/
--------------------------------------------------------------------------------

types.py
  Abstract types used by `python-docx`.""" from __future__ import annotations

training_data_bot\.venv\Lib\site-packages\dotenv/
--------------------------------------------------------------------------------

__init__.py
  Returns a string suitable for running as a shell script. Useful for converting a arguments passed to a fabric task

__main__.py
  Entry point for cli, enables execution with `python -m dotenv`""" from .cli import cli

cli.py
  Return a path for the ${pwd}/.env file. If pwd does not exist, return None.

ipython.py
  Register the %dotenv magic.""" ipython.register_magics(IPythonDotEnv)

main.py
  Return dotenv as dict""" if self._dict:

parser.py
  No description

variables.py
  \$\{ (?P<name>[^\}:]*)

version.py
  No description

training_data_bot\.venv\Lib\site-packages\fitz/
--------------------------------------------------------------------------------

__init__.py
  No description

table.py
  No description

utils.py
  No description

training_data_bot\.venv\Lib\site-packages\h11/
--------------------------------------------------------------------------------

__init__.py
  No description

_abnf.py
  No description

_connection.py
  An object encapsulating the state of an HTTP connection. Args:

_events.py
  Base class for h11 events.

_headers.py
  A list-like interface that allows iterating over headers as byte-pairs of (lowercased-name, value).

_readers.py
  No description

_receivebuffer.py
  Extract a fixed number of bytes from the buffer.

_state.py
  No description

_util.py
  Exception indicating a violation of the HTTP/1.1 protocol. This as an abstract base class, with two concrete base classes:

_version.py
  No description

_writers.py
  No description

training_data_bot\.venv\Lib\site-packages\httpcore/
--------------------------------------------------------------------------------

__init__.py
  No description

_api.py
  Sends an HTTP request, returning the response. ```

training_data_bot\.venv\Lib\site-packages\httpcore\_async/
--------------------------------------------------------------------------------

__init__.py
  No description

connection.py
  Generate a geometric sequence that has a ratio of 2 and starts with 0. For example:

connection_pool.py
  A connection pool for making HTTP requests.

http11.py
  No description

http2.py
  The HTTP/2 connection requires some initial setup before we can start using individual request/response streams on it.

http_proxy.py
  Append default_headers and override_headers, de-duplicating if a key exists in both cases.

interfaces.py
  Return `True` if the connection is currently able to accept an outgoing request.

socks_proxy.py
  A connection pool that sends requests via an HTTP proxy.

training_data_bot\.venv\Lib\site-packages\httpcore\_backends/
--------------------------------------------------------------------------------

__init__.py
  No description

anyio.py
  No description

auto.py
  No description

base.py
  No description

mock.py
  No description

sync.py
  Because the standard `SSLContext.wrap_socket` method does not work for `SSLSocket` objects, we need this class

trio.py
  No description

training_data_bot\.venv\Lib\site-packages\httpcore/
--------------------------------------------------------------------------------

_exceptions.py
  No description

_models.py
  Any arguments that are ultimately represented as bytes can be specified either as bytes or as strings.

_ssl.py
  No description

training_data_bot\.venv\Lib\site-packages\httpcore\_sync/
--------------------------------------------------------------------------------

__init__.py
  No description

connection.py
  Generate a geometric sequence that has a ratio of 2 and starts with 0. For example:

connection_pool.py
  A connection pool for making HTTP requests.

http11.py
  No description

http2.py
  The HTTP/2 connection requires some initial setup before we can start using individual request/response streams on it.

http_proxy.py
  Append default_headers and override_headers, de-duplicating if a key exists in both cases.

interfaces.py
  Return `True` if the connection is currently able to accept an outgoing request.

socks_proxy.py
  A connection pool that sends requests via an HTTP proxy.

training_data_bot\.venv\Lib\site-packages\httpcore/
--------------------------------------------------------------------------------

_synchronization.py
  This is a standard lock. In the sync case `Lock` provides thread locking.

_trace.py
  No description

_utils.py
  Return whether a socket, as identifed by its file descriptor, is readable. "A socket is readable" means that the read buffer isn't empty, i.e. that calling

training_data_bot\.venv\Lib\site-packages\httpx/
--------------------------------------------------------------------------------

__init__.py
  No description

__version__.py
  No description

_api.py
  Sends an HTTP request. **Parameters:**

_auth.py
  Base class for all authentication schemes. To implement a custom authentication scheme, subclass `Auth` and override

_client.py
  Return 'True' if 'location' is a HTTPS upgrade of 'url'

_config.py
  Timeout configuration. **Usage**:

_content.py
  If a request or response is serialized using pickle, then it is no longer attached to a stream for I/O purposes. Any stream operations should result

_decoders.py
  Handlers for Content-Encoding. See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Encoding

_exceptions.py
  Our exception hierarchy: * HTTPError

_main.py
  An HTTP command line client. Sends a request and displays the response.

_models.py
  Return `True` if `encoding` is a known codec.

_multipart.py
  Encode a name/value pair within a multipart form.

_status_codes.py
  HTTP status codes and reason phrases Status codes from the following RFCs are all observed:

training_data_bot\.venv\Lib\site-packages\httpx\_transports/
--------------------------------------------------------------------------------

__init__.py
  No description

asgi.py
  A custom AsyncTransport that handles sending requests directly to an ASGI app. ```python

base.py
  Send a single HTTP request and return a response. Developers shouldn't typically ever need to call into this API directly,

default.py
  Custom transports, with nicely configured defaults. The following additional keyword arguments are currently supported by httpcore...

mock.py
  No description

wsgi.py
  A custom transport that handles sending requests directly to an WSGI app. The simplest way to use this functionality is to use the `app` argument.

training_data_bot\.venv\Lib\site-packages\httpx/
--------------------------------------------------------------------------------

_types.py
  Type definitions for type checking purposes.

_urlparse.py
  An implementation of `urlparse` that provides URL validation and normalization as described by RFC3986.

_urls.py
  url = httpx.URL("HTTPS://jo%40email.com:a%20secret@müller.de:1234/pa%20th?search=ab#anchorlink") assert url.scheme == "https"

_utils.py
  Coerce a primitive data type into a string value. Note that we prefer JSON-style 'true'/'false' for boolean values here.

training_data_bot\.venv\Lib\site-packages\idna/
--------------------------------------------------------------------------------

__init__.py
  No description

codec.py
  No description

compat.py
  No description

core.py
  Base exception for all IDNA-encoding related problems""" pass

idnadata.py
  No description

intranges.py
  Given a list of integers, made up of (hopefully) a small number of long runs of consecutive integers, compute a representation of the form

package_data.py
  No description

uts46data.py
  IDNA Mapping Table from UTS46.""" __version__ = "15.1.0"

training_data_bot\.venv\Lib\site-packages\iniconfig/
--------------------------------------------------------------------------------

__init__.py
   brain-dead simple parser for ini-style files. (C) Ronny Pfannschmidt, Holger Krekel -- MIT licensed

_parse.py
  No description

_version.py
  No description

exceptions.py
  No description

training_data_bot\.venv\Lib\site-packages\jiter/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\lxml/
--------------------------------------------------------------------------------

__init__.py
  Returns a list of header include paths (for lxml itself, libxml2 and libxslt) needed to compile C code against lxml if it was built

_elementpath.py
  compile selector pattern""" if path[-1:] == "/":

builder.py
  The ``E`` Element factory for generating XML documents.

cssselect.py
  CSS Selectors based on XPath. This module supports selecting XML/HTML tags based on CSS selectors.

doctestcompare.py
  lxml-based doctest output comparison. Note: normally, you should just import the `lxml.usedoctest` and

ElementInclude.py
  Limited XInclude support for the ElementTree package. While lxml.etree has full support for XInclude (see

training_data_bot\.venv\Lib\site-packages\lxml\html/
--------------------------------------------------------------------------------

__init__.py
  The ``lxml.html`` tool set for HTML handling.

_diffcommand.py
  \

_difflib.py
  Module difflib -- helpers for computing deltas between objects. Function get_close_matches(word, possibilities, n=3, cutoff=0.6):

_html5builder.py
  Legacy module - don't use in new code! html5lib now has its own proper implementation.

_setmixin.py
  Mix-in for sets.  You must define __iter__, add, remove

builder.py
  A set of HTML generator tags for building HTML documents. Usage::

clean.py
  Backward-compatibility module for lxml_html_clean""" try:

defs.py
  Data taken from https://www.w3.org/TR/html401/index/elements.html and https://html.spec.whatwg.org/multipage/syntax.html#elements-2

diff.py
  doclist should be ordered from oldest to newest, like:: >>> version1 = 'Hello World'

ElementSoup.py
  Legacy interface to the BeautifulSoup HTML parser.

formfill.py
  Raised when no form can be found

html5parser.py
  An interface to html5lib that mimics the lxml.html interface.

soupparser.py
  External interface to the BeautifulSoup HTML parser.

usedoctest.py
  Doctest module for HTML comparison. Usage::

training_data_bot\.venv\Lib\site-packages\lxml\includes/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\lxml\includes\extlibs/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\lxml\includes\libexslt/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\lxml\includes\libxml/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\lxml\includes\libxslt/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\lxml\isoschematron/
--------------------------------------------------------------------------------

__init__.py
  The ``lxml.isoschematron`` package implements ISO Schematron support on top of the pure-xslt 'skeleton' implementation.

training_data_bot\.venv\Lib\site-packages\lxml/
--------------------------------------------------------------------------------

pyclasslookup.py
  No description

sax.py
  SAX-based adapter to copy trees from/to the Python standard library. Use the `ElementTreeContentHandler` class to build an ElementTree from

usedoctest.py
  Doctest module for XML comparison. Usage::

training_data_bot\.venv\Lib\site-packages/
--------------------------------------------------------------------------------

mypy_extensions.py
  Defines experimental extensions to the standard "typing" module that are supported by the mypy typechecker.

training_data_bot\.venv\Lib\site-packages\numpy/
--------------------------------------------------------------------------------

__config__.py
  Removes empty values in a `dict` recursively This ensures we remove values that Meson could not provide to CONFIG

__init__.py
  NumPy =====

_array_api_info.py
  Array API Inspection namespace This is the namespace for inspection functions as defined by the array API

_configtool.py
  No description

training_data_bot\.venv\Lib\site-packages\numpy\_core/
--------------------------------------------------------------------------------

__init__.py
  Contains the core of NumPy: ndarray, ufuncs, dtypes, etc. Please note that this module is private.  All functions and objects

_add_newdocs.py
  This is only meant to add docs to objects defined in C-extension modules. The purpose is to allow easier editing of the docstrings without

_add_newdocs_scalars.py
  This file is separate from ``_add_newdocs.py`` so that it can be mocked out by our sphinx ``conf.py`` during doc builds, where we want to avoid showing

_asarray.py
  Functions in the ``as*array`` family that promote array-likes into arrays. `require` fits this category despite its name not matching this pattern.

_dtype.py
  A place for code to be called from the implementation of np.dtype String handling is much easier to do correctly in python.

_dtype_ctypes.py
  Conversion from ctypes to dtype. In an ideal world, we could achieve this through the PEP3118 buffer protocol,

_exceptions.py
  Various richly-typed exceptions, that also help us deal with string formatting in python where it's easier.

_internal.py
  A place for internal code Some things are more easily handled Python.

_machar.py
  Machine arithmetic - determine the parameters of the floating-point arithmetic system

_methods.py
  Array methods which are called by both the C-code for the method and the Python code for the NumPy-namespace function

_string_helpers.py
  String-handling utilities to avoid locale-dependence. Used primarily to generate type name aliases.

_type_aliases.py
  Due to compatibility, numpy has a very large number of different naming conventions for the scalar types (those subclassing from `numpy.generic`).

_ufunc_config.py
  Functions for changing global ufunc configuration This provides helpers which wrap `_get_extobj_dict` and `_make_extobj`, and

arrayprint.py
  Array printing function $Id: arrayprint.py,v 1.9 2005/09/13 13:58:44 teoliphant Exp $

cversions.py
  Simple script to compute the api hash of the current API. The API has is defined by numpy_api_order and ufunc_api_order.

defchararray.py
  This module contains a set of functions for vectorized string operations and methods.

einsumfunc.py
  Implementation of optimized einsum.

fromnumeric.py
  Module containing non-deprecated functions borrowed from Numeric.

function_base.py
  Return evenly spaced numbers over a specified interval. Returns `num` evenly spaced samples, calculated over the

getlimits.py
  Machine limits for Float32 and Float64 and (long double) if available...

memmap.py
  Create a memory-map to an array stored in a *binary* file on disk. Memory-mapped files are used for accessing small segments of large files

multiarray.py
  Create the numpy._core.multiarray namespace for backward compatibility. In v1.16 the multiarray and umath c-extension modules were merged into

numeric.py
  Return an array of zeros with the same shape and type as a given array. Parameters

numerictypes.py
  numerictypes: Define the numeric type objects This module is designed so "from numerictypes import \\*" is safe.

overrides.py
  Implementation of __array_function__ overrides from NEP-18.""" import collections

printoptions.py
  Stores and defines the low-level format_options context variable. This is defined in its own file outside of the arrayprint module

records.py
  This module contains a set of functions for record arrays.

shape_base.py
  Convert inputs to arrays with at least one dimension. Scalar inputs are converted to 1-dimensional arrays, whilst

strings.py
  This module contains a set of functions for vectorized string operations.

training_data_bot\.venv\Lib\site-packages\numpy\_core\tests/
--------------------------------------------------------------------------------

_locales.py
  Provide class for testing in French locale

_natype.py
  No description

training_data_bot\.venv\Lib\site-packages\numpy\_core\tests\examples\cython/
--------------------------------------------------------------------------------

setup.py
  Provide python-space access to the functions exposed in numpy/__init__.pxd for testing.

training_data_bot\.venv\Lib\site-packages\numpy\_core\tests\examples\limited_api/
--------------------------------------------------------------------------------

setup.py
  Build an example package using the limited Python C API.

training_data_bot\.venv\Lib\site-packages\numpy\_core\tests/
--------------------------------------------------------------------------------

test__exceptions.py
  Tests of the ._exceptions module. Primarily for exercising the __str__ methods.

test_abc.py
  No description

test_api.py
  No description

test_argparse.py
  Tests for the private NumPy argument parsing functionality. They mainly exists to ensure good test coverage without having to try the

test_array_api_info.py
  No description

test_array_coercion.py
  Tests for array coercion, mainly through testing `np.array` results directly. Note that other such tests exist, e.g., in `test_api.py` and many corner-cases

test_array_interface.py
   Some codes to generate data and manage temporary buffers use when sharing with numpy via the array interface protocol.

test_arraymethod.py
  This file tests the generic aspects of ArrayMethod.  At the time of writing this is private API, but when added, public API may be added here.

test_arrayobject.py
  No description

test_arrayprint.py
  Basic test of array2string.""" a = np.arange(3)

test_casting_floatingpoint_errors.py
  Generate value+dtype pairs that generate floating point errors during casts.  The invalid casts to integers will generate "invalid" value

test_casting_unittests.py
  The tests exercise the casting machinery in a more low-level manner. The reason is mostly to test a new implementation of the casting machinery.

test_conversion_utils.py
  Tests for numpy/_core/src/multiarray/conversion_utils.c

test_cpu_dispatcher.py
  Testing the utilities of the CPU dispatcher

test_cpu_features.py
  ########################################### ### Extra debugging information

test_custom_dtypes.py
  The addition method is special for the scaled float, because it includes the "cast" between different factors, thus cast-safety

test_cython.py
  Check that the cython API can write to a vstring array.""" import checks

test_datetime.py
  Dates should have symmetric limits around the unix epoch at +/-np.int64

test_defchararray.py
  Ticket #1276""" def setup_method(self):

test_deprecations.py
  Tests related to deprecation warnings. Also a convenient place to document how deprecations should eventually be turned into errors.

test_dlpack.py
  No description

test_dtype.py
  Only test hash runs at all.""" dt = np.dtype(t)

test_einsum.py
  Most einsum operations are reductions and until NumPy 2.3 reductions never (or almost never?) used the `GROWINNER` mechanism to increase the

test_errstate.py
  No description

test_extint128.py
  Iterate over Cartesian product of *args, and if an exception is raised, add information of the current iterate.

test_function_base.py
  A generic object that supports the __array_interface__ and hence can in principle be converted to a numeric scalar, but is not

test_getlimits.py
   Test functions for limits module.

test_half.py
  Checks that all 16-bit values survive conversion

test_hashtable.py
  No description

test_indexerrors.py
  No description

test_indexing.py
  These tests use code to mimic the C-Code indexing for selection. NOTE:

test_item_selection.py
  No description

test_limited_api.py
  Test building a third-party C extension with the limited API and building a cython extension with the limited API

test_longdouble.py
  Confirm that extracting a value doesn't convert to python float""" o = 1 + LD_INFO.eps

test_machar.py
  Test machar. Given recent changes to hardcode type data, we might want to get rid of both MachAr and this test at some point.

test_mem_overlap.py
  Returns slices of length nelems, from start onwards, in direction sign.""" if nelems == 0:

test_mem_policy.py
   Add a memory policy that returns a false pointer 64 bytes into the actual allocation, and fill the prefix with some text. Then check at each

test_memmap.py
  No description

test_multiarray.py
  Allocate a new ndarray with aligned memory. The ndarray is guaranteed *not* aligned to twice the requested alignment.

test_multithreading.py
  No description

test_nditer.py
  import numpy as np it = np.nditer((np.array(1, dtype="i"),), op_dtypes=["S1"],

test_nep50_promotions.py
  This file adds basic tests to test the NEP 50 style promotion compatibility mode.  Most of these test are likely to be simply deleted again once NEP 50

test_numeric.py
  Metadata handling in promotion does not appear formalized right now in NumPy. This test should thus be considered to

test_numerictypes.py
  Check the creation of heterogeneous arrays zero-valued""" def test_zeros0D(self):

test_overrides.py
  Docstring.""" return 'original'

test_print.py
   Check formatting. This is only for the str function, and only for simple types.

test_protocols.py
  No description

test_records.py
   Verify fromrecords works with a 0-length input """ dtype = [('a', float), ('b', float)]

test_regression.py
  No description

test_scalar_ctors.py
  Test the scalar constructors, which also do type-coercion

test_scalar_methods.py
  Test the scalar constructors, which also do type-coercion

test_scalarbuffer.py
  Test scalar buffer interface adheres to PEP 3118

test_scalarinherit.py
   Test printing of scalar types.

test_scalarmath.py
  This is a thorough test attempting to cover important promotion paths and ensuring that arrays and scalars stay as aligned as possible.

test_scalarprint.py
   Test printing of scalar types.

test_shape_base.py
   Test to make sure equivalent Travis O's r1array function

test_simd.py
  To call NPV intrinsics without the attribute 'npyv' and auto suffixing intrinsics according to class attribute 'sfx'

test_simd_module.py
  This testing unit only for checking the sanity of common functionality, therefore all we need is just to take one submodule that represents any

test_stringdtype.py
  Test that inserting a scalar works.""" arr = np.array(string_list, dtype=dtype)

test_strings.py
  No description

test_ufunc.py
  Test generic loops. The loops to be tested are:

test_umath.py
  Helper to create "interesting" operands to cover common code paths: * scalar inputs

test_umath_accuracy.py
  No description

test_umath_complex.py
  No description

test_unicode.py
  Check the creation of zero-valued arrays""" def content_check(self, ua, ua_scalar, nbytes):

training_data_bot\.venv\Lib\site-packages\numpy\_core/
--------------------------------------------------------------------------------

umath.py
  Create the numpy._core.umath namespace for backward compatibility. In v1.16 the multiarray and umath c-extension modules were merged into a single

training_data_bot\.venv\Lib\site-packages\numpy/
--------------------------------------------------------------------------------

_distributor_init.py
   Distributor init file Distributors: you can add custom code here to support particular distributions

_expired_attrs_2_0.py
  Dict of expired attributes that are discontinued since 2.0 release. Each item is associated with a migration note.

_globals.py
  Module defining global singleton classes. This module raises a RuntimeError if an attempt to reload it is made. In that

training_data_bot\.venv\Lib\site-packages\numpy\_pyinstaller/
--------------------------------------------------------------------------------

__init__.py
  No description

hook-numpy.py
  This hook should collect all binary files and any hidden modules that numpy needs.

training_data_bot\.venv\Lib\site-packages\numpy\_pyinstaller\tests/
--------------------------------------------------------------------------------

__init__.py
  No description

pyinstaller-smoke.py
  A crude *bit of everything* smoke test to verify PyInstaller compatibility. PyInstaller typically goes wrong by forgetting to package modules, extension

test_pyinstaller.py
  Compile and run pyinstaller-smoke.py using PyInstaller.""" pyinstaller_cli = pytest.importorskip("PyInstaller.__main__").run

training_data_bot\.venv\Lib\site-packages\numpy/
--------------------------------------------------------------------------------

_pytesttester.py
  Pytest test running. This module implements the ``test()`` function for NumPy modules. The usual

training_data_bot\.venv\Lib\site-packages\numpy\_typing/
--------------------------------------------------------------------------------

__init__.py
  Private counterpart of ``numpy.typing``.""" from ._array_like import ArrayLike as ArrayLike

_add_docstring.py
  A module for creating docstrings for sphinx ``data`` domains.""" import re

_array_like.py
  A protocol class representing `~class.__array_function__`.""" def __array_function__(

_char_codes.py
  No description

_dtype_like.py
  No description

_extended_precision.py
  A module with platform-specific extended precision `numpy.number` subclasses.

_nbit.py
  A module with the precisions of platform-specific `~numpy.number`s.""" from typing import TypeAlias

_nbit_base.py
  A module with the precisions of generic `~numpy.number` types.""" from typing import final

_nested_sequence.py
  A module containing the `_NestedSequence` protocol.""" from typing import TYPE_CHECKING, Any, Protocol, TypeVar, runtime_checkable

_scalars.py
  No description

_shape.py
  No description

_ufunc.py
  No description

training_data_bot\.venv\Lib\site-packages\numpy\_utils/
--------------------------------------------------------------------------------

__init__.py
  This is a module for defining private helpers which do not depend on the rest of NumPy.

_convertions.py
  A set of methods retained from np.compat module that are still used across codebase.

_inspect.py
  Subset of inspect module from upstream python We use this instead of upstream because upstream inspect is slow to import, and

_pep440.py
  Utility to compare pep440 compatible version strings. The LooseVersion and StrictVersion classes that distutils provides don't

training_data_bot\.venv\Lib\site-packages\numpy\char/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\numpy/
--------------------------------------------------------------------------------

conftest.py
  Pytest configuration and fixtures for the Numpy test suite.

training_data_bot\.venv\Lib\site-packages\numpy\core/
--------------------------------------------------------------------------------

__init__.py
  The `numpy.core` submodule exists solely for backward compatibility purposes. The original `core` was renamed to `_core` and made private.

_dtype.py
  No description

_dtype_ctypes.py
  No description

_internal.py
  No description

_multiarray_umath.py
  A module that was compiled using NumPy 1.x cannot be run in NumPy {short_version} as it may crash. To support both 1.x and 2.x

_utils.py
  No description

arrayprint.py
  No description

defchararray.py
  No description

einsumfunc.py
  No description

fromnumeric.py
  No description

function_base.py
  No description

getlimits.py
  No description

multiarray.py
  No description

numeric.py
  No description

numerictypes.py
  No description

overrides.py
  No description

records.py
  No description

shape_base.py
  No description

umath.py
  No description

training_data_bot\.venv\Lib\site-packages\numpy\ctypeslib/
--------------------------------------------------------------------------------

__init__.py
  No description

_ctypeslib.py
  ============================ ``ctypes`` Utility Functions

training_data_bot\.venv\Lib\site-packages\numpy\doc/
--------------------------------------------------------------------------------

ufuncs.py
  =================== Universal Functions

training_data_bot\.venv\Lib\site-packages\numpy/
--------------------------------------------------------------------------------

dtypes.py
  This module is home to specific dtypes related functionality and their classes. For more general information about dtypes, also see `numpy.dtype` and

exceptions.py
  Exceptions and Warnings =======================

training_data_bot\.venv\Lib\site-packages\numpy\f2py/
--------------------------------------------------------------------------------

__init__.py
  Fortran to Python Interface Generator. Copyright 1999 -- 2011 Pearu Peterson all rights reserved.

__main__.py
  No description

__version__.py
  No description

training_data_bot\.venv\Lib\site-packages\numpy\f2py\_backends/
--------------------------------------------------------------------------------

__init__.py
  No description

_backend.py
  Compile the wrapper.""" pass

_distutils.py
  No description

_meson.py
  Template meson build file generation class.""" def __init__(

training_data_bot\.venv\Lib\site-packages\numpy\f2py/
--------------------------------------------------------------------------------

_isocbind.py
  ISO_C_BINDING maps for f2py2e. Only required declarations/macros/functions will be used.

_src_pyf.py
  process_file(filename) takes templated file .xxx.src and produces .xxx file where .xxx

auxfuncs.py
  Auxiliary functions for f2py2e. Copyright 1999 -- 2011 Pearu Peterson all rights reserved.

capi_maps.py
  Copyright 1999 -- 2011 Pearu Peterson all rights reserved. Copyright 2011 -- present NumPy Developers.

cb_rules.py
  Build call-back mechanism for f2py2e. Copyright 1999 -- 2011 Pearu Peterson all rights reserved.

cfuncs.py
  C declarations, CPP macros, and C functions for f2py2e. Only required declarations/macros/functions will be used.

common_rules.py
  Build common block mechanism for f2py2e. Copyright 1999 -- 2011 Pearu Peterson all rights reserved.

crackfortran.py
  crackfortran --- read fortran (77,90) code and extract declaration information. Copyright 1999 -- 2011 Pearu Peterson all rights reserved.

diagnose.py
  No description

f2py2e.py
  f2py2e - Fortran to Python C/API generator. 2nd Edition. See __usage__ below.

f90mod_rules.py
  Build F90 module support for f2py2e. Copyright 1999 -- 2011 Pearu Peterson all rights reserved.

func2subr.py
  Rules for building C/API module with f2py2e. Copyright 1999 -- 2011 Pearu Peterson all rights reserved.

rules.py
  Rules for building C/API module with f2py2e. Here is a skeleton of a new wrapper function (13Dec2001):

symbolic.py
  Fortran/C symbolic expressions References:

training_data_bot\.venv\Lib\site-packages\numpy\f2py\tests/
--------------------------------------------------------------------------------

__init__.py
  No description

test_abstract_interface.py
  No description

test_array_from_pyobj.py
  Build the required testing extension module

test_assumed_shape.py
  No description

test_block_docstring.py
  No description

test_callback.py
  \ a = t(fun,[fun_extra_args])

test_character.py
  subroutine {fprefix}_input_{fsuffix}(c, o, n) character*{clength}, intent(in) :: c

test_common.py
  No description

test_crackfortran.py
  This test suite tests various expressions that are used as dimension specifications.

test_data.py
  No description

test_docs.py
  No description

test_f2cmap.py
  No description

test_f2py2e.py
  Takes in a temporary file for testing and returns the expected output and input paths Here expected output is essentially one of any of the possible generated

test_isoc.py
  No description

test_kind.py
  Test `int` kind_func for integers up to 10**40.""" selectedintkind = self.module.selectedintkind

test_mixed.py
  \ a = bar11()

test_modules.py
  \ i : 'i'-scalar

test_parameter.py
  No description

test_pyf_src.py
  python module foo <_rd=real,double precision>

test_quoted_character.py
  See https://github.com/numpy/numpy/pull/10676.

test_regression.py
  No description

test_return_character.py
  No description

test_return_complex.py
  No description

test_return_integer.py
  No description

test_return_logical.py
  No description

test_return_real.py
  python module c_ext_return_real usercode \'\'\'

test_routines.py
  No description

test_semicolon_split.py
  python module {module_name} usercode '''

test_size.py
  No description

test_string.py
  Return the content of a string buffer as integer value. For example:

test_symbolic.py
  No description

test_value_attrspec.py
  No description

util.py
  Utility functions for - building and importing modules on test time, using a temporary location

training_data_bot\.venv\Lib\site-packages\numpy\f2py/
--------------------------------------------------------------------------------

use_rules.py
  Build 'use others module data' mechanism for f2py2e. Copyright 1999 -- 2011 Pearu Peterson all rights reserved.

training_data_bot\.venv\Lib\site-packages\numpy\fft/
--------------------------------------------------------------------------------

__init__.py
  Discrete Fourier Transform ==========================

_helper.py
  Discrete Fourier Transforms - _helper.py

_pocketfft.py
  Discrete Fourier Transforms Routines in this module:

helper.py
  No description

training_data_bot\.venv\Lib\site-packages\numpy\fft\tests/
--------------------------------------------------------------------------------

__init__.py
  No description

test_helper.py
  Test functions for fftpack.helper module Copied from fftpack.helper by Pearu Peterson, October 2005

test_pocketfft.py
  No description

training_data_bot\.venv\Lib\site-packages\numpy\lib/
--------------------------------------------------------------------------------

__init__.py
  ``numpy.lib`` is mostly a space for implementing functions that don't belong in core or in another NumPy submodule with a clear purpose

_array_utils_impl.py
  Miscellaneous utils.

_arraypad_impl.py
  The arraypad module contains a group of functions to pad values onto the edges of an n-dimensional array.

_arraysetops_impl.py
  Set operations for arrays based on sorting. Notes

_arrayterator_impl.py
  A buffered iterator for big arrays. This module solves the problem of iterating over a big file-based array

_datasource.py
  A file interface for handling local and remote data files. The goal of datasource is to abstract some of the file system operations

_format_impl.py
  Binary serialization NPY format

_function_base_impl.py
  Rotate an array by 90 degrees in the plane specified by axes. Rotation direction is from the first towards the second axis.

_histograms_impl.py
  Histogram-related functions

_index_tricks_impl.py
  Construct an open mesh from multiple sequences. This function takes N 1-D sequences and returns N outputs with N

_iotools.py
  A collection of functions designed to help I/O with ascii files.

_nanfunctions_impl.py
  Functions that ignore NaN. Functions

_npyio_impl.py
  IO related functions.

_polynomial_impl.py
  Functions to operate on polynomials.

_scimath_impl.py
  Wrapper functions to more user-friendly calling of certain math functions whose output data-type is different than the input data-type in certain

_shape_base_impl.py
  Take values from the input array by matching 1d index and data slices. This iterates over matching 1d slices oriented along the specified axis in

_stride_tricks_impl.py
  Utilities that manipulate strides to achieve desirable effects. An explanation of strides can be found in the :ref:`arrays.ndarray`.

_twodim_base_impl.py
   Basic functions for manipulating 2d arrays

_type_check_impl.py
  Automatically adapted for numpy Sep 19, 2005 by convertcode.py

_ufunclike_impl.py
  Module of functions that are like ufuncs in acting on arrays and optionally storing results in an output array.

_user_array_impl.py
  Container class for backward compatibility with NumArray. The user_array.container class exists for backward compatibility with NumArray

_utils_impl.py
  Print information about various resources in the system including available intrinsic support and BLAS/LAPACK library

_version.py
  Utility to compare (NumPy) version strings. The NumpyVersion class allows properly comparing numpy version strings.

array_utils.py
  No description

format.py
  No description

introspect.py
  Introspection helper functions.

mixins.py
  Mixin classes for custom array types that don't inherit from ndarray.

npyio.py
  No description

recfunctions.py
  Collection of utilities to manipulate structured arrays. Most of these functions were initially implemented by John Hunter for

scimath.py
  No description

stride_tricks.py
  No description

training_data_bot\.venv\Lib\site-packages\numpy\lib\tests/
--------------------------------------------------------------------------------

__init__.py
  No description

test__datasource.py
  No description

test__iotools.py
  No description

test__version.py
  Tests for the NumpyVersion class.

test_array_utils.py
  No description

test_arraypad.py
  Tests for the array padding functions.

test_arraysetops.py
  Test functions for 1D array set operations.

test_arrayterator.py
  No description

test_format.py
  No description

test_function_base.py
  Like real + 1j * imag, but behaves as expected when imag contains non-finite values

test_histograms.py
  Provide test coverage when using provided estimators for optimal number of bins

test_index_tricks.py
  No description

test_io.py
  Helper IO class. Writes encode strings to bytes if needed, reads return bytes.

test_loadtxt.py
  Tests specific to `np.loadtxt` added during the move of loadtxt to be backed by C code.

test_mixins.py
  Object that opts out of __array_ufunc__.""" __array_ufunc__ = None

test_nanfunctions.py
  Construct a signature and replace all default parameter-values.""" prm_list = []

test_packbits.py
  No description

test_polynomial.py
  Regression test for gh-5096.

test_recfunctions.py
  Test append_fields with arrays containing objects

test_regression.py
  Old-style class in python2, normal class in python3""" pass

test_shape_base.py
   hack in keepdims behavior into a function taking an axis """ @functools.wraps(func)

test_stride_tricks.py
  No description

test_twodim_base.py
  Test functions for matrix module

test_type_check.py
  No description

test_ufunclike.py
  No description

test_utils.py
  No description

training_data_bot\.venv\Lib\site-packages\numpy\lib/
--------------------------------------------------------------------------------

user_array.py
  No description

training_data_bot\.venv\Lib\site-packages\numpy\linalg/
--------------------------------------------------------------------------------

__init__.py
  ``numpy.linalg`` ================

_linalg.py
  Lite version of scipy.linalg. Notes

linalg.py
  No description

training_data_bot\.venv\Lib\site-packages\numpy\linalg\tests/
--------------------------------------------------------------------------------

__init__.py
  No description

test_deprecations.py
  Test deprecation and future warnings.

test_linalg.py
   Test functions for linalg module

test_regression.py
   Test functions for linalg module

training_data_bot\.venv\Lib\site-packages\numpy\ma/
--------------------------------------------------------------------------------

__init__.py
  ============= Masked Arrays

core.py
  numpy.ma : a package to handle missing or invalid values. This package was initially written for numarray by Paul F. Dubois

extras.py
  Masked arrays add-ons. A collection of utilities for `numpy.ma`.

mrecords.py
  :mod:`numpy.ma..mrecords` Defines the equivalent of :class:`numpy.recarrays` for masked arrays,

training_data_bot\.venv\Lib\site-packages\numpy\ma\tests/
--------------------------------------------------------------------------------

__init__.py
  No description

test_arrayobject.py
  No description

test_core.py
  Tests suite for MaskedArray & subclassing. :author: Pierre Gerard-Marchant

test_deprecations.py
  Test deprecation and future warnings.

test_extras.py
  Tests suite for MaskedArray. Adapted from the original test_ma by Pierre Gerard-Marchant

test_mrecords.py
  Tests suite for mrecords. :author: Pierre Gerard-Marchant

test_old_ma.py
  No description

test_regression.py
  No description

test_subclassing.py
  Tests suite for MaskedArray & subclassing. :author: Pierre Gerard-Marchant

training_data_bot\.venv\Lib\site-packages\numpy\ma/
--------------------------------------------------------------------------------

testutils.py
  Miscellaneous functions for testing masked arrays and subclasses :author: Pierre Gerard-Marchant

training_data_bot\.venv\Lib\site-packages\numpy/
--------------------------------------------------------------------------------

matlib.py
  Return a new matrix of given shape and type, without initializing entries. Parameters

training_data_bot\.venv\Lib\site-packages\numpy\matrixlib/
--------------------------------------------------------------------------------

__init__.py
  Sub-package containing the matrix class and related functions.

defmatrix.py
  Interpret the input as a matrix. Unlike `matrix`, `asmatrix` does not make a copy if the input is already

training_data_bot\.venv\Lib\site-packages\numpy\matrixlib\tests/
--------------------------------------------------------------------------------

__init__.py
  No description

test_defmatrix.py
  Test whether matrix.sum(axis=1) preserves orientation. Fails in NumPy <= 0.9.6.2127.

test_interaction.py
  Tests of interaction of matrix with other parts of numpy. Note that tests with MaskedArray and linalg are done in separate files.

test_masked_matrix.py
  No description

test_matrix_linalg.py
   Test functions for linalg module using the matrix class.""" import numpy as np

test_multiarray.py
  No description

test_numeric.py
  No description

test_regression.py
  No description

training_data_bot\.venv\Lib\site-packages\numpy\polynomial/
--------------------------------------------------------------------------------

__init__.py
  A sub-package for efficiently dealing with polynomials. Within the documentation for this sub-package, a "finite power series,"

_polybase.py
  Abstract base class for the various polynomial Classes. The ABCPolyBase class provides the methods needed to implement the common API

chebyshev.py
  ==================================================== Chebyshev Series (:mod:`numpy.polynomial.chebyshev`)

hermite.py
  ============================================================== Hermite Series, "Physicists" (:mod:`numpy.polynomial.hermite`)

hermite_e.py
  =================================================================== HermiteE Series, "Probabilists" (:mod:`numpy.polynomial.hermite_e`)

laguerre.py
  ================================================== Laguerre Series (:mod:`numpy.polynomial.laguerre`)

legendre.py
  ================================================== Legendre Series (:mod:`numpy.polynomial.legendre`)

polynomial.py
  ================================================= Power Series (:mod:`numpy.polynomial.polynomial`)

polyutils.py
  Utility classes and functions for the polynomial modules. This module provides: error and warning objects; a polynomial base class;

training_data_bot\.venv\Lib\site-packages\numpy\polynomial\tests/
--------------------------------------------------------------------------------

__init__.py
  No description

test_chebyshev.py
  Tests for chebyshev module.

test_classes.py
  Test inter-conversion of different polynomial classes. This tests the convert and cast methods of all the polynomial classes.

test_hermite.py
  Tests for hermite module.

test_hermite_e.py
  Tests for hermite_e module.

test_laguerre.py
  Tests for laguerre module.

test_legendre.py
  Tests for legendre module.

test_polynomial.py
  Tests for polynomial module.

test_polyutils.py
  Tests for polyutils module.

test_printing.py
  Test both numpy and built-in complex.""" coefs = [0 + 1j, 1 + 1j, -2 + 2j, 3 + 0j]

test_symbol.py
  Tests related to the ``symbol`` attribute of the ABCPolyBase class.

training_data_bot\.venv\Lib\site-packages\numpy\random/
--------------------------------------------------------------------------------

__init__.py
  ======================== Random Number Generation

training_data_bot\.venv\Lib\site-packages\numpy\random\_examples\cffi/
--------------------------------------------------------------------------------

extending.py
  Use cffi to access any of the underlying C functions from distributions.h

parse.py
  Parse distributions.h located in inc_dir for CFFI, filling in the ffi.cdef Read the function declarations without the "#define ..." macros that will

training_data_bot\.venv\Lib\site-packages\numpy\random\_examples\numba/
--------------------------------------------------------------------------------

extending.py
  No description

extending_distributions.py
  Building the required library in this example requires a source distribution of NumPy or clone of the NumPy git repository since distributions.c is not

training_data_bot\.venv\Lib\site-packages\numpy\random/
--------------------------------------------------------------------------------

_pickle.py
  Pickling helper function that returns a bit generator object Parameters

training_data_bot\.venv\Lib\site-packages\numpy\random\tests/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\numpy\random\tests\data/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\numpy\random\tests/
--------------------------------------------------------------------------------

test_direct.py
   Test spawning new generators and bit_generators directly.

test_extending.py
  No description

test_generator_mt19937.py
  No description

test_generator_mt19937_regressions.py
  No description

test_random.py
  No description

test_randomstate.py
  Ensures that the singleton bitgen is restored after a test""" orig_bitgen = np.random.get_bit_generator()

test_randomstate_regression.py
  No description

test_regression.py
  No description

test_seed_sequence.py
   Check that SeedSequence generates data the same as the C++ reference. https://gist.github.com/imneme/540829265469e673d045

test_smoke.py
  No description

training_data_bot\.venv\Lib\site-packages\numpy\rec/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\numpy\strings/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\numpy\testing/
--------------------------------------------------------------------------------

__init__.py
  Common test support for all numpy test scripts. This single module should provide all the common functionality for numpy tests

training_data_bot\.venv\Lib\site-packages\numpy\testing\_private/
--------------------------------------------------------------------------------

__init__.py
  No description

extbuild.py
  Build a c-extension module on-the-fly in tests. See build_and_import_extensions for usage hints

utils.py
  Utility function to facilitate testing.

training_data_bot\.venv\Lib\site-packages\numpy\testing/
--------------------------------------------------------------------------------

overrides.py
  Tools for testing implementations of __array_function__ and ufunc overrides

print_coercion_tables.py
  Prints type-coercion tables for the built-in NumPy types

training_data_bot\.venv\Lib\site-packages\numpy\testing\tests/
--------------------------------------------------------------------------------

__init__.py
  No description

test_utils.py
  Test two equal array of rank 1 are found equal.""" a = np.array([1, 2])

training_data_bot\.venv\Lib\site-packages\numpy\tests/
--------------------------------------------------------------------------------

__init__.py
  No description

test__all__.py
  No description

test_configtool.py
  No description

test_ctypeslib.py
   Test that arguments are coerced from arrays """ c_forward_pointer.restype = ctypes.c_void_p

test_lazyloading.py
  No description

test_matlib.py
  No description

test_numpy_config.py
  Check the numpy config is valid.

test_numpy_version.py
  Check the numpy version is valid. Note that a development version is marked by the presence of 'dev0' or '+'

test_public_api.py
  Returns a mapping of all objects with the wrong __module__ attribute.""" if module_name is None:

test_reloading.py
  At the time of writing this, it is *not* truly supported, but apparently enough users rely on it, for it to be an annoying change

test_scripts.py
   Test scripts Test that we can run executable scripts that have been installed with numpy.

test_warnings.py
  Tests which scan for certain occurrences in the code, they may not find all of these occurrences but should catch almost all.

training_data_bot\.venv\Lib\site-packages\numpy\typing/
--------------------------------------------------------------------------------

__init__.py
  ============================ Typing (:mod:`numpy.typing`)

mypy_plugin.py
  A mypy_ plugin for managing a number of platform-specific annotations. Its functionality can be split into three distinct parts:

training_data_bot\.venv\Lib\site-packages\numpy\typing\tests/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\numpy\typing\tests\data\pass/
--------------------------------------------------------------------------------

arithmetic.py
  No description

array_constructors.py
  No description

array_like.py
  No description

arrayprint.py
  No description

arrayterator.py
  No description

bitwise_ops.py
  No description

comparisons.py
  No description

dtype.py
  No description

einsumfunc.py
  No description

flatiter.py
  No description

fromnumeric.py
  Tests for :mod:`numpy._core.fromnumeric`.""" import numpy as np

index_tricks.py
  No description

lib_user_array.py
  Based on the `if __name__ == "__main__"` test code in `lib/_user_array_impl.py`.""" from __future__ import annotations

lib_utils.py
  No description

lib_version.py
  No description

literal.py
  No description

ma.py
  No description

mod.py
  No description

modules.py
  No description

multiarray.py
  No description

ndarray_conversion.py
  No description

ndarray_misc.py
  Tests for miscellaneous (non-magic) ``np.ndarray``/``np.generic`` methods. More extensive tests are performed for the methods'

ndarray_shape_manipulation.py
  No description

nditer.py
  No description

numeric.py
  Tests for :mod:`numpy._core.numeric`. Does not include tests which fall under ``array_constructors``.

numerictypes.py
  No description

random.py
  No description

recfunctions.py
  These tests are based on the doctests from `numpy/lib/recfunctions.py`.""" from typing import Any, assert_type

scalars.py
  No description

shape.py
  No description

simple.py
  Simple expression that should pass with mypy.""" import operator

simple_py3.py
  No description

ufunc_config.py
  Typing tests for `numpy._core._ufunc_config`.""" import numpy as np

ufunclike.py
  No description

ufuncs.py
  No description

warnings_and_errors.py
  No description

training_data_bot\.venv\Lib\site-packages\numpy\typing\tests/
--------------------------------------------------------------------------------

test_isfile.py
  Test if all ``.pyi`` files are properly installed.""" for file in FILES:

test_runtime.py
  Test the runtime usage of `numpy.typing`.""" from typing import (

test_typing.py
  Split at the first occurrence of the ``:`` character. Windows drive-letters (*e.g.* ``C:``) are ignored herein.

training_data_bot\.venv\Lib\site-packages\numpy/
--------------------------------------------------------------------------------

version.py
  Module to expose more detailed version info for the installed `numpy`

training_data_bot\.venv\Lib\site-packages\openai/
--------------------------------------------------------------------------------

__init__.py
  No description

__main__.py
  No description

_base_client.py
  Stores the necessary information to build the request to retrieve the next page. Either `url` or `params` must be set.

_client.py
  Base URL for WebSocket connections. If not specified, the default base URL will be used, with 'wss://' replacing the

_compat.py
  No description

_constants.py
  No description

_exceptions.py
  The API response body. If the API responded with a valid JSON structure then this property will be the

training_data_bot\.venv\Lib\site-packages\openai\_extras/
--------------------------------------------------------------------------------

__init__.py
  No description

_common.py
  OpenAI error: missing `{library}`

numpy_proxy.py
  No description

pandas_proxy.py
  No description

sounddevice_proxy.py
  No description

training_data_bot\.venv\Lib\site-packages\openai/
--------------------------------------------------------------------------------

_files.py
  No description

_legacy_response.py
  This is a legacy class as it will be replaced by `APIResponse` and `AsyncAPIResponse` in the `_response.py` file in the next major

_models.py
  The ID of the request, returned via the X-Request-ID header. Useful for debugging requests and reporting issues to OpenAI. This will **only** be set for the top-level response object, it will not be defined for nested objects. For example:

_module_client.py
  No description

_qs.py
  No description

_resource.py
  No description

_response.py
  The number of retries made. If no retries happened this will be `0`""" def __init__(

_streaming.py
  Provides the core interface to iterate over a synchronous stream response.""" response: httpx.Response

_types.py
  For parameters with a meaningful None value, we need to distinguish between the user explicitly passing None, and the user not passing the parameter at

training_data_bot\.venv\Lib\site-packages\openai\_utils/
--------------------------------------------------------------------------------

__init__.py
  No description

_compat.py
  No description

_datetime_parse.py
  This file contains code from https://github.com/pydantic/pydantic/blob/main/pydantic/v1/datetime_parse.py without the Pydantic v1 specific errors.

_logs.py
  No description

_proxy.py
  Implements data methods to pretend that an instance is another instance. This includes forwarding attribute access and other methods.

_reflection.py
  Returns whether or not the given function has a specific parameter""" sig = inspect.signature(func)

_resources_proxy.py
  A proxy for the `openai.resources` module. This is used so that we can lazily import `openai.resources` only when

_streams.py
  No description

_sync.py
  Asynchronously run function *func* in a separate thread. Any *args and **kwargs supplied for this function are directly passed

_transform.py
  Metadata class to be used in Annotated types to provide information about a given type. For example:

_typing.py
  If the given type is `typing.Iterable[T]`""" origin = get_origin(typ) or typ

_utils.py
  Recursively extract files from the given dictionary based on specified paths. A path may look like this ['foo', 'files', '<array>', 'data'].

training_data_bot\.venv\Lib\site-packages\openai/
--------------------------------------------------------------------------------

_version.py
  No description

training_data_bot\.venv\Lib\site-packages\openai\cli/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\openai\cli\_api/
--------------------------------------------------------------------------------

__init__.py
  No description

_main.py
  No description

audio.py
  No description

training_data_bot\.venv\Lib\site-packages\openai\cli\_api\chat/
--------------------------------------------------------------------------------

__init__.py
  No description

completions.py
  What sampling temperature to use. Higher values means the model will take more risks. Try 0.9 for more creative applications, and 0 (argmax sampling) for ones with a well-defined answer.

training_data_bot\.venv\Lib\site-packages\openai\cli\_api/
--------------------------------------------------------------------------------

completions.py
  What sampling temperature to use. Higher values means the model will take more risks. Try 0.9 for more creative applications, and 0 (argmax sampling) for ones with a well-defined answer.

files.py
  No description

training_data_bot\.venv\Lib\site-packages\openai\cli\_api\fine_tuning/
--------------------------------------------------------------------------------

__init__.py
  No description

jobs.py
  No description

training_data_bot\.venv\Lib\site-packages\openai\cli\_api/
--------------------------------------------------------------------------------

image.py
  No description

models.py
  No description

training_data_bot\.venv\Lib\site-packages\openai\cli/
--------------------------------------------------------------------------------

_cli.py
  No description

_errors.py
  No description

_models.py
  No description

_progress.py
  No description

training_data_bot\.venv\Lib\site-packages\openai\cli\_tools/
--------------------------------------------------------------------------------

__init__.py
  No description

_main.py
  No description

fine_tunes.py
  No description

migrate.py
  Installs the Grit CLI and returns the location of the binary""" if sys.platform == "win32":

training_data_bot\.venv\Lib\site-packages\openai\cli/
--------------------------------------------------------------------------------

_utils.py
  No description

training_data_bot\.venv\Lib\site-packages\openai\helpers/
--------------------------------------------------------------------------------

__init__.py
  No description

local_audio_player.py
  No description

microphone.py
  No description

training_data_bot\.venv\Lib\site-packages\openai\lib/
--------------------------------------------------------------------------------

__init__.py
  No description

_old_api.py
  You tried to access openai.{symbol}, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API. You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface.

training_data_bot\.venv\Lib\site-packages\openai\lib\_parsing/
--------------------------------------------------------------------------------

__init__.py
  No description

_completions.py
  Check if the given tool is a strict ChatCompletionFunctionToolParam.""" if not tool["type"] == "function":

_responses.py
  No description

training_data_bot\.venv\Lib\site-packages\openai\lib/
--------------------------------------------------------------------------------

_pydantic.py
  Mutates the given JSON schema to ensure it conforms to the `strict` standard that the API expects.

_tools.py
  Dictionary wrapper so we can pass the given base model throughout the entire request stack without having to special

_validators.py
  This validator will only print out the number of examples and recommend to the user to increase the number of examples if less than 100.

azure.py
  Adjust the URL if the client was configured with an Azure endpoint + deployment and the API feature being called is **not** a deployments-based endpoint

training_data_bot\.venv\Lib\site-packages\openai\lib\streaming/
--------------------------------------------------------------------------------

__init__.py
  No description

_assistants.py
  Iterator over just the text deltas in the stream. This corresponds to the `thread.message.delta` event

_deltas.py
  No description

training_data_bot\.venv\Lib\site-packages\openai\lib\streaming\chat/
--------------------------------------------------------------------------------

__init__.py
  No description

_completions.py
  Wrapper over the Chat Completions streaming API that adds helpful events such as `content.done`, supports automatically parsing

_events.py
  This event is yielded for every chunk with `choice.delta.content` data.""" type: Literal["content.delta"]

_types.py
  Snapshot type representing an in-progress accumulation of a `ParsedChatCompletion` object.

training_data_bot\.venv\Lib\site-packages\openai\lib\streaming\responses/
--------------------------------------------------------------------------------

__init__.py
  No description

_events.py
  No description

_responses.py
  Close the response and release the connection. Automatically called if the response body is read to completion.

_types.py
  Snapshot type representing an in-progress accumulation of a `ParsedResponse` object.

training_data_bot\.venv\Lib\site-packages\openai/
--------------------------------------------------------------------------------

pagination.py
  Note: no pagination actually occurs yet, this is for forwards-compatibility.""" data: List[_T]

training_data_bot\.venv\Lib\site-packages\openai\resources/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\openai\resources\audio/
--------------------------------------------------------------------------------

__init__.py
  No description

audio.py
  This property can be used as a prefix for any HTTP method call to return the raw response object instead of the parsed content.

speech.py
  This property can be used as a prefix for any HTTP method call to return the raw response object instead of the parsed content.

transcriptions.py
  This property can be used as a prefix for any HTTP method call to return the raw response object instead of the parsed content.

translations.py
  This property can be used as a prefix for any HTTP method call to return the raw response object instead of the parsed content.

training_data_bot\.venv\Lib\site-packages\openai\resources/
--------------------------------------------------------------------------------

batches.py
  This property can be used as a prefix for any HTTP method call to return the raw response object instead of the parsed content.

training_data_bot\.venv\Lib\site-packages\openai\resources\beta/
--------------------------------------------------------------------------------

__init__.py
  No description

assistants.py
  This property can be used as a prefix for any HTTP method call to return the raw response object instead of the parsed content.

beta.py
  This property can be used as a prefix for any HTTP method call to return the raw response object instead of the parsed content.

training_data_bot\.venv\Lib\site-packages\openai\resources\beta\realtime/
--------------------------------------------------------------------------------

__init__.py
  No description

realtime.py
  This property can be used as a prefix for any HTTP method call to return the raw response object instead of the parsed content.

sessions.py
  This property can be used as a prefix for any HTTP method call to return the raw response object instead of the parsed content.

transcription_sessions.py
  This property can be used as a prefix for any HTTP method call to return the raw response object instead of the parsed content.

training_data_bot\.venv\Lib\site-packages\openai\resources\beta\threads/
--------------------------------------------------------------------------------

__init__.py
  No description

messages.py
  This property can be used as a prefix for any HTTP method call to return the raw response object instead of the parsed content.

training_data_bot\.venv\Lib\site-packages\openai\resources\beta\threads\runs/
--------------------------------------------------------------------------------

__init__.py
  No description

runs.py
  This property can be used as a prefix for any HTTP method call to return the raw response object instead of the parsed content.

steps.py
  This property can be used as a prefix for any HTTP method call to return the raw response object instead of the parsed content.

training_data_bot\.venv\Lib\site-packages\openai\resources\beta\threads/
--------------------------------------------------------------------------------

threads.py
  This property can be used as a prefix for any HTTP method call to return the raw response object instead of the parsed content.

training_data_bot\.venv\Lib\site-packages\openai\resources\chat/
--------------------------------------------------------------------------------

__init__.py
  No description

chat.py
  This property can be used as a prefix for any HTTP method call to return the raw response object instead of the parsed content.

training_data_bot\.venv\Lib\site-packages\openai\resources\chat\completions/
--------------------------------------------------------------------------------

__init__.py
  No description

completions.py
  This property can be used as a prefix for any HTTP method call to return the raw response object instead of the parsed content.

messages.py
  This property can be used as a prefix for any HTTP method call to return the raw response object instead of the parsed content.

training_data_bot\.venv\Lib\site-packages\openai\resources/
--------------------------------------------------------------------------------

completions.py
  This property can be used as a prefix for any HTTP method call to return the raw response object instead of the parsed content.

training_data_bot\.venv\Lib\site-packages\openai\resources\containers/
--------------------------------------------------------------------------------

__init__.py
  No description

containers.py
  This property can be used as a prefix for any HTTP method call to return the raw response object instead of the parsed content.

training_data_bot\.venv\Lib\site-packages\openai\resources\containers\files/
--------------------------------------------------------------------------------

__init__.py
  No description

content.py
  This property can be used as a prefix for any HTTP method call to return the raw response object instead of the parsed content.

files.py
  This property can be used as a prefix for any HTTP method call to return the raw response object instead of the parsed content.

training_data_bot\.venv\Lib\site-packages\openai\resources\conversations/
--------------------------------------------------------------------------------

__init__.py
  No description

conversations.py
  This property can be used as a prefix for any HTTP method call to return the raw response object instead of the parsed content.

items.py
  This property can be used as a prefix for any HTTP method call to return the raw response object instead of the parsed content.

training_data_bot\.venv\Lib\site-packages\openai\resources/
--------------------------------------------------------------------------------

embeddings.py
  This property can be used as a prefix for any HTTP method call to return the raw response object instead of the parsed content.

training_data_bot\.venv\Lib\site-packages\openai\resources\evals/
--------------------------------------------------------------------------------

__init__.py
  No description

evals.py
  This property can be used as a prefix for any HTTP method call to return the raw response object instead of the parsed content.

training_data_bot\.venv\Lib\site-packages\openai\resources\evals\runs/
--------------------------------------------------------------------------------

__init__.py
  No description

output_items.py
  This property can be used as a prefix for any HTTP method call to return the raw response object instead of the parsed content.

runs.py
  This property can be used as a prefix for any HTTP method call to return the raw response object instead of the parsed content.

training_data_bot\.venv\Lib\site-packages\openai\resources/
--------------------------------------------------------------------------------

files.py
  This property can be used as a prefix for any HTTP method call to return the raw response object instead of the parsed content.

training_data_bot\.venv\Lib\site-packages\openai\resources\fine_tuning/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\openai\resources\fine_tuning\alpha/
--------------------------------------------------------------------------------

__init__.py
  No description

alpha.py
  This property can be used as a prefix for any HTTP method call to return the raw response object instead of the parsed content.

graders.py
  This property can be used as a prefix for any HTTP method call to return the raw response object instead of the parsed content.

training_data_bot\.venv\Lib\site-packages\openai\resources\fine_tuning\checkpoints/
--------------------------------------------------------------------------------

__init__.py
  No description

checkpoints.py
  This property can be used as a prefix for any HTTP method call to return the raw response object instead of the parsed content.

permissions.py
  This property can be used as a prefix for any HTTP method call to return the raw response object instead of the parsed content.

training_data_bot\.venv\Lib\site-packages\openai\resources\fine_tuning/
--------------------------------------------------------------------------------

fine_tuning.py
  This property can be used as a prefix for any HTTP method call to return the raw response object instead of the parsed content.

training_data_bot\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs/
--------------------------------------------------------------------------------

__init__.py
  No description

checkpoints.py
  This property can be used as a prefix for any HTTP method call to return the raw response object instead of the parsed content.

jobs.py
  This property can be used as a prefix for any HTTP method call to return the raw response object instead of the parsed content.

training_data_bot\.venv\Lib\site-packages\openai\resources/
--------------------------------------------------------------------------------

images.py
  This property can be used as a prefix for any HTTP method call to return the raw response object instead of the parsed content.

models.py
  This property can be used as a prefix for any HTTP method call to return the raw response object instead of the parsed content.

moderations.py
  This property can be used as a prefix for any HTTP method call to return the raw response object instead of the parsed content.

training_data_bot\.venv\Lib\site-packages\openai\resources\realtime/
--------------------------------------------------------------------------------

__init__.py
  No description

client_secrets.py
  This property can be used as a prefix for any HTTP method call to return the raw response object instead of the parsed content.

realtime.py
  This property can be used as a prefix for any HTTP method call to return the raw response object instead of the parsed content.

training_data_bot\.venv\Lib\site-packages\openai\resources\responses/
--------------------------------------------------------------------------------

__init__.py
  No description

input_items.py
  This property can be used as a prefix for any HTTP method call to return the raw response object instead of the parsed content.

responses.py
  This property can be used as a prefix for any HTTP method call to return the raw response object instead of the parsed content.

training_data_bot\.venv\Lib\site-packages\openai\resources\uploads/
--------------------------------------------------------------------------------

__init__.py
  No description

parts.py
  This property can be used as a prefix for any HTTP method call to return the raw response object instead of the parsed content.

uploads.py
  This property can be used as a prefix for any HTTP method call to return the raw response object instead of the parsed content.

training_data_bot\.venv\Lib\site-packages\openai\resources\vector_stores/
--------------------------------------------------------------------------------

__init__.py
  No description

file_batches.py
  This property can be used as a prefix for any HTTP method call to return the raw response object instead of the parsed content.

files.py
  This property can be used as a prefix for any HTTP method call to return the raw response object instead of the parsed content.

vector_stores.py
  This property can be used as a prefix for any HTTP method call to return the raw response object instead of the parsed content.

training_data_bot\.venv\Lib\site-packages\openai\resources/
--------------------------------------------------------------------------------

webhooks.py
  Validates that the given payload was sent by OpenAI and parses the payload.""" if secret is None:

training_data_bot\.venv\Lib\site-packages\openai\types/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\openai\types\audio/
--------------------------------------------------------------------------------

__init__.py
  No description

speech_create_params.py
  The text to generate audio for. The maximum length is 4096 characters.""" model: Required[Union[str, SpeechModel]]

speech_model.py
  No description

transcription.py
  The token in the transcription.""" bytes: Optional[List[float]] = None

transcription_create_params.py
  The audio file object (not file name) to transcribe, in one of these formats: flac, mp3, mp4, mpeg, mpga, m4a, ogg, wav, or webm.

transcription_create_response.py
  No description

transcription_include.py
  No description

transcription_segment.py
  Unique identifier of the segment.""" avg_logprob: float

transcription_stream_event.py
  No description

transcription_text_delta_event.py
  The token that was used to generate the log probability.""" bytes: Optional[List[int]] = None

transcription_text_done_event.py
  The token that was used to generate the log probability.""" bytes: Optional[List[int]] = None

transcription_verbose.py
  Duration of the input audio in seconds.""" type: Literal["duration"]

transcription_word.py
  End time of the word in seconds.""" start: float

translation.py
  No description

translation_create_params.py
  The audio file object (not file name) translate, in one of these formats: flac, mp3, mp4, mpeg, mpga, m4a, ogg, wav, or webm.

translation_create_response.py
  No description

translation_verbose.py
  The duration of the input audio.""" language: str

training_data_bot\.venv\Lib\site-packages\openai\types/
--------------------------------------------------------------------------------

audio_model.py
  No description

audio_response_format.py
  No description

auto_file_chunking_strategy_param.py
  Always `auto`."""

batch.py
  The object type, which is always `list`.""" class Batch(BaseModel):

batch_create_params.py
  The time frame within which the batch should be processed. Currently only `24h` is supported.

batch_error.py
  An error code identifying the error type.""" line: Optional[int] = None

batch_list_params.py
  A cursor for use in pagination. `after` is an object ID that defines your place in the list. For instance, if

batch_request_counts.py
  Number of requests that have been completed successfully.""" failed: int

training_data_bot\.venv\Lib\site-packages\openai\types\beta/
--------------------------------------------------------------------------------

__init__.py
  No description

assistant.py
  A list of [file](https://platform.openai.com/docs/api-reference/files) IDs made available to the `code_interpreter`` tool. There can be a maximum of 20 files

assistant_create_params.py
  ID of the model to use. You can use the

assistant_deleted.py
  No description

assistant_list_params.py
  A cursor for use in pagination. `after` is an object ID that defines your place in the list. For instance, if

assistant_response_format_option.py
  No description

assistant_response_format_option_param.py
  No description

assistant_stream_event.py
  Represents a thread that contains [messages](https://platform.openai.com/docs/api-reference/messages).

assistant_tool.py
  No description

assistant_tool_choice.py
  The type of the tool. If type is `function`, the function name must be set""" function: Optional[AssistantToolChoiceFunction] = None

assistant_tool_choice_function.py
  The name of the function to call."""

assistant_tool_choice_function_param.py
  The name of the function to call."""

assistant_tool_choice_option.py
  No description

assistant_tool_choice_option_param.py
  No description

assistant_tool_choice_param.py
  The type of the tool. If type is `function`, the function name must be set""" function: AssistantToolChoiceFunctionParam

assistant_tool_param.py
  No description

assistant_update_params.py
  The description of the assistant. The maximum length is 512 characters.""" instructions: Optional[str]

training_data_bot\.venv\Lib\site-packages\openai\types\beta\chat/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\openai\types\beta/
--------------------------------------------------------------------------------

code_interpreter_tool.py
  The type of tool being defined: `code_interpreter`"""

code_interpreter_tool_param.py
  The type of tool being defined: `code_interpreter`"""

file_search_tool.py
  The score threshold for the file search. All values must be a floating point number between 0 and 1.

file_search_tool_param.py
  The score threshold for the file search. All values must be a floating point number between 0 and 1.

function_tool.py
  The type of tool being defined: `function`"""

function_tool_param.py
  The type of tool being defined: `function`"""

training_data_bot\.venv\Lib\site-packages\openai\types\beta\realtime/
--------------------------------------------------------------------------------

__init__.py
  No description

conversation_created_event.py
  The unique ID of the conversation.""" object: Optional[Literal["realtime.conversation"]] = None

conversation_item.py
  The unique ID of the item, this can be generated by the client to help manage server-side context, but is not required because the server will generate one if

conversation_item_content.py
  ID of a previous conversation item to reference (for `item_reference` content types in `response.create` events). These can reference both client and server

conversation_item_content_param.py
  ID of a previous conversation item to reference (for `item_reference` content types in `response.create` events). These can reference both client and server

conversation_item_create_event.py
  The item to add to the conversation.""" type: Literal["conversation.item.create"]

conversation_item_create_event_param.py
  The item to add to the conversation.""" type: Required[Literal["conversation.item.create"]]

conversation_item_created_event.py
  The unique ID of the server event.""" item: ConversationItem

conversation_item_delete_event.py
  The ID of the item to delete.""" type: Literal["conversation.item.delete"]

conversation_item_delete_event_param.py
  The ID of the item to delete.""" type: Required[Literal["conversation.item.delete"]]

conversation_item_deleted_event.py
  The unique ID of the server event.""" item_id: str

conversation_item_input_audio_transcription_completed_event.py
  Number of audio tokens billed for this request.""" text_tokens: Optional[int] = None

conversation_item_input_audio_transcription_delta_event.py
  The token that was used to generate the log probability.""" bytes: List[int]

conversation_item_input_audio_transcription_failed_event.py
  Error code, if any.""" message: Optional[str] = None

conversation_item_param.py
  The unique ID of the item, this can be generated by the client to help manage server-side context, but is not required because the server will generate one if

conversation_item_retrieve_event.py
  The ID of the item to retrieve.""" type: Literal["conversation.item.retrieve"]

conversation_item_retrieve_event_param.py
  The ID of the item to retrieve.""" type: Required[Literal["conversation.item.retrieve"]]

conversation_item_truncate_event.py
  Inclusive duration up to which audio is truncated, in milliseconds. If the audio_end_ms is greater than the actual audio duration, the server will

conversation_item_truncate_event_param.py
  Inclusive duration up to which audio is truncated, in milliseconds. If the audio_end_ms is greater than the actual audio duration, the server will

conversation_item_truncated_event.py
  The duration up to which the audio was truncated, in milliseconds.""" content_index: int

conversation_item_with_reference.py
  ID of a previous conversation item to reference (for `item_reference` content types in `response.create` events). These can reference both client and server

conversation_item_with_reference_param.py
  ID of a previous conversation item to reference (for `item_reference` content types in `response.create` events). These can reference both client and server

error_event.py
  A human-readable error message.""" type: str

input_audio_buffer_append_event.py
  Base64-encoded audio bytes. This must be in the format specified by the `input_audio_format` field in the

input_audio_buffer_append_event_param.py
  Base64-encoded audio bytes. This must be in the format specified by the `input_audio_format` field in the

input_audio_buffer_clear_event.py
  The event type, must be `input_audio_buffer.clear`.""" event_id: Optional[str] = None

input_audio_buffer_clear_event_param.py
  The event type, must be `input_audio_buffer.clear`.""" event_id: str

input_audio_buffer_cleared_event.py
  The unique ID of the server event.""" type: Literal["input_audio_buffer.cleared"]

input_audio_buffer_commit_event.py
  The event type, must be `input_audio_buffer.commit`.""" event_id: Optional[str] = None

input_audio_buffer_commit_event_param.py
  The event type, must be `input_audio_buffer.commit`.""" event_id: str

input_audio_buffer_committed_event.py
  The unique ID of the server event.""" item_id: str

input_audio_buffer_speech_started_event.py
  Milliseconds from the start of all audio written to the buffer during the session when speech was first detected. This will correspond to the beginning of

input_audio_buffer_speech_stopped_event.py
  Milliseconds since the session started when speech stopped. This will correspond to the end of audio sent to the model, and thus includes

rate_limits_updated_event.py
  The maximum allowed value for the rate limit.""" name: Optional[Literal["requests", "tokens"]] = None

realtime_client_event.py
  The event type, must be `output_audio_buffer.clear`.""" event_id: Optional[str] = None

realtime_client_event_param.py
  The event type, must be `output_audio_buffer.clear`.""" event_id: str

realtime_connect_params.py
  No description

realtime_response.py
  The unique ID of the response.""" conversation_id: Optional[str] = None

realtime_response_status.py
  Error code, if any.""" type: Optional[str] = None

realtime_response_usage.py
  The number of audio tokens used in the Response.""" cached_tokens: Optional[int] = None

realtime_server_event.py
  The unique ID of the server event.""" item: ConversationItem

response_audio_delta_event.py
  The index of the content part in the item's content array.""" delta: str

response_audio_done_event.py
  The index of the content part in the item's content array.""" event_id: str

response_audio_transcript_delta_event.py
  The index of the content part in the item's content array.""" delta: str

response_audio_transcript_done_event.py
  The index of the content part in the item's content array.""" event_id: str

response_cancel_event.py
  The event type, must be `response.cancel`.""" event_id: Optional[str] = None

response_cancel_event_param.py
  The event type, must be `response.cancel`.""" event_id: str

response_content_part_added_event.py
  Base64-encoded audio data (if type is "audio").""" text: Optional[str] = None

response_content_part_done_event.py
  Base64-encoded audio data (if type is "audio").""" text: Optional[str] = None

response_create_event.py
  The description of the function, including guidance on when and how to call it, and guidance about what to tell the user when calling (if anything).

response_create_event_param.py
  The description of the function, including guidance on when and how to call it, and guidance about what to tell the user when calling (if anything).

response_created_event.py
  The unique ID of the server event.""" response: RealtimeResponse

response_done_event.py
  The unique ID of the server event.""" response: RealtimeResponse

response_function_call_arguments_delta_event.py
  The ID of the function call.""" delta: str

response_function_call_arguments_done_event.py
  The final arguments as a JSON string.""" call_id: str

response_output_item_added_event.py
  The unique ID of the server event.""" item: ConversationItem

response_output_item_done_event.py
  The unique ID of the server event.""" item: ConversationItem

response_text_delta_event.py
  The index of the content part in the item's content array.""" delta: str

response_text_done_event.py
  The index of the content part in the item's content array.""" event_id: str

session.py
  Type of noise reduction. `near_field` is for close-talking microphones such as headphones, `far_field` is

session_create_params.py
  Configuration options for the generated client secret.""" input_audio_format: Literal["pcm16", "g711_ulaw", "g711_alaw"]

session_create_response.py
  Timestamp for when the token expires. Currently, all tokens expire after one minute.

session_created_event.py
  The unique ID of the server event.""" session: Session

session_update_event.py
  The anchor point for the ephemeral token expiration. Only `created_at` is currently supported.

session_update_event_param.py
  The anchor point for the ephemeral token expiration. Only `created_at` is currently supported.

session_updated_event.py
  The unique ID of the server event.""" session: Session

transcription_session.py
  Timestamp for when the token expires. Currently, all tokens expire after one minute.

transcription_session_create_params.py
  Configuration options for the generated client secret.""" include: List[str]

transcription_session_update.py
  The anchor point for the ephemeral token expiration. Only `created_at` is currently supported.

transcription_session_update_param.py
  The anchor point for the ephemeral token expiration. Only `created_at` is currently supported.

transcription_session_updated_event.py
  The unique ID of the server event.""" session: TranscriptionSession

training_data_bot\.venv\Lib\site-packages\openai\types\beta/
--------------------------------------------------------------------------------

thread.py
  A list of [file](https://platform.openai.com/docs/api-reference/files) IDs made available to the `code_interpreter` tool. There can be a maximum of 20 files

thread_create_and_run_params.py
  The ID of the [assistant](https://platform.openai.com/docs/api-reference/assistants) to use to

thread_create_params.py
  A list of [messages](https://platform.openai.com/docs/api-reference/messages) to start the thread with.

thread_deleted.py
  No description

thread_update_params.py
  Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a

training_data_bot\.venv\Lib\site-packages\openai\types\beta\threads/
--------------------------------------------------------------------------------

__init__.py
  No description

annotation.py
  No description

annotation_delta.py
  No description

file_citation_annotation.py
  The ID of the specific File the citation is from.""" class FileCitationAnnotation(BaseModel):

file_citation_delta_annotation.py
  The ID of the specific File the citation is from.""" quote: Optional[str] = None

file_path_annotation.py
  The ID of the file that was generated.""" class FilePathAnnotation(BaseModel):

file_path_delta_annotation.py
  The ID of the file that was generated.""" class FilePathDeltaAnnotation(BaseModel):

image_file.py
  The [File](https://platform.openai.com/docs/api-reference/files) ID of the image in the message content. Set `purpose="vision"` when uploading the File if you

image_file_content_block.py
  Always `image_file`."""

image_file_content_block_param.py
  Always `image_file`."""

image_file_delta.py
  Specifies the detail level of the image if specified by the user. `low` uses fewer tokens, you can opt in to high resolution using `high`.

image_file_delta_block.py
  The index of the content part in the message.""" type: Literal["image_file"]

image_file_param.py
  The [File](https://platform.openai.com/docs/api-reference/files) ID of the image in the message content. Set `purpose="vision"` when uploading the File if you

image_url.py
  The external URL of the image, must be a supported image types: jpeg, jpg, png, gif, webp.

image_url_content_block.py
  The type of the content part."""

image_url_content_block_param.py
  The type of the content part."""

image_url_delta.py
  Specifies the detail level of the image. `low` uses fewer tokens, you can opt in to high resolution using `high`.

image_url_delta_block.py
  The index of the content part in the message.""" type: Literal["image_url"]

image_url_param.py
  The external URL of the image, must be a supported image types: jpeg, jpg, png, gif, webp.

message.py
  The type of tool being defined: `file_search`""" AttachmentTool: TypeAlias = Union[CodeInterpreterTool, AttachmentToolAssistantToolsFileSearchTypeOnly]

message_content.py
  No description

message_content_delta.py
  No description

message_content_part_param.py
  No description

message_create_params.py
  The text contents of the message.""" role: Required[Literal["user", "assistant"]]

message_deleted.py
  No description

message_delta.py
  The content of the message in array of text and/or images.""" role: Optional[Literal["user", "assistant"]] = None

message_delta_event.py
  The identifier of the message, which can be referenced in API endpoints.""" delta: MessageDelta

message_list_params.py
  A cursor for use in pagination. `after` is an object ID that defines your place in the list. For instance, if

message_update_params.py
  Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a

refusal_content_block.py
  Always `refusal`."""

refusal_delta_block.py
  The index of the refusal part in the message.""" type: Literal["refusal"]

required_action_function_tool_call.py
  The arguments that the model expects you to pass to the function.""" name: str

run.py
  The reason why the run is incomplete. This will point to which specific token limit was reached over the course of the

run_create_params.py
  The ID of the [assistant](https://platform.openai.com/docs/api-reference/assistants) to use to

run_list_params.py
  A cursor for use in pagination. `after` is an object ID that defines your place in the list. For instance, if

run_status.py
  No description

run_submit_tool_outputs_params.py
  A list of tools for which the outputs are being submitted.""" class ToolOutput(TypedDict, total=False):

run_update_params.py
  Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a

training_data_bot\.venv\Lib\site-packages\openai\types\beta\threads\runs/
--------------------------------------------------------------------------------

__init__.py
  No description

code_interpreter_logs.py
  The index of the output in the outputs array.""" type: Literal["logs"]

code_interpreter_output_image.py
  The [file](https://platform.openai.com/docs/api-reference/files) ID of the image.

code_interpreter_tool_call.py
  The text output from the Code Interpreter tool call.""" type: Literal["logs"]

code_interpreter_tool_call_delta.py
  The input to the Code Interpreter tool call.""" outputs: Optional[List[CodeInterpreterOutput]] = None

file_search_tool_call.py
  The ranker to use for the file search. If not specified will use the `auto` ranker.

file_search_tool_call_delta.py
  For now, this is always going to be an empty object.""" index: int

function_tool_call.py
  The arguments passed to the function.""" name: str

function_tool_call_delta.py
  The arguments passed to the function.""" name: Optional[str] = None

message_creation_step_details.py
  The ID of the message that was created by this run step.""" class MessageCreationStepDetails(BaseModel):

run_step.py
  One of `server_error` or `rate_limit_exceeded`.""" message: str

run_step_delta.py
  The details of the run step."""

run_step_delta_event.py
  The identifier of the run step, which can be referenced in API endpoints.""" delta: RunStepDelta

run_step_delta_message_delta.py
  The ID of the message that was created by this run step.""" class RunStepDeltaMessageDelta(BaseModel):

run_step_include.py
  No description

step_list_params.py
  A cursor for use in pagination. `after` is an object ID that defines your place in the list. For instance, if

step_retrieve_params.py
  A list of additional fields to include in the response. Currently the only supported value is

tool_call.py
  No description

tool_call_delta.py
  No description

tool_call_delta_object.py
  Always `tool_calls`.""" tool_calls: Optional[List[ToolCallDelta]] = None

tool_calls_step_details.py
  An array of tool calls the run step was involved in. These can be associated with one of three types of tools: `code_interpreter`,

training_data_bot\.venv\Lib\site-packages\openai\types\beta\threads/
--------------------------------------------------------------------------------

text.py
  The data that makes up the text."""

text_content_block.py
  Always `text`."""

text_content_block_param.py
  Text content to be sent to the model""" type: Required[Literal["text"]]

text_delta.py
  The data that makes up the text."""

text_delta_block.py
  The index of the content part in the message.""" type: Literal["text"]

training_data_bot\.venv\Lib\site-packages\openai\types\chat/
--------------------------------------------------------------------------------

__init__.py
  No description

chat_completion.py
  A list of message content tokens with log probability information.""" refusal: Optional[List[ChatCompletionTokenLogprob]] = None

chat_completion_allowed_tool_choice_param.py
  Constrains the tools available to the model to a pre-defined set.""" type: Required[Literal["allowed_tools"]]

chat_completion_allowed_tools_param.py
  Constrains the tools available to the model to a pre-defined set. `auto` allows the model to pick from among the allowed tools and generate a

chat_completion_assistant_message_param.py
  Unique identifier for a previous audio response from the model.""" ContentArrayOfContentPart: TypeAlias = Union[ChatCompletionContentPartTextParam, ChatCompletionContentPartRefusalParam]

chat_completion_audio.py
  Unique identifier for this audio response.""" data: str

chat_completion_audio_param.py
  Specifies the output audio format. Must be one of `wav`, `mp3`, `flac`, `opus`, or `pcm16`.

chat_completion_chunk.py
  The arguments to call the function with, as generated by the model in JSON format. Note that the model does not always generate valid JSON, and may

chat_completion_content_part_image.py
  Either a URL of the image or the base64 encoded image data.""" detail: Optional[Literal["auto", "low", "high"]] = None

chat_completion_content_part_image_param.py
  Either a URL of the image or the base64 encoded image data.""" detail: Literal["auto", "low", "high"]

chat_completion_content_part_input_audio_param.py
  Base64 encoded audio data.""" format: Required[Literal["wav", "mp3"]]

chat_completion_content_part_param.py
  The base64 encoded file data, used when passing the file to the model as a string.

chat_completion_content_part_refusal_param.py
  The refusal message generated by the model.""" type: Required[Literal["refusal"]]

chat_completion_content_part_text.py
  The text content.""" type: Literal["text"]

chat_completion_content_part_text_param.py
  The text content.""" type: Required[Literal["text"]]

chat_completion_custom_tool_param.py
  Unconstrained text format. Always `text`.""" class CustomFormatGrammarGrammar(TypedDict, total=False):

chat_completion_deleted.py
  The ID of the chat completion that was deleted.""" deleted: bool

chat_completion_developer_message_param.py
  The contents of the developer message.""" role: Required[Literal["developer"]]

chat_completion_function_call_option_param.py
  The name of the function to call."""

chat_completion_function_message_param.py
  The contents of the function message.""" name: Required[str]

chat_completion_function_tool.py
  The type of the tool. Currently, only `function` is supported."""

chat_completion_function_tool_param.py
  The type of the tool. Currently, only `function` is supported."""

chat_completion_message.py
  The index of the last character of the URL citation in the message.""" start_index: int

chat_completion_message_custom_tool_call.py
  The input for the custom tool call generated by the model.""" name: str

chat_completion_message_custom_tool_call_param.py
  The input for the custom tool call generated by the model.""" name: Required[str]

chat_completion_message_function_tool_call.py
  The arguments to call the function with, as generated by the model in JSON format. Note that the model does not always generate valid JSON, and may

chat_completion_message_function_tool_call_param.py
  The arguments to call the function with, as generated by the model in JSON format. Note that the model does not always generate valid JSON, and may

chat_completion_message_param.py
  No description

chat_completion_message_tool_call.py
  No description

chat_completion_message_tool_call_param.py
  No description

chat_completion_message_tool_call_union_param.py
  No description

chat_completion_modality.py
  No description

chat_completion_named_tool_choice_custom_param.py
  The name of the custom tool to call.""" class ChatCompletionNamedToolChoiceCustomParam(TypedDict, total=False):

chat_completion_named_tool_choice_param.py
  The name of the function to call.""" class ChatCompletionNamedToolChoiceParam(TypedDict, total=False):

chat_completion_prediction_content_param.py
  The content that should be matched when generating a model response. If generated tokens would match this content, the entire model response can be

chat_completion_reasoning_effort.py
  No description

chat_completion_role.py
  No description

chat_completion_store_message.py
  The identifier of the chat message.""" content_parts: Optional[List[ChatCompletionStoreMessageContentPart]] = None

chat_completion_stream_options_param.py
  When true, stream obfuscation will be enabled. Stream obfuscation adds random characters to an `obfuscation` field on streaming

chat_completion_system_message_param.py
  The contents of the system message.""" role: Required[Literal["system"]]

chat_completion_token_logprob.py
  The token.""" bytes: Optional[List[int]] = None

chat_completion_tool_choice_option_param.py
  No description

chat_completion_tool_message_param.py
  The contents of the tool message.""" role: Required[Literal["tool"]]

chat_completion_tool_param.py
  No description

chat_completion_tool_union_param.py
  No description

chat_completion_user_message_param.py
  The contents of the user message.""" role: Required[Literal["user"]]

completion_create_params.py
  A list of messages comprising the conversation so far. Depending on the [model](https://platform.openai.com/docs/models) you use,

completion_list_params.py
  Identifier for the last chat completion from the previous pagination request.""" limit: int

completion_update_params.py
  Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a

training_data_bot\.venv\Lib\site-packages\openai\types\chat\completions/
--------------------------------------------------------------------------------

__init__.py
  No description

message_list_params.py
  Identifier for the last message from the previous pagination request.""" limit: int

training_data_bot\.venv\Lib\site-packages\openai\types\chat/
--------------------------------------------------------------------------------

parsed_chat_completion.py
  The auto-parsed message contents""" tool_calls: Optional[List[ParsedFunctionToolCall]] = None  # type: ignore[assignment]

parsed_function_tool_call.py
  The arguments to call the function with. If you used `openai.pydantic_function_tool()` then this will be an

training_data_bot\.venv\Lib\site-packages\openai\types/
--------------------------------------------------------------------------------

chat_model.py
  No description

completion.py
  A unique identifier for the completion.""" choices: List[CompletionChoice]

completion_choice.py
  The reason the model stopped generating tokens. This will be `stop` if the model hit a natural stop point or a provided stop

completion_create_params.py
  ID of the model to use. You can use the

completion_usage.py
  When using Predicted Outputs, the number of tokens in the prediction that appeared in the completion.

container_create_params.py
  Name of the container to create.""" expires_after: ExpiresAfter

container_create_response.py
  The reference point for the expiration.""" minutes: Optional[int] = None

container_list_params.py
  A cursor for use in pagination. `after` is an object ID that defines your place in the list. For instance, if

container_list_response.py
  The reference point for the expiration.""" minutes: Optional[int] = None

container_retrieve_response.py
  The reference point for the expiration.""" minutes: Optional[int] = None

training_data_bot\.venv\Lib\site-packages\openai\types\containers/
--------------------------------------------------------------------------------

__init__.py
  No description

file_create_params.py
  The File object (not file name) to be uploaded.""" file_id: str

file_create_response.py
  Unique identifier for the file.""" bytes: int

file_list_params.py
  A cursor for use in pagination. `after` is an object ID that defines your place in the list. For instance, if

file_list_response.py
  Unique identifier for the file.""" bytes: int

file_retrieve_response.py
  Unique identifier for the file.""" bytes: int

training_data_bot\.venv\Lib\site-packages\openai\types\containers\files/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\openai\types\conversations/
--------------------------------------------------------------------------------

__init__.py
  No description

computer_screenshot_content.py
  The identifier of an uploaded file that contains the screenshot.""" image_url: Optional[str] = None

conversation.py
  The unique ID of the conversation.""" created_at: int

conversation_create_params.py
  Initial items to include in the conversation context. You may add up to 20 items at a time.

conversation_deleted_resource.py
  No description

conversation_item.py
  The unique ID of the image generation call.""" result: Optional[str] = None

conversation_item_list.py
  A list of conversation items.""" first_id: str

conversation_update_params.py
  Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a

input_file_content.py
  No description

input_file_content_param.py
  No description

input_image_content.py
  No description

input_image_content_param.py
  No description

input_text_content.py
  No description

input_text_content_param.py
  No description

item_create_params.py
  The items to add to the conversation. You may add up to 20 items at a time.""" include: List[ResponseIncludable]

item_list_params.py
  An item ID to list items after, used in pagination.""" include: List[ResponseIncludable]

item_retrieve_params.py
  Additional fields to include in the response. See the `include` parameter for

message.py
  The reasoning text from the model.""" type: Literal["reasoning_text"]

output_text_content.py
  No description

output_text_content_param.py
  No description

refusal_content.py
  No description

refusal_content_param.py
  No description

summary_text_content.py
  A summary of the reasoning output from the model so far.""" type: Literal["summary_text"]

text_content.py
  No description

training_data_bot\.venv\Lib\site-packages\openai\types/
--------------------------------------------------------------------------------

create_embedding_response.py
  The number of tokens used by the prompt.""" total_tokens: int

embedding.py
  The embedding vector, which is a list of floats. The length of vector depends on the model as listed in the

embedding_create_params.py
  Input text to embed, encoded as a string or array of tokens. To embed multiple inputs in a single request, pass an array of strings or array

embedding_model.py
  No description

eval_create_params.py
  The configuration for the data source used for the evaluation runs. Dictates the schema of the data used in the evaluation.

eval_create_response.py
  The json schema for the run data source items. Learn how to build JSON schemas [here](https://json-schema.org/).

eval_custom_data_source_config.py
  The json schema for the run data source items. Learn how to build JSON schemas [here](https://json-schema.org/).

eval_delete_response.py
  No description

eval_list_params.py
  Identifier for the last eval from the previous pagination request.""" limit: int

eval_list_response.py
  The json schema for the run data source items. Learn how to build JSON schemas [here](https://json-schema.org/).

eval_retrieve_response.py
  The json schema for the run data source items. Learn how to build JSON schemas [here](https://json-schema.org/).

eval_stored_completions_data_source_config.py
  The json schema for the run data source items. Learn how to build JSON schemas [here](https://json-schema.org/).

eval_update_params.py
  Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a

eval_update_response.py
  The json schema for the run data source items. Learn how to build JSON schemas [here](https://json-schema.org/).

training_data_bot\.venv\Lib\site-packages\openai\types\evals/
--------------------------------------------------------------------------------

__init__.py
  No description

create_eval_completions_run_data_source.py
  The content of the jsonl file.""" type: Literal["file_content"]

create_eval_completions_run_data_source_param.py
  The content of the jsonl file.""" type: Required[Literal["file_content"]]

create_eval_jsonl_run_data_source.py
  The content of the jsonl file.""" type: Literal["file_content"]

create_eval_jsonl_run_data_source_param.py
  The content of the jsonl file.""" type: Required[Literal["file_content"]]

eval_api_error.py
  The error code.""" message: str

run_cancel_response.py
  The content of the jsonl file.""" type: Literal["file_content"]

run_create_params.py
  Details about the run's data source.""" metadata: Optional[Metadata]

run_create_response.py
  The content of the jsonl file.""" type: Literal["file_content"]

run_delete_response.py
  No description

run_list_params.py
  Identifier for the last run from the previous pagination request.""" limit: int

run_list_response.py
  The content of the jsonl file.""" type: Literal["file_content"]

run_retrieve_response.py
  The content of the jsonl file.""" type: Literal["file_content"]

training_data_bot\.venv\Lib\site-packages\openai\types\evals\runs/
--------------------------------------------------------------------------------

__init__.py
  No description

output_item_list_params.py
  Identifier for the last output item from the previous pagination request.""" limit: int

output_item_list_response.py
  The name of the grader.""" passed: bool

output_item_retrieve_response.py
  The name of the grader.""" passed: bool

training_data_bot\.venv\Lib\site-packages\openai\types/
--------------------------------------------------------------------------------

file_chunking_strategy.py
  No description

file_chunking_strategy_param.py
  No description

file_content.py
  No description

file_create_params.py
  The File object (not file name) to be uploaded.""" purpose: Required[FilePurpose]

file_deleted.py
  No description

file_list_params.py
  A cursor for use in pagination. `after` is an object ID that defines your place in the list. For instance, if

file_object.py
  The file identifier, which can be referenced in the API endpoints.""" bytes: int

file_purpose.py
  No description

training_data_bot\.venv\Lib\site-packages\openai\types\fine_tuning/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\openai\types\fine_tuning\alpha/
--------------------------------------------------------------------------------

__init__.py
  No description

grader_run_params.py
  The grader used for the fine-tuning job.""" model_sample: Required[str]

grader_run_response.py
  No description

grader_validate_params.py
  The grader used for the fine-tuning job.""" Grader: TypeAlias = Union[

grader_validate_response.py
  The grader used for the fine-tuning job."""

training_data_bot\.venv\Lib\site-packages\openai\types\fine_tuning\checkpoints/
--------------------------------------------------------------------------------

__init__.py
  No description

permission_create_params.py
  The project identifiers to grant access to."""

permission_create_response.py
  The permission identifier, which can be referenced in the API endpoints.""" created_at: int

permission_delete_response.py
  The ID of the fine-tuned model checkpoint permission that was deleted.""" deleted: bool

permission_retrieve_params.py
  Identifier for the last permission ID from the previous pagination request.""" limit: int

permission_retrieve_response.py
  The permission identifier, which can be referenced in the API endpoints.""" created_at: int

training_data_bot\.venv\Lib\site-packages\openai\types\fine_tuning/
--------------------------------------------------------------------------------

dpo_hyperparameters.py
  Number of examples in each batch. A larger batch size means that model parameters are updated less frequently, but

dpo_hyperparameters_param.py
  Number of examples in each batch. A larger batch size means that model parameters are updated less frequently, but

dpo_method.py
  The hyperparameters used for the DPO fine-tuning job."""

dpo_method_param.py
  The hyperparameters used for the DPO fine-tuning job."""

fine_tuning_job.py
  A machine-readable error code.""" message: str

fine_tuning_job_event.py
  The object identifier.""" created_at: int

fine_tuning_job_integration.py
  No description

fine_tuning_job_wandb_integration.py
  The name of the project that the new run will be created under.""" entity: Optional[str] = None

fine_tuning_job_wandb_integration_object.py
  The type of the integration being enabled for the fine-tuning job""" wandb: FineTuningJobWandbIntegration

job_create_params.py
  The name of the model to fine-tune. You can select one of the

job_list_events_params.py
  Identifier for the last event from the previous pagination request.""" limit: int

job_list_params.py
  Identifier for the last job from the previous pagination request.""" limit: int

training_data_bot\.venv\Lib\site-packages\openai\types\fine_tuning\jobs/
--------------------------------------------------------------------------------

__init__.py
  No description

checkpoint_list_params.py
  Identifier for the last checkpoint ID from the previous pagination request.""" limit: int

fine_tuning_job_checkpoint.py
  The checkpoint identifier, which can be referenced in the API endpoints.""" created_at: int

training_data_bot\.venv\Lib\site-packages\openai\types\fine_tuning/
--------------------------------------------------------------------------------

reinforcement_hyperparameters.py
  Number of examples in each batch. A larger batch size means that model parameters are updated less frequently, but

reinforcement_hyperparameters_param.py
  Number of examples in each batch. A larger batch size means that model parameters are updated less frequently, but

reinforcement_method.py
  The grader used for the fine-tuning job.""" hyperparameters: Optional[ReinforcementHyperparameters] = None

reinforcement_method_param.py
  The grader used for the fine-tuning job.""" hyperparameters: ReinforcementHyperparametersParam

supervised_hyperparameters.py
  Number of examples in each batch. A larger batch size means that model parameters are updated less frequently, but

supervised_hyperparameters_param.py
  Number of examples in each batch. A larger batch size means that model parameters are updated less frequently, but

supervised_method.py
  The hyperparameters used for the fine-tuning job."""

supervised_method_param.py
  The hyperparameters used for the fine-tuning job."""

training_data_bot\.venv\Lib\site-packages\openai\types\graders/
--------------------------------------------------------------------------------

__init__.py
  No description

label_model_grader.py
  The text output from the model.""" type: Literal["output_text"]

label_model_grader_param.py
  The text output from the model.""" type: Required[Literal["output_text"]]

multi_grader.py
  A formula to calculate the output based on grader results.""" graders: Graders

multi_grader_param.py
  A formula to calculate the output based on grader results.""" graders: Required[Graders]

python_grader.py
  The name of the grader.""" source: str

python_grader_param.py
  The name of the grader.""" source: Required[str]

score_model_grader.py
  The text output from the model.""" type: Literal["output_text"]

score_model_grader_param.py
  The text output from the model.""" type: Required[Literal["output_text"]]

string_check_grader.py
  The input text. This may include template strings.""" name: str

string_check_grader_param.py
  The input text. This may include template strings.""" name: Required[str]

text_similarity_grader.py
  The evaluation metric to use. One of `cosine`, `fuzzy_match`, `bleu`, `gleu`, `meteor`, `rouge_1`, `rouge_2`,

text_similarity_grader_param.py
  The evaluation metric to use. One of `cosine`, `fuzzy_match`, `bleu`, `gleu`, `meteor`, `rouge_1`, `rouge_2`,

training_data_bot\.venv\Lib\site-packages\openai\types/
--------------------------------------------------------------------------------

image.py
  The base64-encoded JSON of the generated image. Default value for `gpt-image-1`, and only present if `response_format` is set to

image_create_variation_params.py
  The image to use as the basis for the variation(s). Must be a valid PNG file, less than 4MB, and square.

image_edit_completed_event.py
  The number of image tokens in the input prompt.""" text_tokens: int

image_edit_params.py
  The image(s) to edit. Must be a supported image file or an array of images. For `gpt-image-1`, each image should be a `png`, `webp`, or `jpg` file less than

image_edit_partial_image_event.py
  Base64-encoded partial image data, suitable for rendering as an image.""" background: Literal["transparent", "opaque", "auto"]

image_edit_stream_event.py
  No description

image_gen_completed_event.py
  The number of image tokens in the input prompt.""" text_tokens: int

image_gen_partial_image_event.py
  Base64-encoded partial image data, suitable for rendering as an image.""" background: Literal["transparent", "opaque", "auto"]

image_gen_stream_event.py
  No description

image_generate_params.py
  A text description of the desired image(s). The maximum length is 32000 characters for `gpt-image-1`, 1000 characters for

image_model.py
  No description

images_response.py
  The number of image tokens in the input prompt.""" text_tokens: int

model.py
  The model identifier, which can be referenced in the API endpoints.""" created: int

model_deleted.py
  No description

moderation.py
  Content that expresses, incites, or promotes harassing language towards any target.

moderation_create_params.py
  Input (or inputs) to classify. Can be a single string, an array of strings, or an array of multi-modal input

moderation_create_response.py
  The unique identifier for the moderation request.""" model: str

moderation_image_url_input_param.py
  Either a URL of the image or the base64 encoded image data.""" class ModerationImageURLInputParam(TypedDict, total=False):

moderation_model.py
  No description

moderation_multi_modal_input_param.py
  No description

moderation_text_input_param.py
  A string of text to classify.""" type: Required[Literal["text"]]

other_file_chunking_strategy_object.py
  Always `other`."""

training_data_bot\.venv\Lib\site-packages\openai\types\realtime/
--------------------------------------------------------------------------------

__init__.py
  No description

audio_transcription.py
  The language of the input audio. Supplying the input language in

audio_transcription_param.py
  The language of the input audio. Supplying the input language in

client_secret_create_params.py
  Configuration for the client secret expiration. Expiration refers to the time after which a client secret will no longer be

client_secret_create_response.py
  Expiration timestamp for the client secret, in seconds since epoch.""" session: Session

conversation_created_event.py
  The unique ID of the conversation.""" object: Optional[Literal["realtime.conversation"]] = None

conversation_item.py
  No description

conversation_item_added.py
  The unique ID of the server event.""" item: ConversationItem

conversation_item_create_event.py
  A single item within a Realtime conversation.""" type: Literal["conversation.item.create"]

conversation_item_create_event_param.py
  A single item within a Realtime conversation.""" type: Required[Literal["conversation.item.create"]]

conversation_item_created_event.py
  The unique ID of the server event.""" item: ConversationItem

conversation_item_delete_event.py
  The ID of the item to delete.""" type: Literal["conversation.item.delete"]

conversation_item_delete_event_param.py
  The ID of the item to delete.""" type: Required[Literal["conversation.item.delete"]]

conversation_item_deleted_event.py
  The unique ID of the server event.""" item_id: str

conversation_item_done.py
  The unique ID of the server event.""" item: ConversationItem

conversation_item_input_audio_transcription_completed_event.py
  Number of audio tokens billed for this request.""" text_tokens: Optional[int] = None

conversation_item_input_audio_transcription_delta_event.py
  The unique ID of the server event.""" item_id: str

conversation_item_input_audio_transcription_failed_event.py
  Error code, if any.""" message: Optional[str] = None

conversation_item_input_audio_transcription_segment.py
  The segment identifier.""" content_index: int

conversation_item_param.py
  No description

conversation_item_retrieve_event.py
  The ID of the item to retrieve.""" type: Literal["conversation.item.retrieve"]

conversation_item_retrieve_event_param.py
  The ID of the item to retrieve.""" type: Required[Literal["conversation.item.retrieve"]]

conversation_item_truncate_event.py
  Inclusive duration up to which audio is truncated, in milliseconds. If the audio_end_ms is greater than the actual audio duration, the server will

conversation_item_truncate_event_param.py
  Inclusive duration up to which audio is truncated, in milliseconds. If the audio_end_ms is greater than the actual audio duration, the server will

conversation_item_truncated_event.py
  The duration up to which the audio was truncated, in milliseconds.""" content_index: int

input_audio_buffer_append_event.py
  Base64-encoded audio bytes. This must be in the format specified by the `input_audio_format` field in the

input_audio_buffer_append_event_param.py
  Base64-encoded audio bytes. This must be in the format specified by the `input_audio_format` field in the

input_audio_buffer_clear_event.py
  The event type, must be `input_audio_buffer.clear`.""" event_id: Optional[str] = None

input_audio_buffer_clear_event_param.py
  The event type, must be `input_audio_buffer.clear`.""" event_id: str

input_audio_buffer_cleared_event.py
  The unique ID of the server event.""" type: Literal["input_audio_buffer.cleared"]

input_audio_buffer_commit_event.py
  The event type, must be `input_audio_buffer.commit`.""" event_id: Optional[str] = None

input_audio_buffer_commit_event_param.py
  The event type, must be `input_audio_buffer.commit`.""" event_id: str

input_audio_buffer_committed_event.py
  The unique ID of the server event.""" item_id: str

input_audio_buffer_speech_started_event.py
  Milliseconds from the start of all audio written to the buffer during the session when speech was first detected. This will correspond to the beginning of

input_audio_buffer_speech_stopped_event.py
  Milliseconds since the session started when speech stopped. This will correspond to the end of audio sent to the model, and thus includes

input_audio_buffer_timeout_triggered.py
  Millisecond offset of audio written to the input audio buffer at the time the timeout was triggered.

log_prob_properties.py
  The token that was used to generate the log probability.""" bytes: List[int]

mcp_list_tools_completed.py
  The unique ID of the server event.""" item_id: str

mcp_list_tools_failed.py
  The unique ID of the server event.""" item_id: str

mcp_list_tools_in_progress.py
  The unique ID of the server event.""" item_id: str

noise_reduction_type.py
  No description

output_audio_buffer_clear_event.py
  The event type, must be `output_audio_buffer.clear`.""" event_id: Optional[str] = None

output_audio_buffer_clear_event_param.py
  The event type, must be `output_audio_buffer.clear`.""" event_id: str

rate_limits_updated_event.py
  The maximum allowed value for the rate limit.""" name: Optional[Literal["requests", "tokens"]] = None

realtime_audio_config.py
  No description

realtime_audio_config_input.py
  Type of noise reduction. `near_field` is for close-talking microphones such as headphones, `far_field` is

realtime_audio_config_input_param.py
  Type of noise reduction. `near_field` is for close-talking microphones such as headphones, `far_field` is

realtime_audio_config_output.py
  The format of the output audio.""" speed: Optional[float] = None

realtime_audio_config_output_param.py
  The format of the output audio.""" speed: float

realtime_audio_config_param.py
  No description

realtime_audio_formats.py
  The sample rate of the audio. Always `24000`.""" type: Optional[Literal["audio/pcm"]] = None

realtime_audio_formats_param.py
  The sample rate of the audio. Always `24000`.""" type: Literal["audio/pcm"]

realtime_audio_input_turn_detection.py
  Type of turn detection, `server_vad` to turn on simple Server VAD.""" create_response: Optional[bool] = None

realtime_audio_input_turn_detection_param.py
  Type of turn detection, `server_vad` to turn on simple Server VAD.""" create_response: bool

realtime_client_event.py
  No description

realtime_client_event_param.py
  No description

realtime_connect_params.py
  No description

realtime_conversation_item_assistant_message.py
  Base64-encoded audio bytes, these will be parsed as the format specified in the session output audio type configuration. This defaults to PCM 16-bit 24kHz mono

realtime_conversation_item_assistant_message_param.py
  Base64-encoded audio bytes, these will be parsed as the format specified in the session output audio type configuration. This defaults to PCM 16-bit 24kHz mono

realtime_conversation_item_function_call.py
  The arguments of the function call. This is a JSON-encoded string representing the arguments passed to the function,

realtime_conversation_item_function_call_output.py
  The ID of the function call this output is for.""" output: str

realtime_conversation_item_function_call_output_param.py
  The ID of the function call this output is for.""" output: Required[str]

realtime_conversation_item_function_call_param.py
  The arguments of the function call. This is a JSON-encoded string representing the arguments passed to the function,

realtime_conversation_item_system_message.py
  The text content.""" type: Optional[Literal["input_text"]] = None

realtime_conversation_item_system_message_param.py
  The text content.""" type: Literal["input_text"]

realtime_conversation_item_user_message.py
  Base64-encoded audio bytes (for `input_audio`), these will be parsed as the format specified in the session input audio type configuration. This defaults to

realtime_conversation_item_user_message_param.py
  Base64-encoded audio bytes (for `input_audio`), these will be parsed as the format specified in the session input audio type configuration. This defaults to

realtime_error.py
  A human-readable error message.""" type: str

realtime_error_event.py
  Details of the error.""" event_id: str

realtime_function_tool.py
  The description of the function, including guidance on when and how to call it, and guidance about what to tell the user when calling (if anything).

realtime_function_tool_param.py
  The description of the function, including guidance on when and how to call it, and guidance about what to tell the user when calling (if anything).

realtime_mcp_approval_request.py
  The unique ID of the approval request.""" arguments: str

realtime_mcp_approval_request_param.py
  The unique ID of the approval request.""" arguments: Required[str]

realtime_mcp_approval_response.py
  The unique ID of the approval response.""" approval_request_id: str

realtime_mcp_approval_response_param.py
  The unique ID of the approval response.""" approval_request_id: Required[str]

realtime_mcp_list_tools.py
  The JSON schema describing the tool's input.""" name: str

realtime_mcp_list_tools_param.py
  The JSON schema describing the tool's input.""" name: Required[str]

realtime_mcp_protocol_error.py
  No description

realtime_mcp_protocol_error_param.py
  No description

realtime_mcp_tool_call.py
  The unique ID of the tool call.""" arguments: str

realtime_mcp_tool_call_param.py
  The unique ID of the tool call.""" arguments: Required[str]

realtime_mcp_tool_execution_error.py
  No description

realtime_mcp_tool_execution_error_param.py
  No description

realtime_mcphttp_error.py
  No description

realtime_mcphttp_error_param.py
  No description

realtime_response.py
  The format of the output audio.""" voice: Union[

realtime_response_create_audio_output.py
  The format of the output audio.""" voice: Union[

realtime_response_create_audio_output_param.py
  The format of the output audio.""" voice: Union[str, Literal["alloy", "ash", "ballad", "coral", "echo", "sage", "shimmer", "verse", "marin", "cedar"]]

realtime_response_create_mcp_tool.py
  Indicates whether or not a tool modifies data or is read-only. If an MCP server is

realtime_response_create_mcp_tool_param.py
  Indicates whether or not a tool modifies data or is read-only. If an MCP server is

realtime_response_create_params.py
  Configuration for audio input and output.""" conversation: Union[str, Literal["auto", "none"], None] = None

realtime_response_create_params_param.py
  Configuration for audio input and output.""" conversation: Union[str, Literal["auto", "none"]]

realtime_response_status.py
  Error code, if any.""" type: Optional[str] = None

realtime_response_usage.py
  Details about the input tokens used in the Response. Cached tokens are tokens from previous turns in the conversation that are

realtime_response_usage_input_token_details.py
  The number of cached audio tokens used as input for the Response.""" image_tokens: Optional[int] = None

realtime_response_usage_output_token_details.py
  The number of audio tokens used in the Response.""" text_tokens: Optional[int] = None

realtime_server_event.py
  The unique ID of the server event.""" item: ConversationItem

realtime_session_client_secret.py
  Timestamp for when the token expires. Currently, all tokens expire after one minute.

realtime_session_create_request.py
  The type of session to create. Always `realtime` for the Realtime API.""" audio: Optional[RealtimeAudioConfig] = None

realtime_session_create_request_param.py
  The type of session to create. Always `realtime` for the Realtime API.""" audio: RealtimeAudioConfigParam

realtime_session_create_response.py
  Type of noise reduction. `near_field` is for close-talking microphones such as headphones, `far_field` is

realtime_tool_choice_config.py
  No description

realtime_tool_choice_config_param.py
  No description

realtime_tools_config.py
  No description

realtime_tools_config_param.py
  Indicates whether or not a tool modifies data or is read-only. If an MCP server is

realtime_tools_config_union.py
  Indicates whether or not a tool modifies data or is read-only. If an MCP server is

realtime_tools_config_union_param.py
  Indicates whether or not a tool modifies data or is read-only. If an MCP server is

realtime_tracing_config.py
  The group id to attach to this trace to enable filtering and grouping in the Traces Dashboard.

realtime_tracing_config_param.py
  The group id to attach to this trace to enable filtering and grouping in the Traces Dashboard.

realtime_transcription_session_audio.py
  No description

realtime_transcription_session_audio_input.py
  Type of noise reduction. `near_field` is for close-talking microphones such as headphones, `far_field` is

realtime_transcription_session_audio_input_param.py
  Type of noise reduction. `near_field` is for close-talking microphones such as headphones, `far_field` is

realtime_transcription_session_audio_input_turn_detection.py
  Type of turn detection, `server_vad` to turn on simple Server VAD.""" create_response: Optional[bool] = None

realtime_transcription_session_audio_input_turn_detection_param.py
  Type of turn detection, `server_vad` to turn on simple Server VAD.""" create_response: bool

realtime_transcription_session_audio_param.py
  No description

realtime_transcription_session_create_request.py
  The type of session to create. Always `transcription` for transcription sessions.

realtime_transcription_session_create_request_param.py
  The type of session to create. Always `transcription` for transcription sessions.

realtime_transcription_session_create_response.py
  Type of noise reduction. `near_field` is for close-talking microphones such as headphones, `far_field` is

realtime_transcription_session_turn_detection.py
  Amount of audio to include before the VAD detected speech (in milliseconds). Defaults to 300ms.

realtime_truncation.py
  No description

realtime_truncation_param.py
  No description

realtime_truncation_retention_ratio.py
  Fraction of post-instruction conversation tokens to retain (0.0 - 1.0) when the conversation exceeds the input token limit.

realtime_truncation_retention_ratio_param.py
  Fraction of post-instruction conversation tokens to retain (0.0 - 1.0) when the conversation exceeds the input token limit.

response_audio_delta_event.py
  The index of the content part in the item's content array.""" delta: str

response_audio_done_event.py
  The index of the content part in the item's content array.""" event_id: str

response_audio_transcript_delta_event.py
  The index of the content part in the item's content array.""" delta: str

response_audio_transcript_done_event.py
  The index of the content part in the item's content array.""" event_id: str

response_cancel_event.py
  The event type, must be `response.cancel`.""" event_id: Optional[str] = None

response_cancel_event_param.py
  The event type, must be `response.cancel`.""" event_id: str

response_content_part_added_event.py
  Base64-encoded audio data (if type is "audio").""" text: Optional[str] = None

response_content_part_done_event.py
  Base64-encoded audio data (if type is "audio").""" text: Optional[str] = None

response_create_event.py
  The event type, must be `response.create`.""" event_id: Optional[str] = None

response_create_event_param.py
  The event type, must be `response.create`.""" event_id: str

response_created_event.py
  The unique ID of the server event.""" response: RealtimeResponse

response_done_event.py
  The unique ID of the server event.""" response: RealtimeResponse

response_function_call_arguments_delta_event.py
  The ID of the function call.""" delta: str

response_function_call_arguments_done_event.py
  The final arguments as a JSON string.""" call_id: str

response_mcp_call_arguments_delta.py
  The JSON-encoded arguments delta.""" event_id: str

response_mcp_call_arguments_done.py
  The final JSON-encoded arguments string.""" event_id: str

response_mcp_call_completed.py
  The unique ID of the server event.""" item_id: str

response_mcp_call_failed.py
  The unique ID of the server event.""" item_id: str

response_mcp_call_in_progress.py
  The unique ID of the server event.""" item_id: str

response_output_item_added_event.py
  The unique ID of the server event.""" item: ConversationItem

response_output_item_done_event.py
  The unique ID of the server event.""" item: ConversationItem

response_text_delta_event.py
  The index of the content part in the item's content array.""" delta: str

response_text_done_event.py
  The index of the content part in the item's content array.""" event_id: str

session_created_event.py
  The unique ID of the server event.""" session: Session

session_update_event.py
  Update the Realtime session. Choose either a realtime session or a transcription session.

session_update_event_param.py
  Update the Realtime session. Choose either a realtime session or a transcription session.

session_updated_event.py
  The unique ID of the server event.""" session: Session

training_data_bot\.venv\Lib\site-packages\openai\types\responses/
--------------------------------------------------------------------------------

__init__.py
  No description

computer_tool.py
  The height of the computer display.""" display_width: int

computer_tool_param.py
  The height of the computer display.""" display_width: Required[int]

custom_tool.py
  The name of the custom tool, used to identify it in tool calls.""" type: Literal["custom"]

custom_tool_param.py
  The name of the custom tool, used to identify it in tool calls.""" type: Required[Literal["custom"]]

easy_input_message.py
  Text, image, or audio input to the model, used to generate a response. Can also contain previous assistant responses.

easy_input_message_param.py
  Text, image, or audio input to the model, used to generate a response. Can also contain previous assistant responses.

file_search_tool.py
  The ranker to use for the file search.""" score_threshold: Optional[float] = None

file_search_tool_param.py
  The ranker to use for the file search.""" score_threshold: float

function_tool.py
  The name of the function to call.""" parameters: Optional[Dict[str, object]] = None

function_tool_param.py
  The name of the function to call.""" parameters: Required[Optional[Dict[str, object]]]

input_item_list_params.py
  An item ID to list items after, used in pagination.""" include: List[ResponseIncludable]

parsed_response.py
  No description

response.py
  The reason why the response is incomplete.""" ToolChoice: TypeAlias = Union[

response_audio_delta_event.py
  A chunk of Base64 encoded response audio bytes.""" sequence_number: int

response_audio_done_event.py
  The sequence number of the delta.""" type: Literal["response.audio.done"]

response_audio_transcript_delta_event.py
  The partial transcript of the audio response.""" sequence_number: int

response_audio_transcript_done_event.py
  The sequence number of this event.""" type: Literal["response.audio.transcript.done"]

response_code_interpreter_call_code_delta_event.py
  The partial code snippet being streamed by the code interpreter.""" item_id: str

response_code_interpreter_call_code_done_event.py
  The final code snippet output by the code interpreter.""" item_id: str

response_code_interpreter_call_completed_event.py
  The unique identifier of the code interpreter tool call item.""" output_index: int

response_code_interpreter_call_in_progress_event.py
  The unique identifier of the code interpreter tool call item.""" output_index: int

response_code_interpreter_call_interpreting_event.py
  The unique identifier of the code interpreter tool call item.""" output_index: int

response_code_interpreter_tool_call.py
  The logs output from the code interpreter.""" type: Literal["logs"]

response_code_interpreter_tool_call_param.py
  The logs output from the code interpreter.""" type: Required[Literal["logs"]]

response_completed_event.py
  Properties of the completed response.""" sequence_number: int

response_computer_tool_call.py
  Indicates which mouse button was pressed during the click. One of `left`, `right`, `wheel`, `back`, or `forward`.

response_computer_tool_call_output_item.py
  The ID of the pending safety check.""" code: str

response_computer_tool_call_output_screenshot.py
  Specifies the event type. For a computer screenshot, this property is always set to `computer_screenshot`.

response_computer_tool_call_output_screenshot_param.py
  Specifies the event type. For a computer screenshot, this property is always set to `computer_screenshot`.

response_computer_tool_call_param.py
  Indicates which mouse button was pressed during the click. One of `left`, `right`, `wheel`, `back`, or `forward`.

response_content_part_added_event.py
  The reasoning text from the model.""" type: Literal["reasoning_text"]

response_content_part_done_event.py
  The reasoning text from the model.""" type: Literal["reasoning_text"]

response_conversation_param.py
  The unique ID of the conversation."""

response_create_params.py
  Whether to run the model response in the background. [Learn more](https://platform.openai.com/docs/guides/background).

response_created_event.py
  The response that was created.""" sequence_number: int

response_custom_tool_call.py
  An identifier used to map this custom tool call to a tool call output.""" input: str

response_custom_tool_call_input_delta_event.py
  The incremental input data (delta) for the custom tool call.""" item_id: str

response_custom_tool_call_input_done_event.py
  The complete input data for the custom tool call.""" item_id: str

response_custom_tool_call_output.py
  The call ID, used to map this custom tool call output to a custom tool call.""" output: str

response_custom_tool_call_output_param.py
  The call ID, used to map this custom tool call output to a custom tool call.""" output: Required[str]

response_custom_tool_call_param.py
  An identifier used to map this custom tool call to a tool call output.""" input: Required[str]

response_error.py
  The error code for the response.""" message: str

response_error_event.py
  The error code.""" message: str

response_failed_event.py
  The response that failed.""" sequence_number: int

response_file_search_call_completed_event.py
  The ID of the output item that the file search call is initiated.""" output_index: int

response_file_search_call_in_progress_event.py
  The ID of the output item that the file search call is initiated.""" output_index: int

response_file_search_call_searching_event.py
  The ID of the output item that the file search call is initiated.""" output_index: int

response_file_search_tool_call.py
  Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a

response_file_search_tool_call_param.py
  Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a

response_format_text_config.py
  No description

response_format_text_config_param.py
  No description

response_format_text_json_schema_config.py
  The name of the response format. Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum length

response_format_text_json_schema_config_param.py
  The name of the response format. Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum length

response_function_call_arguments_delta_event.py
  The function-call arguments delta that is added.""" item_id: str

response_function_call_arguments_done_event.py
  The function-call arguments.""" item_id: str

response_function_tool_call.py
  A JSON string of the arguments to pass to the function.""" call_id: str

response_function_tool_call_item.py
  The unique ID of the function tool call."""

response_function_tool_call_output_item.py
  The unique ID of the function call tool output.""" call_id: str

response_function_tool_call_param.py
  A JSON string of the arguments to pass to the function.""" call_id: Required[str]

response_function_web_search.py
  The type of source. Always `url`.""" url: str

response_function_web_search_param.py
  The type of source. Always `url`.""" url: Required[str]

response_image_gen_call_completed_event.py
  The unique identifier of the image generation item being processed.""" output_index: int

response_image_gen_call_generating_event.py
  The unique identifier of the image generation item being processed.""" output_index: int

response_image_gen_call_in_progress_event.py
  The unique identifier of the image generation item being processed.""" output_index: int

response_image_gen_call_partial_image_event.py
  The unique identifier of the image generation item being processed.""" output_index: int

response_in_progress_event.py
  The response that is in progress.""" sequence_number: int

response_includable.py
  No description

response_incomplete_event.py
  The response that was incomplete.""" sequence_number: int

response_input_audio.py
  Base64-encoded audio data.""" format: Literal["mp3", "wav"]

response_input_audio_param.py
  Base64-encoded audio data.""" format: Required[Literal["mp3", "wav"]]

response_input_content.py
  No description

response_input_content_param.py
  No description

response_input_file.py
  The type of the input item. Always `input_file`.""" file_data: Optional[str] = None

response_input_file_param.py
  The type of the input item. Always `input_file`.""" file_data: str

response_input_image.py
  The detail level of the image to be sent to the model. One of `high`, `low`, or `auto`. Defaults to `auto`.

response_input_image_param.py
  The detail level of the image to be sent to the model. One of `high`, `low`, or `auto`. Defaults to `auto`.

response_input_item.py
  A list of one or many input items to the model, containing different content types.

response_input_item_param.py
  A list of one or many input items to the model, containing different content types.

response_input_message_content_list.py
  No description

response_input_message_content_list_param.py
  No description

response_input_message_item.py
  The unique ID of the message input.""" content: ResponseInputMessageContentList

response_input_param.py
  A list of one or many input items to the model, containing different content types.

response_input_text.py
  The text input to the model.""" type: Literal["input_text"]

response_input_text_param.py
  The text input to the model.""" type: Required[Literal["input_text"]]

response_item.py
  The unique ID of the image generation call.""" result: Optional[str] = None

response_item_list.py
  A list of items used to generate this response.""" first_id: str

response_mcp_call_arguments_delta_event.py
  A JSON string containing the partial update to the arguments for the MCP tool call.

response_mcp_call_arguments_done_event.py
  A JSON string containing the finalized arguments for the MCP tool call.""" item_id: str

response_mcp_call_completed_event.py
  The ID of the MCP tool call item that completed.""" output_index: int

response_mcp_call_failed_event.py
  The ID of the MCP tool call item that failed.""" output_index: int

response_mcp_call_in_progress_event.py
  The unique identifier of the MCP tool call item being processed.""" output_index: int

response_mcp_list_tools_completed_event.py
  The ID of the MCP tool call item that produced this output.""" output_index: int

response_mcp_list_tools_failed_event.py
  The ID of the MCP tool call item that failed.""" output_index: int

response_mcp_list_tools_in_progress_event.py
  The ID of the MCP tool call item that is being processed.""" output_index: int

response_output_item.py
  The unique ID of the image generation call.""" result: Optional[str] = None

response_output_item_added_event.py
  The output item that was added.""" output_index: int

response_output_item_done_event.py
  The output item that was marked done.""" output_index: int

response_output_message.py
  The unique ID of the output message.""" content: List[Content]

response_output_message_param.py
  The unique ID of the output message.""" content: Required[Iterable[Content]]

response_output_refusal.py
  The refusal explanation from the model.""" type: Literal["refusal"]

response_output_refusal_param.py
  The refusal explanation from the model.""" type: Required[Literal["refusal"]]

response_output_text.py
  The ID of the file.""" filename: str

response_output_text_annotation_added_event.py
  The annotation object being added. (See annotation schema for details.)""" annotation_index: int

response_output_text_param.py
  The ID of the file.""" filename: Required[str]

response_prompt.py
  The unique identifier of the prompt template to use.""" variables: Optional[Dict[str, Variables]] = None

response_prompt_param.py
  The unique identifier of the prompt template to use.""" variables: Optional[Dict[str, Variables]]

response_queued_event.py
  The full response object that is queued.""" sequence_number: int

response_reasoning_item.py
  A summary of the reasoning output from the model so far.""" type: Literal["summary_text"]

response_reasoning_item_param.py
  A summary of the reasoning output from the model so far.""" type: Required[Literal["summary_text"]]

response_reasoning_summary_part_added_event.py
  The text of the summary part.""" type: Literal["summary_text"]

response_reasoning_summary_part_done_event.py
  The text of the summary part.""" type: Literal["summary_text"]

response_reasoning_summary_text_delta_event.py
  The text delta that was added to the summary.""" item_id: str

response_reasoning_summary_text_done_event.py
  The ID of the item this summary text is associated with.""" output_index: int

response_reasoning_text_delta_event.py
  The index of the reasoning content part this delta is associated with.""" delta: str

response_reasoning_text_done_event.py
  The index of the reasoning content part.""" item_id: str

response_refusal_delta_event.py
  The index of the content part that the refusal text is added to.""" delta: str

response_refusal_done_event.py
  The index of the content part that the refusal text is finalized.""" item_id: str

response_retrieve_params.py
  Additional fields to include in the response. See the `include` parameter for Response creation above for more information.

response_status.py
  No description

response_stream_event.py
  No description

response_text_config.py
  An object specifying the format that the model must output. Configuring `{ "type": "json_schema" }` enables Structured Outputs, which

response_text_config_param.py
  An object specifying the format that the model must output. Configuring `{ "type": "json_schema" }` enables Structured Outputs, which

response_text_delta_event.py
  A possible text token.""" logprob: Optional[float] = None

response_text_done_event.py
  A possible text token.""" logprob: Optional[float] = None

response_usage.py
  The number of tokens that were retrieved from the cache. [More on prompt caching](https://platform.openai.com/docs/guides/prompt-caching).

response_web_search_call_completed_event.py
  Unique ID for the output item associated with the web search call.""" output_index: int

response_web_search_call_in_progress_event.py
  Unique ID for the output item associated with the web search call.""" output_index: int

response_web_search_call_searching_event.py
  Unique ID for the output item associated with the web search call.""" output_index: int

tool.py
  Indicates whether or not a tool modifies data or is read-only. If an MCP server is

tool_choice_allowed.py
  Constrains the tools available to the model to a pre-defined set. `auto` allows the model to pick from among the allowed tools and generate a

tool_choice_allowed_param.py
  Constrains the tools available to the model to a pre-defined set. `auto` allows the model to pick from among the allowed tools and generate a

tool_choice_custom.py
  The name of the custom tool to call.""" type: Literal["custom"]

tool_choice_custom_param.py
  The name of the custom tool to call.""" type: Required[Literal["custom"]]

tool_choice_function.py
  The name of the function to call.""" type: Literal["function"]

tool_choice_function_param.py
  The name of the function to call.""" type: Required[Literal["function"]]

tool_choice_mcp.py
  The label of the MCP server to use.""" type: Literal["mcp"]

tool_choice_mcp_param.py
  The label of the MCP server to use.""" type: Required[Literal["mcp"]]

tool_choice_options.py
  No description

tool_choice_types.py
  The type of hosted tool the model should to use. Learn more about

tool_choice_types_param.py
  The type of hosted tool the model should to use. Learn more about

tool_param.py
  Indicates whether or not a tool modifies data or is read-only. If an MCP server is

web_search_preview_tool.py
  The type of location approximation. Always `approximate`.""" city: Optional[str] = None

web_search_preview_tool_param.py
  The type of location approximation. Always `approximate`.""" city: Optional[str]

web_search_tool.py
  Allowed domains for the search. If not provided, all domains are allowed. Subdomains of the provided domains are

web_search_tool_param.py
  Allowed domains for the search. If not provided, all domains are allowed. Subdomains of the provided domains are

training_data_bot\.venv\Lib\site-packages\openai\types\shared/
--------------------------------------------------------------------------------

__init__.py
  No description

all_models.py
  No description

chat_model.py
  No description

comparison_filter.py
  The key to compare against the value.""" type: Literal["eq", "ne", "gt", "gte", "lt", "lte"]

compound_filter.py
  Array of filters to combine. Items can be `ComparisonFilter` or `CompoundFilter`.

custom_tool_input_format.py
  Unconstrained text format. Always `text`.""" class Grammar(BaseModel):

error_object.py
  No description

function_definition.py
  The name of the function to be called. Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum length

function_parameters.py
  No description

metadata.py
  No description

reasoning.py
  Constrains effort on reasoning for [reasoning models](https://platform.openai.com/docs/guides/reasoning). Currently

reasoning_effort.py
  No description

response_format_json_object.py
  The type of response format being defined. Always `json_object`."""

response_format_json_schema.py
  The name of the response format. Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum length

response_format_text.py
  The type of response format being defined. Always `text`."""

response_format_text_grammar.py
  The custom grammar for the model to follow.""" type: Literal["grammar"]

response_format_text_python.py
  The type of response format being defined. Always `python`."""

responses_model.py
  No description

training_data_bot\.venv\Lib\site-packages\openai\types\shared_params/
--------------------------------------------------------------------------------

__init__.py
  No description

chat_model.py
  No description

comparison_filter.py
  The key to compare against the value.""" type: Required[Literal["eq", "ne", "gt", "gte", "lt", "lte"]]

compound_filter.py
  Array of filters to combine. Items can be `ComparisonFilter` or `CompoundFilter`.

custom_tool_input_format.py
  Unconstrained text format. Always `text`.""" class Grammar(TypedDict, total=False):

function_definition.py
  The name of the function to be called. Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum length

function_parameters.py
  No description

metadata.py
  No description

reasoning.py
  Constrains effort on reasoning for [reasoning models](https://platform.openai.com/docs/guides/reasoning). Currently

reasoning_effort.py
  No description

response_format_json_object.py
  The type of response format being defined. Always `json_object`."""

response_format_json_schema.py
  The name of the response format. Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum length

response_format_text.py
  The type of response format being defined. Always `text`."""

responses_model.py
  No description

training_data_bot\.venv\Lib\site-packages\openai\types/
--------------------------------------------------------------------------------

static_file_chunking_strategy.py
  The number of tokens that overlap between chunks. The default value is `400`. Note that the overlap must not exceed half of `max_chunk_size_tokens`.

static_file_chunking_strategy_object.py
  Always `static`."""

static_file_chunking_strategy_object_param.py
  Always `static`."""

static_file_chunking_strategy_param.py
  The number of tokens that overlap between chunks. The default value is `400`. Note that the overlap must not exceed half of `max_chunk_size_tokens`.

upload.py
  The Upload unique identifier, which can be referenced in API endpoints.""" bytes: int

upload_complete_params.py
  The ordered list of Part IDs.""" md5: str

upload_create_params.py
  The number of bytes in the file you are uploading.""" filename: Required[str]

training_data_bot\.venv\Lib\site-packages\openai\types\uploads/
--------------------------------------------------------------------------------

__init__.py
  No description

part_create_params.py
  The chunk of bytes for this Part."""

upload_part.py
  The upload Part unique identifier, which can be referenced in API endpoints.""" created_at: int

training_data_bot\.venv\Lib\site-packages\openai\types/
--------------------------------------------------------------------------------

vector_store.py
  The number of files that were cancelled.""" completed: int

vector_store_create_params.py
  The chunking strategy used to chunk the file(s). If not set, will use the `auto` strategy. Only applicable if `file_ids` is

vector_store_deleted.py
  No description

vector_store_list_params.py
  A cursor for use in pagination. `after` is an object ID that defines your place in the list. For instance, if

vector_store_search_params.py
  A query string for a search""" filters: Filters

vector_store_search_response.py
  The text content returned from search.""" type: Literal["text"]

vector_store_update_params.py
  The expiration policy for a vector store.""" metadata: Optional[Metadata]

training_data_bot\.venv\Lib\site-packages\openai\types\vector_stores/
--------------------------------------------------------------------------------

__init__.py
  No description

file_batch_create_params.py
  A list of [File](https://platform.openai.com/docs/api-reference/files) IDs that the vector store should use. Useful for tools like `file_search` that can access

file_batch_list_files_params.py
  A cursor for use in pagination. `after` is an object ID that defines your place in the list. For instance, if

file_content_response.py
  The text content""" type: Optional[str] = None

file_create_params.py
  A [File](https://platform.openai.com/docs/api-reference/files) ID that the vector store should use. Useful for tools like `file_search` that can access

file_list_params.py
  A cursor for use in pagination. `after` is an object ID that defines your place in the list. For instance, if

file_update_params.py
  Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a

vector_store_file.py
  One of `server_error` or `rate_limit_exceeded`.""" message: str

vector_store_file_batch.py
  The number of files that where cancelled.""" completed: int

vector_store_file_deleted.py
  No description

training_data_bot\.venv\Lib\site-packages\openai\types\webhooks/
--------------------------------------------------------------------------------

__init__.py
  No description

batch_cancelled_webhook_event.py
  The unique ID of the batch API request.""" class BatchCancelledWebhookEvent(BaseModel):

batch_completed_webhook_event.py
  The unique ID of the batch API request.""" class BatchCompletedWebhookEvent(BaseModel):

batch_expired_webhook_event.py
  The unique ID of the batch API request.""" class BatchExpiredWebhookEvent(BaseModel):

batch_failed_webhook_event.py
  The unique ID of the batch API request.""" class BatchFailedWebhookEvent(BaseModel):

eval_run_canceled_webhook_event.py
  The unique ID of the eval run.""" class EvalRunCanceledWebhookEvent(BaseModel):

eval_run_failed_webhook_event.py
  The unique ID of the eval run.""" class EvalRunFailedWebhookEvent(BaseModel):

eval_run_succeeded_webhook_event.py
  The unique ID of the eval run.""" class EvalRunSucceededWebhookEvent(BaseModel):

fine_tuning_job_cancelled_webhook_event.py
  The unique ID of the fine-tuning job.""" class FineTuningJobCancelledWebhookEvent(BaseModel):

fine_tuning_job_failed_webhook_event.py
  The unique ID of the fine-tuning job.""" class FineTuningJobFailedWebhookEvent(BaseModel):

fine_tuning_job_succeeded_webhook_event.py
  The unique ID of the fine-tuning job.""" class FineTuningJobSucceededWebhookEvent(BaseModel):

realtime_call_incoming_webhook_event.py
  Name of the SIP Header.""" value: str

response_cancelled_webhook_event.py
  The unique ID of the model response.""" class ResponseCancelledWebhookEvent(BaseModel):

response_completed_webhook_event.py
  The unique ID of the model response.""" class ResponseCompletedWebhookEvent(BaseModel):

response_failed_webhook_event.py
  The unique ID of the model response.""" class ResponseFailedWebhookEvent(BaseModel):

response_incomplete_webhook_event.py
  The unique ID of the model response.""" class ResponseIncompleteWebhookEvent(BaseModel):

unwrap_webhook_event.py
  No description

training_data_bot\.venv\Lib\site-packages\openai\types/
--------------------------------------------------------------------------------

websocket_connection_options.py
  Websocket connection options copied from `websockets`. For example: https://websockets.readthedocs.io/en/stable/reference/asyncio/client.html#websockets.asyncio.client.connect

training_data_bot\.venv\Lib\site-packages\openai/
--------------------------------------------------------------------------------

version.py
  No description

training_data_bot\.venv\Lib\site-packages\packaging/
--------------------------------------------------------------------------------

__init__.py
  No description

_elffile.py
  ELF file parser. This provides a class ``ELFFile`` that parses an ELF executable in a similar

_manylinux.py
  Primary implementation of glibc_version_string using os.confstr.

_musllinux.py
  PEP 656 support. This module implements logic to detect if the currently running Python is

_parser.py
  Handwritten parser of dependency specifiers. The docstring for each __parse_* function contains EBNF-inspired grammar representing

_structures.py
  No description

_tokenizer.py
  The provided source text could not be parsed correctly.""" def __init__(

training_data_bot\.venv\Lib\site-packages\packaging\licenses/
--------------------------------------------------------------------------------

__init__.py
  Raised when a license-expression string is invalid >>> canonicalize_license_expression("invalid")

_spdx.py
  No description

training_data_bot\.venv\Lib\site-packages\packaging/
--------------------------------------------------------------------------------

markers.py
  An invalid marker was found, users should refer to PEP 508.

metadata.py
  A minimal implementation of :external:exc:`ExceptionGroup` from Python 3.11. If :external:exc:`ExceptionGroup` is already defined by Python itself,

requirements.py
  An invalid requirement was found, users should refer to PEP 508.

specifiers.py
  .. testsetup:: from packaging.specifiers import Specifier, SpecifierSet, InvalidSpecifier

tags.py
  A representation of the tag triple for a wheel. Instances are considered immutable and thus are hashable. Equality checking

utils.py
  An invalid distribution name; users should refer to the packaging user guide.

version.py
  .. testsetup:: from packaging.version import parse, Version

training_data_bot\.venv\Lib\site-packages\pandas/
--------------------------------------------------------------------------------

__init__.py
  pandas - a powerful data analysis and manipulation library for Python =====================================================================

training_data_bot\.venv\Lib\site-packages\pandas\_config/
--------------------------------------------------------------------------------

__init__.py
  pandas._config is considered explicitly upstream of everything else in pandas, should have no intra-pandas dependencies.

config.py
  The config module holds package-wide configurables and provides a uniform API for working with them.

dates.py
  config for datetime formatting

display.py
  Unopinionated display configuration.

localization.py
  Helpers for configuring locale settings. Name `localization` is chosen to avoid overlap with builtin `locale` module.

training_data_bot\.venv\Lib\site-packages\pandas\_libs/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\_libs\tslibs/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\_libs\window/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\_testing/
--------------------------------------------------------------------------------

__init__.py
  Helper function to wrap the expected output of a test in a given box_class. Parameters

_hypothesis.py
  Hypothesis data generator helpers.

_io.py
  Pickle an object and then read it again. Parameters

_warnings.py
  Context manager for running code expected to either raise a specific warning, multiple specific warnings, or not raise any warnings. Verifies that the code

asserters.py
  Check that the left and right objects are approximately equal. By approximately equal, we refer to objects that are numbers or that

compat.py
  Helpers for sharing tests between DataFrame/Series

contexts.py
  Open a compressed file and return a file object. Parameters

training_data_bot\.venv\Lib\site-packages\pandas/
--------------------------------------------------------------------------------

_typing.py
  No description

_version.py
  Git implementation of _version.py.""" import errno

_version_meson.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\api/
--------------------------------------------------------------------------------

__init__.py
   public toolkit API """ from pandas.api import (

training_data_bot\.venv\Lib\site-packages\pandas\api\extensions/
--------------------------------------------------------------------------------

__init__.py
  Public API for extending pandas objects.

training_data_bot\.venv\Lib\site-packages\pandas\api\indexers/
--------------------------------------------------------------------------------

__init__.py
  Public API for Rolling Window Indexers.

training_data_bot\.venv\Lib\site-packages\pandas\api\interchange/
--------------------------------------------------------------------------------

__init__.py
  Public API for DataFrame interchange protocol.

training_data_bot\.venv\Lib\site-packages\pandas\api\types/
--------------------------------------------------------------------------------

__init__.py
  Public toolkit API.

training_data_bot\.venv\Lib\site-packages\pandas\api\typing/
--------------------------------------------------------------------------------

__init__.py
  Public API classes that store intermediate results useful for type-hinting.

training_data_bot\.venv\Lib\site-packages\pandas\arrays/
--------------------------------------------------------------------------------

__init__.py
  All of pandas' ExtensionArrays. See :ref:`extending.extension-types` for more.

training_data_bot\.venv\Lib\site-packages\pandas\compat/
--------------------------------------------------------------------------------

__init__.py
  compat ======

_constants.py
  _constants ======

_optional.py
  Import an optional dependency. By default, if a dependency is missing an ImportError with a nice

compressors.py
  Patched ``BZ2File`` and ``LZMAFile`` to handle pickle protocol 5.

training_data_bot\.venv\Lib\site-packages\pandas\compat\numpy/
--------------------------------------------------------------------------------

__init__.py
   support numpy compatibility across versions """ import warnings

function.py
  For compatibility with numpy libraries, pandas functions or methods have to accept '*args' and '**kwargs' parameters to accommodate numpy arguments that

training_data_bot\.venv\Lib\site-packages\pandas\compat/
--------------------------------------------------------------------------------

pickle_compat.py
  Support pre-0.12 series pickle compatibility.

pyarrow.py
   support pyarrow compatibility across versions """ from __future__ import annotations

training_data_bot\.venv\Lib\site-packages\pandas/
--------------------------------------------------------------------------------

conftest.py
  This file is very long and growing, but it was decided to not split it yet, as it's still manageable (2020-03-17, ~1.1k LoC). See gh-31989

training_data_bot\.venv\Lib\site-packages\pandas\core/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\core\_numba/
--------------------------------------------------------------------------------

__init__.py
  No description

executor.py
  Generate a Numba function that loops over the columns 2D object and applies a 1D numba kernel over each column.

extensions.py
  Utility classes/functions to let numba recognize pandas Index/Series/DataFrame

training_data_bot\.venv\Lib\site-packages\pandas\core\_numba\kernels/
--------------------------------------------------------------------------------

__init__.py
  No description

mean_.py
  Numba 1D mean kernels that can be shared by * Dataframe / Series

min_max_.py
  Numba 1D min/max kernels that can be shared by * Dataframe / Series

shared.py
  Check if int64 values are monotonically increasing.""" n = len(bounds)

sum_.py
  Numba 1D sum kernels that can be shared by * Dataframe / Series

var_.py
  Numba 1D var kernels that can be shared by * Dataframe / Series

training_data_bot\.venv\Lib\site-packages\pandas\core/
--------------------------------------------------------------------------------

accessor.py
  accessor.py contains base classes for implementing accessor properties that can be mixed into or pinned onto other pandas classes.

algorithms.py
  Generic data algorithms. This module is experimental at the moment and not intended for public consumption

api.py
  No description

apply.py
  construct and return a row or column based frame apply object""" axis = obj._get_axis_number(axis)

training_data_bot\.venv\Lib\site-packages\pandas\core\array_algos/
--------------------------------------------------------------------------------

__init__.py
  core.array_algos is for algorithms that operate on ndarray and ExtensionArray. These should:

datetimelike_accumulations.py
  datetimelke_accumulations.py is for accumulations of datetimelike extension arrays

masked_accumulations.py
  masked_accumulations.py is for accumulation algorithms using a mask-based approach for missing values.

masked_reductions.py
  masked_reductions.py is for reduction algorithms using a mask-based approach for missing values.

putmask.py
  EA-compatible analogue to np.putmask

quantile.py
  Compute the quantiles of the given values for each quantile in `qs`. Parameters

replace.py
  Methods used by Block.replace and related methods.

take.py
  Specialized Cython take which sets NaN values in one pass This dispatches to ``take`` defined on ExtensionArrays.

transforms.py
  transforms.py is for shape-preserving functions.

training_data_bot\.venv\Lib\site-packages\pandas\core/
--------------------------------------------------------------------------------

arraylike.py
  Methods that can be shared by many array-like classes or subclasses: Series

training_data_bot\.venv\Lib\site-packages\pandas\core\arrays/
--------------------------------------------------------------------------------

__init__.py
  No description

_arrow_string_mixins.py
  No description

_mixins.py
  Decorator to ravel a 2D array before passing it to a cython operation, then reshape the result to our own shape.

_ranges.py
  Helper functions to generate range-like data for DatetimeArray (and possibly TimedeltaArray/PeriodArray)

_utils.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\core\arrays\arrow/
--------------------------------------------------------------------------------

__init__.py
  No description

_arrow_utils.py
  Convert a primitive pyarrow.Array to a numpy array and boolean mask based on the buffers of the Array.

accessors.py
  Accessors for arrow-backed data.""" from __future__ import annotations

array.py
  Convert dtype to a pyarrow type instance.

extension_types.py
  \ Disallowed deserialization of 'arrow.py_extension_type':

training_data_bot\.venv\Lib\site-packages\pandas\core\arrays/
--------------------------------------------------------------------------------

base.py
  An interface for extending pandas with custom arrays. .. warning::

boolean.py
  Extension dtype for boolean data. .. warning::

categorical.py
  Helper for membership check for ``key`` in ``cat``. This is a helper method for :method:`__contains__`

datetimelike.py
  For PeriodArray methods, dispatch to DatetimeArray and re-wrap the results in PeriodArray.  We cannot use ._ndarray directly for the affected

datetimes.py
  Return a datetime64[ns] dtype appropriate for the given timezone. Parameters

floating.py
  An ExtensionDtype to hold a single size of floating dtype. These specific implementations are subclasses of the non-public

integer.py
  An ExtensionDtype to hold a single size & kind of integer dtype. These specific implementations are subclasses of the non-public

interval.py
  %(summary)s Parameters

masked.py
  Base class for masked arrays (which use _data and _mask to store the data). numpy based

numeric.py
  Construct IntegerArray/FloatingArray from pyarrow Array/ChunkedArray.

numpy_.py
  A pandas ExtensionArray for NumPy data. This is mostly for internal compatibility, and is not especially

period.py
  Pandas ExtensionArray for storing Period data. Users should use :func:`~pandas.array` to create new instances.

training_data_bot\.venv\Lib\site-packages\pandas\core\arrays\sparse/
--------------------------------------------------------------------------------

__init__.py
  No description

accessor.py
  Sparse accessor""" from __future__ import annotations

array.py
  SparseArray data structure

scipy_sparse.py
  Interaction with scipy.sparse matrices. Currently only includes to_coo helpers.

training_data_bot\.venv\Lib\site-packages\pandas\core\arrays/
--------------------------------------------------------------------------------

string_.py
  Extension dtype for string data. .. warning::

string_arrow.py
  Extension array for string data in a ``pyarrow.ChunkedArray``. .. warning::

timedeltas.py
  Pandas ExtensionArray for timedelta data. .. warning::

training_data_bot\.venv\Lib\site-packages\pandas\core/
--------------------------------------------------------------------------------

base.py
  Base and utility classes for pandas objects.

common.py
  Misc tools for implementing data structures Note: pandas.core.common is *not* part of the public API.

training_data_bot\.venv\Lib\site-packages\pandas\core\computation/
--------------------------------------------------------------------------------

__init__.py
  No description

align.py
  Core eval alignment algorithms.

api.py
  No description

check.py
  No description

common.py
  If we have bytes, decode them to unicode.

engines.py
  Engine classes for :func:`~pandas.eval`

eval.py
  Top level ``eval`` module.

expr.py
  :func:`~pandas.eval` parsers.

expressions.py
  Expressions -----------

ops.py
  Operator classes for eval.

parsing.py
  :func:`~pandas.eval` source string parsing functions

pytables.py
   manage PyTables query interface via Expressions """ from __future__ import annotations

scope.py
  Module for scope operations

training_data_bot\.venv\Lib\site-packages\pandas\core/
--------------------------------------------------------------------------------

config_init.py
  This module is imported from the pandas package __init__.py file in order to ensure that the core.config options registered here will

construction.py
  Constructor functions intended to be shared by pd.array, Series.__init__, and Index.__new__.

training_data_bot\.venv\Lib\site-packages\pandas\core\dtypes/
--------------------------------------------------------------------------------

__init__.py
  No description

api.py
  No description

astype.py
  Functions for implementing 'astype' methods according to pandas conventions, particularly ones that differ from numpy.

base.py
  Extend pandas with custom array types.

cast.py
  Routines for casting.

common.py
  Common type operations.

concat.py
  Utility functions related to concat.

dtypes.py
  Define extension dtypes.

generic.py
   define generic base classes for pandas objects """ from __future__ import annotations

inference.py
   basic inference routines """ from __future__ import annotations

missing.py
  missing types & inference

training_data_bot\.venv\Lib\site-packages\pandas\core/
--------------------------------------------------------------------------------

flags.py
  Flags that apply to pandas objects. Parameters

frame.py
  DataFrame ---------

generic.py
  inplace : bool, default False

training_data_bot\.venv\Lib\site-packages\pandas\core\groupby/
--------------------------------------------------------------------------------

__init__.py
  No description

base.py
  Provide basic components for groupby.

categorical.py
  Code the categories to ensure we can groupby for categoricals. If observed=True, we return a new Categorical with the observed

generic.py
  Define the SeriesGroupBy and DataFrameGroupBy classes that hold the groupby interfaces (and some implementations).

groupby.py
  Provide the groupby split-apply-combine paradigm. Define the GroupBy class providing the base-class of operations.

grouper.py
  Provide user facing operators for doing the split part of the split-apply-combine paradigm.

indexing.py
  Mixin for adding ._positional_selector to GroupBy.

numba_.py
  Common utilities for Numba operations with groupby ops""" from __future__ import annotations

ops.py
  Provide classes to perform the groupby aggregate operations. These are not exposed to the user and provide implementations of the grouping

training_data_bot\.venv\Lib\site-packages\pandas\core\indexers/
--------------------------------------------------------------------------------

__init__.py
  No description

objects.py
  Indexer objects for computing start/end window bounds for rolling operations""" from __future__ import annotations

utils.py
  Low-dependency indexing utilities.

training_data_bot\.venv\Lib\site-packages\pandas\core\indexes/
--------------------------------------------------------------------------------

__init__.py
  No description

accessors.py
  datetimelike delegation

api.py
  \ Sorting because non-concatenation axis is not aligned. A future version

base.py
  Decorator to simplify 'return_indexers' checks in Index.join.

category.py
  Index based on an underlying :class:`Categorical`. CategoricalIndex, like Categorical, can only take on a limited,

datetimelike.py
  Base and utility classes for tseries type pandas objects.

datetimes.py
  This is called upon unpickling, rather than the default which doesn't have arguments and breaks __new__

extension.py
  Shared methods for Index subclasses backed by ExtensionArray.

frozen.py
  frozen (immutable) data structures to support MultiIndexing These are used for:

interval.py
   define the IntervalIndex """ from __future__ import annotations

multi.py
  This class manages a MultiIndex by mapping label combinations to positive integers.

period.py
  Immutable ndarray holding ordinal values indicating regular periods in time. Index keys are boxed to Period objects which carries the metadata (eg,

range.py
  Immutable Index implementing a monotonic integer range. RangeIndex is a memory-saving special case of an Index limited to representing

timedeltas.py
   implement the TimedeltaIndex """ from __future__ import annotations

training_data_bot\.venv\Lib\site-packages\pandas\core/
--------------------------------------------------------------------------------

indexing.py
  Create an object to more easily perform multi-index slicing. See Also

training_data_bot\.venv\Lib\site-packages\pandas\core\interchange/
--------------------------------------------------------------------------------

__init__.py
  No description

buffer.py
  Data in the buffer is guaranteed to be contiguous in memory.

column.py
  A column object, with only the methods and properties required by the interchange protocol defined.

dataframe.py
  A data frame class, with only the methods required by the interchange protocol defined.

dataframe_protocol.py
  A verbatim copy (vendored) of the spec from https://github.com/data-apis/dataframe-api

from_dataframe.py
  Build a ``pd.DataFrame`` from any DataFrame supporting the interchange protocol. .. note::

utils.py
  Utility functions and objects for implementing the interchange API.

training_data_bot\.venv\Lib\site-packages\pandas\core\internals/
--------------------------------------------------------------------------------

__init__.py
  No description

api.py
  This is a pseudo-public API for downstream libraries.  We ask that downstream authors

array_manager.py
  Experimental manager based on storing a collection of 1D arrays

base.py
  Base class for the internal managers. Both BlockManager and ArrayManager inherit from this class.

blocks.py
  \ Setting a value on a view: behaviour will change in pandas 3.0.

concat.py
  Concatenate array managers into one. Parameters

construction.py
  Functions for preparing various inputs passed to the DataFrame or Series constructors before passing them to a BlockManager.

managers.py
  Core internal data structure to implement DataFrame, Series, etc. Manage a bunch of labeled 2D mixed-type ndarrays. Essentially it's a

ops.py
  Reset mgr_locs to correspond to our original DataFrame.

training_data_bot\.venv\Lib\site-packages\pandas\core\methods/
--------------------------------------------------------------------------------

__init__.py
  No description

describe.py
  Module responsible for execution of NDFrame.describe() method. Method NDFrame.describe() delegates actual execution to function describe_ndframe().

selectn.py
  Implementation of nlargest and nsmallest.

to_dict.py
  Convert the DataFrame to a dictionary. The type of the key-value pairs can be customized with the parameters

training_data_bot\.venv\Lib\site-packages\pandas\core/
--------------------------------------------------------------------------------

missing.py
  Routines for filling missing data.

nanops.py
  return the correct fill value for the dtype of the values""" if fill_value is not None:

training_data_bot\.venv\Lib\site-packages\pandas\core\ops/
--------------------------------------------------------------------------------

__init__.py
  Arithmetic operations for PandasObjects This is not a public API.

array_ops.py
  Functions for arithmetic and comparison operations on NumPy arrays and ExtensionArrays.

common.py
  Boilerplate functions used in defining binary operations.

dispatch.py
  Functions for defining unary operations.

docstrings.py
  Templating for ops docstrings

invalid.py
  Templates for invalid operations.

mask_ops.py
  Ops for masked arrays.

missing.py
  Missing data handling for arithmetic operations. In particular, pandas conventions regarding division by zero differ

training_data_bot\.venv\Lib\site-packages\pandas\core/
--------------------------------------------------------------------------------

resample.py
  Class for resampling datetimelike data, a groupby-like operation. See aggregate, transform, and apply functions on this object.

training_data_bot\.venv\Lib\site-packages\pandas\core\reshape/
--------------------------------------------------------------------------------

__init__.py
  No description

api.py
  No description

concat.py
  Concat routines.

encoding.py
  Convert categorical variable into dummy/indicator variables. Each variable is converted in as many 0/1 variables as there are different

melt.py
  Reshape wide-format data to long. Generalized inverse of DataFrame.pivot. Accepts a dictionary, ``groups``, in which each key is a new column name

merge.py
  SQL-style merge routines

pivot.py
  Helper of :func:`pandas.pivot_table` for any non-list ``aggfunc``.

reshape.py
  Helper class to unstack data / pivot with multi-level index Parameters

tile.py
  Quantilization functions and related stuff

util.py
  Numpy version of itertools.product. Sometimes faster (for large inputs)...

training_data_bot\.venv\Lib\site-packages\pandas\core/
--------------------------------------------------------------------------------

roperator.py
  Reversed Operations not available in the stdlib operator module. Defining these instead of using lambdas allows us to reference them by name.

sample.py
  Module containing utilities for NDFrame.sample() and .GroupBy.sample()

series.py
  Data structure for 1-dimensional cross-sectional and time series data

shared_docs.py
  Aggregate using one or more operations over the specified axis. Parameters

sorting.py
   miscellaneous sorting / groupby utilities """ from __future__ import annotations

training_data_bot\.venv\Lib\site-packages\pandas\core\sparse/
--------------------------------------------------------------------------------

__init__.py
  No description

api.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\core\strings/
--------------------------------------------------------------------------------

__init__.py
  Implementation of pandas.Series.str and its interface. * strings.accessor.StringMethods : Accessor for Series.str

accessor.py
  Decorator to forbid specific types for a method of StringMethods. For calling `.str.{method}` on a Series or Index, it is necessary to first

base.py
  Base class for extension arrays implementing string methods. This is where our ExtensionArrays can override the implementation of

object_array.py
  String Methods operating on object-dtype ndarrays.

training_data_bot\.venv\Lib\site-packages\pandas\core\tools/
--------------------------------------------------------------------------------

__init__.py
  No description

datetimes.py
  Decides whether to do caching. If the percent of unique elements among `check_count` elements less

numeric.py
  Convert argument to a numeric type. The default return dtype is `float64` or `int64`

timedeltas.py
  timedelta support tools

times.py
  Parse time strings to time objects using fixed strptime formats ("%H:%M", "%H%M", "%I:%M%p", "%I%M%p", "%H:%M:%S", "%H%M%S", "%I:%M:%S%p",

training_data_bot\.venv\Lib\site-packages\pandas\core\util/
--------------------------------------------------------------------------------

__init__.py
  No description

hashing.py
  data hash pandas / numpy objects

numba_.py
  Common utilities for Numba operations""" from __future__ import annotations

training_data_bot\.venv\Lib\site-packages\pandas\core\window/
--------------------------------------------------------------------------------

__init__.py
  No description

common.py
  Common utility functions for rolling operations""" from __future__ import annotations

doc.py
  Any shareable docstring components for rolling/expanding/ewm""" from __future__ import annotations

ewm.py
  Return the diff of the times divided by the half-life. These values are used in the calculation of the ewm mean.

expanding.py
  Provide expanding window calculations. Parameters

numba_.py
  Generate a numba jitted apply function specified by values from engine_kwargs. 1. jit the user's function

online.py
  Generate a numba jitted groupby ewma function specified by values from engine_kwargs.

rolling.py
  Provide a generic structure to support window functions, similar to how we have a Groupby object.

training_data_bot\.venv\Lib\site-packages\pandas\errors/
--------------------------------------------------------------------------------

__init__.py
  Expose public exceptions & warnings

training_data_bot\.venv\Lib\site-packages\pandas\io/
--------------------------------------------------------------------------------

__init__.py
  No description

_util.py
  No description

api.py
  Data IO api

training_data_bot\.venv\Lib\site-packages\pandas\io\clipboard/
--------------------------------------------------------------------------------

__init__.py
  Pyperclip A cross-platform clipboard module for Python,

training_data_bot\.venv\Lib\site-packages\pandas\io/
--------------------------------------------------------------------------------

clipboards.py
   io on the clipboard """ from __future__ import annotations

common.py
  Common IO api utilities""" from __future__ import annotations

training_data_bot\.venv\Lib\site-packages\pandas\io\excel/
--------------------------------------------------------------------------------

__init__.py
  No description

_base.py
  Read an Excel file into a ``pandas`` ``DataFrame``. Supports `xls`, `xlsx`, `xlsm`, `xlsb`, `odf`, `ods` and `odt` file extensions

_calamine.py
  Reader using calamine engine (xlsx/xls/xlsb/ods). Parameters

_odfreader.py
  Read tables out of OpenDocument formatted files. Parameters

_odswriter.py
  Book instance of class odf.opendocument.OpenDocumentSpreadsheet. This attribute can be used to access engine-specific features.

_openpyxl.py
  Book instance of class openpyxl.workbook.Workbook. This attribute can be used to access engine-specific features.

_pyxlsb.py
  Reader using pyxlsb engine. Parameters

_util.py
  Add engine to the excel writer registry.io.excel. You must use this method to integrate with ``to_excel``.

_xlrd.py
  Reader using xlrd engine. Parameters

_xlsxwriter.py
  converts a style_dict to an xlsxwriter format dict Parameters

training_data_bot\.venv\Lib\site-packages\pandas\io/
--------------------------------------------------------------------------------

feather_format.py
   feather-format compat """ from __future__ import annotations

training_data_bot\.venv\Lib\site-packages\pandas\io\formats/
--------------------------------------------------------------------------------

__init__.py
  No description

_color_data.py
  No description

console.py
  Internal module for console introspection

css.py
  Utilities for interpreting CSS from Stylers for formatting non-HTML outputs.

csvs.py
  Module for formatting output data into CSV files.

excel.py
  Utilities for conversion to writer-agnostic Excel representation.

format.py
  Internal module for formatting output data in csv, html, xml, and latex files. This module also applies to display formatting.

html.py
  Module for formatting output data in HTML.

info.py
  \ max_cols : int, optional

printing.py
  Printing tools.

string.py
  Module for formatting output data in console (to string).

style.py
  Module for applying conditional formatting to DataFrames and Series.

style_render.py
  Base class to process rendering a Styler with a specified jinja2 template.

xml.py
  :mod:`pandas.io.formats.xml` is a module for formatting data in XML.

training_data_bot\.venv\Lib\site-packages\pandas\io/
--------------------------------------------------------------------------------

gbq.py
   Google BigQuery support """ from __future__ import annotations

html.py
  :mod:`pandas.io.html` is a module containing functionality for dealing with HTML IO.

training_data_bot\.venv\Lib\site-packages\pandas\io\json/
--------------------------------------------------------------------------------

__init__.py
  No description

_json.py
  Object to write in JSON format.""" class SeriesWriter(Writer):

_normalize.py
  Helper function that converts JSON lists to line delimited JSON.

_table_schema.py
  Table Schema builders https://specs.frictionlessdata.io/table-schema/

training_data_bot\.venv\Lib\site-packages\pandas\io/
--------------------------------------------------------------------------------

orc.py
   orc compat """ from __future__ import annotations

parquet.py
   parquet compat """ from __future__ import annotations

training_data_bot\.venv\Lib\site-packages\pandas\io\parsers/
--------------------------------------------------------------------------------

__init__.py
  No description

arrow_parser_wrapper.py
  Wrapper for the pyarrow engine for read_csv()

base_parser.py
  Check if parse_dates are in columns. If user has provided names for parse_dates, check if those columns

c_parser_wrapper.py
  Set the columns that should not undergo dtype conversions. Currently, any column that is involved with date parsing will not

python_parser.py
  Workhorse function for processing nested list into DataFrame

readers.py
  Module contains tools for processing files into DataFrames or other objects GH#48849 provides a convenient way of deprecating keyword arguments

training_data_bot\.venv\Lib\site-packages\pandas\io/
--------------------------------------------------------------------------------

pickle.py
   pickle compat """ from __future__ import annotations

pytables.py
  High level interface to PyTables for reading and writing pandas data structures to disk

training_data_bot\.venv\Lib\site-packages\pandas\io\sas/
--------------------------------------------------------------------------------

__init__.py
  No description

sas7bdat.py
  Read SAS7BDAT files Based on code written by Jared Hobbs:

sas_constants.py
  No description

sas_xport.py
  Read a SAS XPort format file into a Pandas DataFrame. Based on code from Jack Cushman (github.com/jcushman/xport).

sasreader.py
  Read SAS sas7bdat or xport files.

training_data_bot\.venv\Lib\site-packages\pandas\io/
--------------------------------------------------------------------------------

spss.py
  Load an SPSS file from the file path, returning a DataFrame. Parameters

sql.py
  Collection of query wrappers / abstractions to both facilitate data retrieval and to reduce dependency on DB-specific API.

stata.py
  Module contains tools for processing Stata files into DataFrames The StataReader below was originally written by Joe Presbrey as part of PyDTA.

xml.py
  :mod:``pandas.io.xml`` is a module for reading XML.

training_data_bot\.venv\Lib\site-packages\pandas\plotting/
--------------------------------------------------------------------------------

__init__.py
  Plotting public API. Authors of third-party plotting backends should implement a module with a

_core.py
  Draw histogram of the input series using matplotlib. Parameters

training_data_bot\.venv\Lib\site-packages\pandas\plotting\_matplotlib/
--------------------------------------------------------------------------------

__init__.py
  No description

boxplot.py
  Set the tick labels of a given axis. Due to https://github.com/matplotlib/matplotlib/pull/17266, we need to handle the

converter.py
  Decorator applying pandas_converters.

core.py
  Check if there is a color letter in the style string.

groupby.py
  Create data for iteration given `by` is assigned or not, and it is only used in both hist and boxplot.

hist.py
  Calculate bins given data""" nd_values = data.infer_objects(copy=False)._get_numeric_data()

misc.py
  No description

style.py
  Get standard colors based on `colormap`, `color_type` or `color` inputs. Parameters

timeseries.py
  Initialize axes for time-series plotting""" if not hasattr(ax, "_plot_data"):

tools.py
  Whether fig has constrained_layout enabled.""" if not hasattr(fig, "get_constrained_layout"):

training_data_bot\.venv\Lib\site-packages\pandas\plotting/
--------------------------------------------------------------------------------

_misc.py
  Helper function to convert DataFrame and Series to matplotlib.table. Parameters

training_data_bot\.venv\Lib\site-packages\pandas/
--------------------------------------------------------------------------------

testing.py
  Public testing utility functions.

training_data_bot\.venv\Lib\site-packages\pandas\tests/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\api/
--------------------------------------------------------------------------------

__init__.py
  No description

test_api.py
  No description

test_types.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\apply/
--------------------------------------------------------------------------------

__init__.py
  No description

common.py
  No description

test_frame_apply.py
  Fixture for DataFrame of ints which are constant per column Columns are ['A', 'B', 'C'], with values (per column): [1, 2, 3]

test_frame_apply_relabeling.py
  No description

test_frame_transform.py
  Helper to ensure we have the right type of object for a test parametrized over frame_or_series.

test_invalid_arg.py
  No description

test_numba.py
  No description

test_series_apply.py
  No description

test_series_apply_relabeling.py
  No description

test_series_transform.py
  No description

test_str.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\arithmetic/
--------------------------------------------------------------------------------

__init__.py
  No description

common.py
  Assertion helpers for arithmetic tests.

conftest.py
  Several variants of integer value 1. The zero-dim integer array behaves like an integer.

test_array_ops.py
  No description

test_categorical.py
  No description

test_datetime64.py
  No description

test_interval.py
  Fixture for building an IntervalArray from various dtypes

test_numeric.py
  Fixture to test behavior for Index, Series and tm.to_array classes

test_object.py
  No description

test_period.py
  Several timedelta-like and DateOffset instances that are _not_ compatible with Hourly frequencies.

test_timedelta64.py
  Helper to check the dtype for a Series, Index, or single-column DataFrame.

training_data_bot\.venv\Lib\site-packages\pandas\tests\arrays/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\arrays\boolean/
--------------------------------------------------------------------------------

__init__.py
  No description

test_arithmetic.py
  Fixture returning boolean array with valid and missing values.""" return pd.array(

test_astype.py
  No description

test_comparison.py
  Fixture returning boolean array with valid and missing data""" return pd.array(

test_construction.py
  No description

test_function.py
  No description

test_indexing.py
  No description

test_logical.py
  No description

test_ops.py
  No description

test_reduction.py
  Fixture returning boolean array, with valid and missing values.""" return pd.array(

test_repr.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\arrays\categorical/
--------------------------------------------------------------------------------

__init__.py
  No description

test_algos.py
  No description

test_analytics.py
  No description

test_api.py
  No description

test_astype.py
  No description

test_constructors.py
  No description

test_dtypes.py
  No description

test_indexing.py
  Monkeypatch Categorical.__array__ to ensure no implicit conversion. Raises

test_map.py
  No description

test_missing.py
  No description

test_operators.py
  No description

test_replace.py
  No description

test_repr.py
  \ ['aaaaa', 'bb', 'cccc', 'aaaaa', 'bb', ..., 'bb', 'cccc', 'aaaaa', 'bb', 'cccc']

test_sorting.py
  No description

test_subclass.py
  No description

test_take.py
  Boolean 'allow_fill' parameter for Categorical.take""" return request.param

test_warnings.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\arrays\datetimes/
--------------------------------------------------------------------------------

__init__.py
  No description

test_constructors.py
  No description

test_cumulative.py
  No description

test_reductions.py
  Fixture returning DatetimeArray with parametrized timezones""" tz = tz_naive_fixture

training_data_bot\.venv\Lib\site-packages\pandas\tests\arrays\floating/
--------------------------------------------------------------------------------

__init__.py
  No description

conftest.py
  Parametrized fixture returning a float 'dtype'""" return request.param()

test_arithmetic.py
  No description

test_astype.py
  No description

test_comparison.py
  No description

test_concat.py
  No description

test_construction.py
  No description

test_contains.py
  No description

test_function.py
  No description

test_repr.py
  <FloatingArray> [ 1.0,  2.0, <NA>,  1.0,  2.0, <NA>,  1.0,  2.0, <NA>,  1.0,

test_to_numpy.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\arrays\integer/
--------------------------------------------------------------------------------

__init__.py
  No description

conftest.py
  Parametrized fixture returning integer 'dtype'""" return request.param()

test_arithmetic.py
  No description

test_comparison.py
  No description

test_concat.py
  No description

test_construction.py
  Fixture returning parametrized IntegerArray from given sequence. Used to test dtype conversions.

test_dtypes.py
  No description

test_function.py
  No description

test_indexing.py
  No description

test_reduction.py
  No description

test_repr.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\arrays\interval/
--------------------------------------------------------------------------------

__init__.py
  No description

test_astype.py
  No description

test_formats.py
  No description

test_interval.py
  Fixture for building an IntervalArray from various dtypes

test_interval_pyarrow.py
  No description

test_overlaps.py
  Tests for Interval-Interval operations, such as overlaps, contains, etc.""" import numpy as np

training_data_bot\.venv\Lib\site-packages\pandas\tests\arrays\masked/
--------------------------------------------------------------------------------

__init__.py
  No description

test_arithmetic.py
  Fixture returning parametrized (array, scalar) tuple. Used to test equivalence of scalars, numpy arrays with array ops, and the

test_arrow_compat.py
  Fixture returning parametrized array from given dtype, including integer, float and boolean

test_function.py
  Fixture returning parametrized 'data' array with different integer and floating point types

test_indexing.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\arrays/
--------------------------------------------------------------------------------

masked_shared.py
  Tests shared by MaskedArray subclasses.

training_data_bot\.venv\Lib\site-packages\pandas\tests\arrays\numpy_/
--------------------------------------------------------------------------------

__init__.py
  No description

test_indexing.py
  No description

test_numpy.py
  Additional tests for NumpyExtensionArray that aren't covered by the interface tests.

training_data_bot\.venv\Lib\site-packages\pandas\tests\arrays\period/
--------------------------------------------------------------------------------

__init__.py
  No description

test_arrow_compat.py
  No description

test_astype.py
  No description

test_constructors.py
  No description

test_reductions.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\arrays\sparse/
--------------------------------------------------------------------------------

__init__.py
  No description

test_accessor.py
  No description

test_arithmetics.py
  kind kwarg to pass to SparseArray""" return request.param

test_array.py
  Fixture returning numpy array with valid and missing entries""" return np.array([np.nan, np.nan, 1, 2, 3, np.nan, 4, 5, np.nan, 6])

test_astype.py
  No description

test_combine_concat.py
  No description

test_constructors.py
  No description

test_dtype.py
  No description

test_indexing.py
  No description

test_libsparse.py
  No description

test_reductions.py
  No description

test_unary.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\arrays\string_/
--------------------------------------------------------------------------------

__init__.py
  No description

test_concat.py
  No description

test_string.py
  This module tests the functionality of StringArray and ArrowStringArray. Tests for the str accessors are in pandas/tests/strings/test_string_array.py

test_string_arrow.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\arrays/
--------------------------------------------------------------------------------

test_array.py
  Return the array type associated with this dtype. Returns

test_datetimelike.py
  Fixture returning parametrized frequency in string format.""" return request.param

test_datetimes.py
  Tests for DatetimeArray

test_ndarray_backed.py
  Tests for subclasses of NDArrayBackedExtensionArray

test_period.py
  No description

test_timedeltas.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\arrays\timedeltas/
--------------------------------------------------------------------------------

__init__.py
  No description

test_constructors.py
  No description

test_cumulative.py
  No description

test_reductions.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\base/
--------------------------------------------------------------------------------

__init__.py
  No description

common.py
  Whether to skip test cases including NaN""" is_bool_index = isinstance(obj, Index) and obj.inferred_type == "boolean"

test_constructors.py
  a test method""" class Delegate(PandasDelegate, PandasObject):

test_conversion.py
  No description

test_fillna.py
  Though Index.fillna and Series.fillna has separate impl, test here to confirm these works as the same

test_misc.py
  No description

test_transpose.py
  No description

test_unique.py
  No description

test_value_counts.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\computation/
--------------------------------------------------------------------------------

__init__.py
  No description

test_compat.py
  No description

test_eval.py
  1 + 2 * \

training_data_bot\.venv\Lib\site-packages\pandas\tests\config/
--------------------------------------------------------------------------------

__init__.py
  No description

test_config.py
  No description

test_localization.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\construction/
--------------------------------------------------------------------------------

__init__.py
  No description

test_extract_array.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\copy_view/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\copy_view\index/
--------------------------------------------------------------------------------

__init__.py
  No description

test_datetimeindex.py
  No description

test_index.py
  No description

test_periodindex.py
  No description

test_timedeltaindex.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\copy_view/
--------------------------------------------------------------------------------

test_array.py
  No description

test_astype.py
  No description

test_chained_assignment_deprecation.py
  No description

test_clip.py
  No description

test_constructors.py
  No description

test_core_functionalities.py
  No description

test_functions.py
  No description

test_indexing.py
  No description

test_internals.py
  No description

test_interp_fillna.py
  No description

test_methods.py
  No description

test_replace.py
  No description

test_setitem.py
  No description

test_util.py
  No description

util.py
  Helper method to get array for a DataFrame column or a Series. Equivalent of df[col].values, but without going through normal getitem,

training_data_bot\.venv\Lib\site-packages\pandas\tests\dtypes/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\dtypes\cast/
--------------------------------------------------------------------------------

__init__.py
  No description

test_can_hold_element.py
  No description

test_construct_from_scalar.py
  No description

test_construct_ndarray.py
  No description

test_construct_object_arr.py
  No description

test_dict_compat.py
  No description

test_downcast.py
  No description

test_find_common_type.py
  No description

test_infer_datetimelike.py
  No description

test_infer_dtype.py
  No description

test_maybe_box_native.py
  No description

test_promote.py
  These test the method maybe_promote from core/dtypes/cast.py

training_data_bot\.venv\Lib\site-packages\pandas\tests\dtypes/
--------------------------------------------------------------------------------

test_common.py
  convert list of string dtypes to EA dtype""" return [getattr(pd, dt + "Dtype") for dt in dtypes]

test_concat.py
  No description

test_dtypes.py
  Class level fixture of dtype for TestCategoricalDtype

test_generic.py
  No description

test_inference.py
  These the test the public routines exposed in types/common.py related to inference and not otherwise tested in types/test_common.py

test_missing.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\extension/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\extension\array_with_attr/
--------------------------------------------------------------------------------

__init__.py
  No description

array.py
  Test extension array that has custom attribute information (not stored on the dtype).

test_array_with_attr.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\extension\base/
--------------------------------------------------------------------------------

__init__.py
  Base test suite for extension arrays. These tests are intended for third-party libraries to subclass to validate

accumulate.py
  Accumulation specific tests. Generally these only make sense for numeric/boolean operations.

base.py
  No description

casting.py
  Casting to and from ExtensionDtypes""" def test_astype_object_series(self, all_data):

constructors.py
  No description

dim2.py
  Tests for 2D compatibility.

dtype.py
  Base class for ExtensionDtype classes""" def test_name(self, dtype):

getitem.py
  Tests for ExtensionArray.__getitem__.""" def test_iloc_series(self, data):

groupby.py
  Groupby-specific tests.""" def test_grouping_grouper(self, data_for_grouping):

index.py
  Tests for Indexes backed by arbitrary ExtensionArrays.

interface.py
  Tests that the basic interface is satisfied.""" # ------------------------------------------------------------------------

io.py
  No description

methods.py
  Various Series and DataFrame methods.""" def test_hash_pandas_object(self, data):

missing.py
  No description

ops.py
  Various Series and DataFrame arithmetic ops methods. Subclasses supporting various ops should set the class variables

printing.py
  Tests checking the formatting of your EA when printed.""" @pytest.mark.parametrize("size", ["big", "small"])

reduce.py
  Reduction specific tests. Generally these only make sense for numeric/boolean operations.

reshaping.py
  Tests for reshaping and concatenation.""" @pytest.mark.parametrize("in_frame", [True, False])

setitem.py
  Fixture for an indexer to pass to obj.loc to get/set the full length of the object.

training_data_bot\.venv\Lib\site-packages\pandas\tests\extension/
--------------------------------------------------------------------------------

conftest.py
  A fixture providing the ExtensionDtype to validate.""" raise NotImplementedError

training_data_bot\.venv\Lib\site-packages\pandas\tests\extension\date/
--------------------------------------------------------------------------------

__init__.py
  No description

array.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\extension\decimal/
--------------------------------------------------------------------------------

__init__.py
  No description

array.py
  Return the array type associated with this dtype. Returns

test_decimal.py
  Helper class for testing error handling in _from_sequence.""" @classmethod

training_data_bot\.venv\Lib\site-packages\pandas\tests\extension\json/
--------------------------------------------------------------------------------

__init__.py
  No description

array.py
  Test extension array for storing nested data in a pandas container. The JSONArray stores lists of dictionaries. The storage mechanism is a list,

test_json.py
  Length-100 PeriodArray for semantics test.""" data = make_data()

training_data_bot\.venv\Lib\site-packages\pandas\tests\extension\list/
--------------------------------------------------------------------------------

__init__.py
  No description

array.py
  Test extension array for storing nested data in a pandas container. The ListArray stores an ndarray of lists.

test_list.py
  Length-100 ListArray for semantics test.""" data = make_data()

training_data_bot\.venv\Lib\site-packages\pandas\tests\extension/
--------------------------------------------------------------------------------

test_arrow.py
  This file contains a minimal set of tests for compliance with the extension array interface test suite, and should contain no other tests.

test_categorical.py
  This file contains a minimal set of tests for compliance with the extension array interface test suite, and should contain no other tests.

test_common.py
  Extend StringArray to capture arguments to __getitem__""" def __getitem__(self, item):

test_datetime.py
  This file contains a minimal set of tests for compliance with the extension array interface test suite, and should contain no other tests.

test_extension.py
  Tests for behavior if an author does *not* implement EA methods.

test_interval.py
  This file contains a minimal set of tests for compliance with the extension array interface test suite, and should contain no other tests.

test_masked.py
  This file contains a minimal set of tests for compliance with the extension array interface test suite, and should contain no other tests.

test_numpy.py
  This file contains a minimal set of tests for compliance with the extension array interface test suite, and should contain no other tests.

test_period.py
  This file contains a minimal set of tests for compliance with the extension array interface test suite, and should contain no other tests.

test_sparse.py
  This file contains a minimal set of tests for compliance with the extension array interface test suite, and should contain no other tests.

test_string.py
  This file contains a minimal set of tests for compliance with the extension array interface test suite, and should contain no other tests.

training_data_bot\.venv\Lib\site-packages\pandas\tests\frame/
--------------------------------------------------------------------------------

__init__.py
  No description

common.py
  take a list of frames, zip them together under the assumption that these all have the first frames' index/columns.

conftest.py
  Fixture for DataFrame of floats with DatetimeIndex Columns are ['A', 'B', 'C', 'D']

training_data_bot\.venv\Lib\site-packages\pandas\tests\frame\constructors/
--------------------------------------------------------------------------------

__init__.py
  No description

test_from_dict.py
  No description

test_from_records.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\frame\indexing/
--------------------------------------------------------------------------------

__init__.py
  No description

test_coercion.py
  Tests for values coercion in setitem-like operations on DataFrame. For the most part, these should be multi-column DataFrames, otherwise

test_delitem.py
  No description

test_get.py
  No description

test_get_value.py
  No description

test_getitem.py
  No description

test_indexing.py
  No description

test_insert.py
  test_insert is specifically for the DataFrame.insert method; not to be confused with tests with "insert" in their names that are really testing

test_mask.py
  Tests for DataFrame.mask; tests DataFrame.where as a side-effect.

test_set_value.py
  No description

test_setitem.py
  No description

test_take.py
  No description

test_where.py
  No description

test_xs.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\frame\methods/
--------------------------------------------------------------------------------

__init__.py
  Test files dedicated to individual (stand-alone) DataFrame methods Ideally these files/tests should correspond 1-to-1 with tests.series.methods

test_add_prefix_suffix.py
  No description

test_align.py
  No description

test_asfreq.py
  No description

test_asof.py
  Fixture for DataFrame of ints with date_range index Columns are ['A', 'B'].

test_assign.py
  No description

test_astype.py
  Check if all dtypes of df are equal to v

test_at_time.py
  No description

test_between_time.py
  No description

test_clip.py
  Should process np.nan argument as None""" # GH#17276

test_combine.py
  No description

test_combine_first.py
  No description

test_compare.py
  No description

test_convert_dtypes.py
  No description

test_copy.py
  No description

test_count.py
  No description

test_cov_corr.py
  No description

test_describe.py
  When include is 'all', then setting exclude != None is not allowed.

test_diff.py
  No description

test_dot.py
  other is a DataFrame that is indexed so that obj.dot(other) is valid

test_drop.py
  No description

test_drop_duplicates.py
  No description

test_droplevel.py
  No description

test_dropna.py
  No description

test_dtypes.py
  No description

test_duplicated.py
  No description

test_equals.py
  No description

test_explode.py
  No description

test_fillna.py
  No description

test_filter.py
  No description

test_first_and_last.py
  Note: includes tests for `last`

test_first_valid_index.py
  Includes test for last_valid_index.

test_get_numeric_data.py
  No description

test_head_tail.py
  No description

test_infer_objects.py
  No description

test_info.py
  Dataframe with duplicate column names.""" return DataFrame(

test_interpolate.py
  No description

test_is_homogeneous_dtype.py
  No description

test_isetitem.py
  No description

test_isin.py
  No description

test_iterrows.py
  No description

test_join.py
  No description

test_map.py
  No description

test_matmul.py
  No description

test_nlargest.py
  Note: for naming purposes, most tests are title with as e.g. "test_nlargest_foo" but are implicitly also testing nsmallest_foo.

test_pct_change.py
  No description

test_pipe.py
  No description

test_pop.py
  No description

test_quantile.py
  (interpolation, method) arguments for quantile""" return request.param

test_rank.py
  Fixture for trying all rank methods

test_reindex.py
  No description

test_reindex_like.py
  No description

test_rename.py
  No description

test_rename_axis.py
  No description

test_reorder_levels.py
  No description

test_replace.py
  Test for #23305: to ensure category dtypes are maintained after replace with direct values

test_reset_index.py
  No description

test_round.py
  No description

test_sample.py
  No description

test_select_dtypes.py
  No description

test_set_axis.py
  No description

test_set_index.py
  See also: test_reindex.py:TestReindexSetIndex

test_shift.py
  No description

test_size.py
  No description

test_sort_index.py
  No description

test_sort_values.py
  No description

test_swapaxes.py
  No description

test_swaplevel.py
  No description

test_to_csv.py
  No description

test_to_dict.py
  No description

test_to_dict_of_blocks.py
  No description

test_to_numpy.py
  No description

test_to_period.py
  No description

test_to_records.py
  No description

test_to_timestamp.py
  No description

test_transpose.py
  No description

test_truncate.py
  No description

test_tz_convert.py
  No description

test_tz_localize.py
  No description

test_update.py
  No description

test_value_counts.py
  No description

test_values.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\frame/
--------------------------------------------------------------------------------

test_alter_axes.py
  No description

test_api.py
  No description

test_arithmetic.py
  Fixture for simple 3x3 DataFrame Columns are ['one', 'two', 'three'], index is ['a', 'b', 'c'].

test_arrow_interface.py
  No description

test_block_internals.py
  No description

test_constructors.py
  No description

test_cumulative.py
  Tests for DataFrame cumulative operations See also

test_iteration.py
  No description

test_logical_ops.py
  No description

test_nonunique_indexes.py
  No description

test_npfuncs.py
  Tests for np.foo applied to DataFrame, not necessarily ufuncs.

test_query_eval.py
  '"page 1 load"' in event""", parser=parser, engine=engine) tm.assert_frame_equal(expected, res)

test_reductions.py
  Create a function for calling on an array. Parameters

test_repr.py
        0 True  1

test_stack_unstack.py
  No description

test_subclass.py
  Subclasses pandas DF, fills DF with simulation results, adds some custom plotting functions.

test_ufunc.py
  No description

test_unary.py
  No description

test_validate.py
  Tests for error handling related to data types of method arguments.""" @pytest.mark.parametrize(

training_data_bot\.venv\Lib\site-packages\pandas\tests\generic/
--------------------------------------------------------------------------------

__init__.py
  No description

test_duplicate_labels.py
  Tests dealing with the NDFrame.allows_duplicates.""" import operator

test_finalize.py
  An exhaustive list of pandas methods exercising NDFrame.__finalize__.

test_frame.py
  No description

test_generic.py
  construct an object for the given shape if value is specified use that if its a scalar

test_label_or_level_utils.py
  DataFrame with columns 'L1', 'L2', and 'L3'""" return pd.DataFrame({"L1": [1, 2, 3], "L2": [11, 12, 13], "L3": ["A", "B", "C"]})

test_series.py
  No description

test_to_xarray.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\groupby/
--------------------------------------------------------------------------------

__init__.py
  Get required arguments for a groupby method. When parametrizing a test over groupby methods (e.g. "sum", "mean", "fillna"),

training_data_bot\.venv\Lib\site-packages\pandas\tests\groupby\aggregate/
--------------------------------------------------------------------------------

__init__.py
  No description

test_aggregate.py
  test .agg behavior / note that .apply is tested generally in test_groupby.py

test_cython.py
  test cython .agg behavior

test_numba.py
  No description

test_other.py
  test all other .agg behavior

training_data_bot\.venv\Lib\site-packages\pandas\tests\groupby/
--------------------------------------------------------------------------------

conftest.py
  yields the string names of all groupby reduction functions, one at a time.

training_data_bot\.venv\Lib\site-packages\pandas\tests\groupby\methods/
--------------------------------------------------------------------------------

__init__.py
  No description

test_corrwith.py
  No description

test_describe.py
  No description

test_groupby_shift_diff.py
  No description

test_is_monotonic.py
  No description

test_nlargest_nsmallest.py
  No description

test_nth.py
  No description

test_quantile.py
  No description

test_rank.py
  No description

test_sample.py
  No description

test_size.py
  No description

test_skew.py
  No description

test_value_counts.py
  these are systematically testing all of the args to value_counts with different size combinations. This is to ensure stability of the sorting

training_data_bot\.venv\Lib\site-packages\pandas\tests\groupby/
--------------------------------------------------------------------------------

test_all_methods.py
  Tests that apply to all groupby operation methods. The only tests that should appear here are those that use the `groupby_func` fixture.

test_api.py
  Tests of the groupby API, including internal consistency and with other pandas objects. Tests in this file should only check the existence, names, and arguments of groupby

test_apply.py
  No description

test_apply_mutate.py
  No description

test_bin_groupby.py
  No description

test_categorical.py
  Reindex to a cartesian production for the groupers, preserving the nature (Categorical) of each grouper

test_counting.py
  No description

test_cumulative.py
  Fixture of dtypes with min and max values used for testing cummin and cummax

test_filters.py
  No description

test_groupby.py
  Run an aggregate func on the subset of data.

test_groupby_dropna.py
  No description

test_groupby_subclass.py
  No description

test_grouping.py
  test where we are determining what we are grouping, or getting groups

test_index_as_string.py
  No description

test_indexing.py
  No description

test_libgroupby.py
  Check a group transform that executes a cumulative function. Parameters

test_missing.py
  No description

test_numba.py
  No description

test_numeric_only.py
  No description

test_pipe.py
  No description

test_raises.py
  No description

test_reductions.py
  No description

test_timegrouper.py
  test with the TimeGrouper / grouping with datetimes

training_data_bot\.venv\Lib\site-packages\pandas\tests\groupby\transform/
--------------------------------------------------------------------------------

__init__.py
  No description

test_numba.py
  No description

test_transform.py
   test with the .transform """ import numpy as np

training_data_bot\.venv\Lib\site-packages\pandas\tests\indexes/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\indexes\base_class/
--------------------------------------------------------------------------------

__init__.py
  No description

test_constructors.py
  No description

test_formats.py
  Index(['a', 'bb', 'ccc'], dtype='object')""", ),

test_indexing.py
  No description

test_pickle.py
  No description

test_reshape.py
  Tests for ndarray-like method on the base Index class

test_setops.py
  Checks if the set of unique elements of arr1 and arr2 are equivalent.

test_where.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\indexes\categorical/
--------------------------------------------------------------------------------

__init__.py
  No description

test_append.py
  No description

test_astype.py
  No description

test_category.py
  No description

test_constructors.py
  No description

test_equals.py
  No description

test_fillna.py
  No description

test_formats.py
  Tests for CategoricalIndex.__repr__ and related methods.

test_indexing.py
  No description

test_map.py
  No description

test_reindex.py
  No description

test_setops.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\indexes/
--------------------------------------------------------------------------------

conftest.py
  Valid values for the 'sort' parameter used in the Index setops methods (intersection, union, etc.)

training_data_bot\.venv\Lib\site-packages\pandas\tests\indexes\datetimelike_/
--------------------------------------------------------------------------------

__init__.py
  No description

test_drop_duplicates.py
  No description

test_equals.py
  Tests shared for DatetimeIndex/TimedeltaIndex/PeriodIndex

test_indexing.py
  No description

test_is_monotonic.py
  No description

test_nat.py
  No description

test_sort_values.py
  Check the expected freq on a PeriodIndex/DatetimeIndex/TimedeltaIndex when the original index is generated (or generate-able) with

test_value_counts.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\indexes\datetimes/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\indexes\datetimes\methods/
--------------------------------------------------------------------------------

__init__.py
  No description

test_asof.py
  No description

test_astype.py
  No description

test_delete.py
  No description

test_factorize.py
  No description

test_fillna.py
  No description

test_insert.py
  No description

test_isocalendar.py
  No description

test_map.py
  No description

test_normalize.py
  No description

test_repeat.py
  No description

test_resolution.py
  No description

test_round.py
  No description

test_shift.py
  No description

test_snap.py
  No description

test_to_frame.py
  No description

test_to_julian_date.py
  No description

test_to_period.py
  No description

test_to_pydatetime.py
  No description

test_to_series.py
  No description

test_tz_convert.py
  No description

test_tz_localize.py
  No description

test_unique.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\indexes\datetimes/
--------------------------------------------------------------------------------

test_arithmetic.py
  No description

test_constructors.py
  Test different DatetimeIndex constructions with timezone Follow-up of GH#4229

test_date_range.py
  test date_range, bdate_range construction from the convenience range functions

test_datetime.py
  No description

test_formats.py
  Series([], dtype: datetime64[ns])""" exp2 = "0   2011-01-01\ndtype: datetime64[ns]"

test_freq_attr.py
  No description

test_indexing.py
  No description

test_iter.py
  No description

test_join.py
  No description

test_npfuncs.py
  No description

test_ops.py
  No description

test_partial_slicing.py
   test partial slicing on Series/Frame """ from datetime import datetime

test_pickle.py
  No description

test_reindex.py
  No description

test_scalar_compat.py
  Tests for DatetimeIndex methods behaving like their Timestamp counterparts

test_setops.py
  No description

test_timezones.py
  Tests for DatetimeIndex timezone-related methods

training_data_bot\.venv\Lib\site-packages\pandas\tests\indexes\interval/
--------------------------------------------------------------------------------

__init__.py
  No description

test_astype.py
  Tests common to IntervalIndex with any subtype""" def test_astype_idempotent(self, index):

test_constructors.py
  Common tests for all variations of IntervalIndex construction. Input data to be supplied in breaks format, then converted by the subclass method

test_equals.py
  No description

test_formats.py
  No description

test_indexing.py
  No description

test_interval.py
  Interval specific tests for is_unique in addition to base class tests

test_interval_range.py
  No description

test_interval_tree.py
  Skip parameters in a parametrize on 32bit systems. Specifically used here to skip leaf_size parameters related to GH 23440.

test_join.py
  No description

test_pickle.py
  No description

test_setops.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\indexes\multi/
--------------------------------------------------------------------------------

__init__.py
  No description

conftest.py
  No description

test_analytics.py
  No description

test_astype.py
  No description

test_compat.py
  No description

test_constructors.py
  No description

test_conversion.py
  No description

test_copy.py
  No description

test_drop.py
  No description

test_duplicates.py
  No description

test_equivalence.py
  No description

test_formats.py
  \ MultiIndex([('foo', 'one'),

test_get_level_values.py
  No description

test_get_set.py
  No description

test_indexing.py
  No description

test_integrity.py
  No description

test_isin.py
  No description

test_join.py
  No description

test_lexsort.py
  No description

test_missing.py
  No description

test_monotonic.py
  No description

test_names.py
  No description

test_partial_indexing.py
  No description

test_pickle.py
  No description

test_reindex.py
  No description

test_reshape.py
  No description

test_setops.py
  No description

test_sorting.py
  No description

test_take.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\indexes\numeric/
--------------------------------------------------------------------------------

__init__.py
  No description

test_astype.py
  No description

test_indexing.py
  No description

test_join.py
  No description

test_numeric.py
  No description

test_setops.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\indexes\object/
--------------------------------------------------------------------------------

__init__.py
  No description

test_astype.py
  No description

test_indexing.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\indexes\period/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\indexes\period\methods/
--------------------------------------------------------------------------------

__init__.py
  No description

test_asfreq.py
  No description

test_astype.py
  No description

test_factorize.py
  No description

test_fillna.py
  No description

test_insert.py
  No description

test_is_full.py
  No description

test_repeat.py
  No description

test_shift.py
  No description

test_to_timestamp.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\indexes\period/
--------------------------------------------------------------------------------

test_constructors.py
  No description

test_formats.py
  Return the AM and PM strings returned by strftime in current locale.""" am_local = time(1).strftime("%p")

test_freq_attr.py
  No description

test_indexing.py
  No description

test_join.py
  No description

test_monotonic.py
  No description

test_partial_slicing.py
  No description

test_period.py
  No description

test_period_range.py
  No description

test_pickle.py
  No description

test_resolution.py
  No description

test_scalar_compat.py
  Tests for PeriodIndex behaving like a vectorized Period scalar""" import pytest

test_searchsorted.py
  No description

test_setops.py
  No description

test_tools.py
  Wish to match NumPy units

training_data_bot\.venv\Lib\site-packages\pandas\tests\indexes\ranges/
--------------------------------------------------------------------------------

__init__.py
  No description

test_constructors.py
  No description

test_indexing.py
  No description

test_join.py
  No description

test_range.py
  No description

test_setops.py
  Check that we either have a RangeIndex or that this index *cannot* be represented as a RangeIndex.

training_data_bot\.venv\Lib\site-packages\pandas\tests\indexes\string/
--------------------------------------------------------------------------------

__init__.py
  No description

test_astype.py
  No description

test_indexing.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\indexes/
--------------------------------------------------------------------------------

test_any_index.py
  Tests that can be parametrized over _any_ Index object.

test_base.py
  No description

test_common.py
  Collection of tests asserting things that should be true for any index subclass except for MultiIndex. Makes use of the `index_flat`

test_datetimelike.py
   generic datetimelike tests """ import numpy as np

test_engines.py
  No description

test_frozen.py
  No description

test_index_new.py
  Tests for the Index constructor conducting inference.

test_indexing.py
  test_indexing tests the following Index methods: __getitem__

test_numpy_compat.py
  No description

test_old_base.py
  No description

test_setops.py
  The tests in this package are to ensure the proper resultant dtypes of set operations.

test_subclass.py
  Tests involving custom Index subclasses

training_data_bot\.venv\Lib\site-packages\pandas\tests\indexes\timedeltas/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\indexes\timedeltas\methods/
--------------------------------------------------------------------------------

__init__.py
  No description

test_astype.py
  No description

test_factorize.py
  No description

test_fillna.py
  No description

test_insert.py
  No description

test_repeat.py
  No description

test_shift.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\indexes\timedeltas/
--------------------------------------------------------------------------------

test_arithmetic.py
  No description

test_constructors.py
  No description

test_delete.py
  No description

test_formats.py
  Series([], dtype: timedelta64[ns])""" exp2 = "0   1 days\ndtype: timedelta64[ns]"

test_freq_attr.py
  No description

test_indexing.py
  No description

test_join.py
  No description

test_ops.py
  No description

test_pickle.py
  No description

test_scalar_compat.py
  Tests for TimedeltaIndex methods behaving like their Timedelta counterparts

test_searchsorted.py
  No description

test_setops.py
  No description

test_timedelta.py
  No description

test_timedelta_range.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\indexing/
--------------------------------------------------------------------------------

__init__.py
  No description

common.py
   common utilities """ from __future__ import annotations

conftest.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\indexing\interval/
--------------------------------------------------------------------------------

__init__.py
  No description

test_interval.py
  No description

test_interval_new.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\indexing\multiindex/
--------------------------------------------------------------------------------

__init__.py
  No description

test_chaining_and_caching.py
  No description

test_datetime.py
  No description

test_getitem.py
  Fixture for DataFrame used in tests for gh-4145 and gh-4146""" data = [["a", "d", "e", "c", "f", "b"], [1, 4, 5, 3, 6, 2], [1, 4, 5, 3, 6, 2]]

test_iloc.py
  Factory function to create simple 3 x 3 dataframe with both columns and row MultiIndex using supplied data or

test_indexing_slow.py
  No description

test_loc.py
  single level MultiIndex""" return MultiIndex(

test_multiindex.py
  No description

test_partial.py
  No description

test_setitem.py
  No description

test_slice.py
  No description

test_sorted.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\indexing/
--------------------------------------------------------------------------------

test_at.py
  No description

test_categorical.py
  No description

test_chaining_and_caching.py
  No description

test_check_indexer.py
  No description

test_coercion.py
  test index's coercion triggered by assign key""" temp = original_series.copy()

test_datetime.py
  No description

test_floats.py
  comparator for results we need to take care if we are indexing on a

test_iat.py
  No description

test_iloc.py
   test positional based indexing with iloc """ from datetime import datetime

test_indexers.py
  No description

test_indexing.py
   test fancy indexing & misc """ import array

test_loc.py
   test label based indexing with loc """ from collections import namedtuple

test_na_indexing.py
  No description

test_partial.py
  test setting *parts* of objects both positionally and label based TODO: these should be split among the indexer tests

test_scalar.py
   test scalar indexing, including at and iat """ from datetime import (

training_data_bot\.venv\Lib\site-packages\pandas\tests\interchange/
--------------------------------------------------------------------------------

__init__.py
  No description

test_impl.py
  No description

test_spec_conformance.py
  A verbatim copy (vendored) of the spec tests. Taken from https://github.com/data-apis/dataframe-api

test_utils.py
  Test ``dtype_to_arrow_c_fmt`` utility function.""" assert dtype_to_arrow_c_fmt(pandas_dtype) == c_string

training_data_bot\.venv\Lib\site-packages\pandas\tests\internals/
--------------------------------------------------------------------------------

__init__.py
  No description

test_api.py
  Tests for the pseudo-public API implemented in internals/api.py and exposed in core.internals

test_internals.py
  Fixture to test both the internal new_block and pseudo-public make_block.

test_managers.py
  Testing interaction between the different managers (BlockManager, ArrayManager)

training_data_bot\.venv\Lib\site-packages\pandas\tests\io/
--------------------------------------------------------------------------------

__init__.py
  No description

conftest.py
  Path to the tips dataset""" return datapath("io", "data", "csv", "tips.csv")

training_data_bot\.venv\Lib\site-packages\pandas\tests\io\excel/
--------------------------------------------------------------------------------

__init__.py
  No description

test_odf.py
  No description

test_odswriter.py
  No description

test_openpyxl.py
  No description

test_readers.py
  Filter out invalid (engine, ext) pairs instead of skipping, as that produces 500+ pytest.skips.

test_style.py
  No description

test_writers.py
  Returns the first ten items in fixture "float_frame".

test_xlrd.py
  Valid extensions for reading Excel files with xlrd. Similar to read_ext, but excludes .ods, .xlsb, and for xlrd>2 .xlsx, .xlsm

test_xlsxwriter.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\io\formats/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\io\formats\style/
--------------------------------------------------------------------------------

__init__.py
  No description

test_bar.py
  Used in multiple tests to simplify formatting of expected result""" ret = [("width", "10em")]

test_exceptions.py
  No description

test_format.py
  No description

test_highlight.py
  No description

test_html.py
  \ <!DOCTYPE html>

test_matplotlib.py
  No description

test_non_unique.py
  \ \\begin{tabular}{lrrr}

test_style.py
  \ >

test_to_latex.py
  \ \\begin{tabular}{lrrl}

test_to_string.py
  \ A B C

test_tooltip.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\io\formats/
--------------------------------------------------------------------------------

test_console.py
  Used to add a side effect when accessing the 'encoding' property. If the side effect is a str in nature, the value will be returned. Otherwise, the

test_css.py
  No description

test_eng_formatting.py
  Parameters: -----------

test_format.py
  Tests for the file pandas.io.formats.format, *not* tests for general formatting of pandas objects.

test_ipython_compat.py
  No description

test_printing.py
  あ  dd    ggg b   ええ  hhh

test_to_csv.py
  \ ""

test_to_excel.py
  Tests formatting as writer-agnostic ExcelCells ExcelFormatter is tested implicitly in pandas/tests/io/excel

test_to_html.py
  Read HTML file from formats data directory. Parameters

test_to_latex.py
  Dedent without new line in the beginning. Built-in textwrap.dedent would keep new line character in the beginning

test_to_markdown.py
  No description

test_to_string.py
  \ a     b

training_data_bot\.venv\Lib\site-packages\pandas\tests\io/
--------------------------------------------------------------------------------

generate_legacy_storage_files.py
  self-contained to write legacy storage pickle files To use this script. Create an environment where you want

training_data_bot\.venv\Lib\site-packages\pandas\tests\io\json/
--------------------------------------------------------------------------------

__init__.py
  No description

conftest.py
  Fixture for orients excluding the table format.

test_compression.py
  No description

test_deprecated_kwargs.py
  Tests for the deprecated keyword arguments for `read_json`.

test_json_table_schema.py
  Tests for Table Schema integration.""" from collections import OrderedDict

test_json_table_schema_ext_dtype.py
  Tests for ExtensionDtype Table Schema integration.""" from collections import OrderedDict

test_normalize.py
  input data to test json_normalize with max_level param

test_pandas.py
  {"a": 1, "b": 2} {"a": 3, "b": 4}

test_readlines.py
  {"A":1,"B":4} {"A":2,"B":5}

test_ujson.py
  Sanitize dictionary for JSON by converting all keys to strings. Parameters

training_data_bot\.venv\Lib\site-packages\pandas\tests\io\parser/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\io\parser\common/
--------------------------------------------------------------------------------

__init__.py
  No description

test_chunksize.py
  Tests that work on both the Python and C engines but do not have a specific classification into the other test modules.

test_common_basic.py
  Tests that work on both the Python and C engines but do not have a specific classification into the other test modules.

test_data_list.py
  Tests that work on both the Python and C engines but do not have a specific classification into the other test modules.

test_decimal.py
  Tests that work on both the Python and C engines but do not have a specific classification into the other test modules.

test_file_buffer_url.py
  Tests that work on both the Python and C engines but do not have a specific classification into the other test modules.

test_float.py
  Tests that work on both the Python and C engines but do not have a specific classification into the other test modules.

test_index.py
  Tests that work on both the Python and C engines but do not have a specific classification into the other test modules.

test_inf.py
  Tests that work on both the Python and C engines but do not have a specific classification into the other test modules.

test_ints.py
  Tests that work on both the Python and C engines but do not have a specific classification into the other test modules.

test_iterator.py
  Tests that work on both the Python and C engines but do not have a specific classification into the other test modules.

test_read_errors.py
  Tests that work on the Python, C and PyArrow engines but do not have a specific classification into the other test modules.

test_verbose.py
  Tests that work on both the Python and C engines but do not have a specific classification into the other test modules.

training_data_bot\.venv\Lib\site-packages\pandas\tests\io\parser/
--------------------------------------------------------------------------------

conftest.py
  The directory path to the data files needed for parser tests.

training_data_bot\.venv\Lib\site-packages\pandas\tests\io\parser\dtypes/
--------------------------------------------------------------------------------

__init__.py
  No description

test_categorical.py
  Tests dtype specification during parsing for all of the parsers defined in parsers.py

test_dtypes_basic.py
  Tests dtype specification during parsing for all of the parsers defined in parsers.py

test_empty.py
  Tests dtype specification during parsing for all of the parsers defined in parsers.py

training_data_bot\.venv\Lib\site-packages\pandas\tests\io\parser/
--------------------------------------------------------------------------------

test_c_parser_only.py
  Tests that apply specifically to the CParser. Unless specifically stated as a CParser-specific issue, the goal is to eventually move as many of

test_comment.py
  Tests that comments are properly handled during parsing for all of the parsers defined in parsers.py

test_compression.py
  Tests compressed data parsing functionality for all of the parsers defined in parsers.py

test_concatenate_chunks.py
  No description

test_converters.py
  Tests column conversion functionality during parsing for all of the parsers defined in parsers.py

test_dialect.py
  Tests that dialects are properly handled during parsing for all of the parsers defined in parsers.py

test_encoding.py
  Tests encoding functionality during parsing for all of the parsers defined in parsers.py

test_header.py
  Tests that the file header is properly handled or inferred during parsing for all of the parsers defined in parsers.py

test_index_col.py
  Tests that the specified index column (a.k.a "index_col") is properly handled or inferred during parsing for all of

test_mangle_dupes.py
  Tests that duplicate columns are handled appropriately when parsed by the CSV engine. In general, the expected result is that they are either thoroughly

test_multi_thread.py
  Tests multithreading behaviour for reading and parsing files for each parser defined in parsers.py

test_na_values.py
  Tests that NA values are properly handled during parsing for all of the parsers defined in parsers.py

test_network.py
  Tests parsers ability to read and parse non-local files and hence require a network connection to be read.

test_parse_dates.py
  Tests date parsing functionality for all of the parsers defined in parsers.py

test_python_parser_only.py
  Tests that apply specifically to the Python parser. Unless specifically stated as a Python-specific issue, the goal is to eventually move as many of

test_quoting.py
  Tests that quoting specifications are properly handled during parsing for all of the parsers defined in parsers.py

test_read_fwf.py
  Tests the 'read_fwf' function in parsers.py. This test suite is independent of the others because the

test_skiprows.py
  Tests that skipped rows are properly handled during parsing for all of the parsers defined in parsers.py

test_textreader.py
  Tests the TextReader class in parsers.pyx, which is integral to the C engine in parsers.py

test_unsupported.py
  Tests that features that are currently unsupported in either the Python or C parser are actually enforced

test_upcast.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\io\parser\usecols/
--------------------------------------------------------------------------------

__init__.py
  No description

test_parse_dates.py
  Tests the usecols functionality during parsing for all of the parsers defined in parsers.py

test_strings.py
  Tests the usecols functionality during parsing for all of the parsers defined in parsers.py

test_usecols_basic.py
  Tests the usecols functionality during parsing for all of the parsers defined in parsers.py

training_data_bot\.venv\Lib\site-packages\pandas\tests\io\pytables/
--------------------------------------------------------------------------------

__init__.py
  No description

common.py
  For tests using tables, try removing the table to be sure there is no content from previous tests using the same table name.

conftest.py
  Fixture for setup path""" return f"tmp.__{uuid.uuid4()}__.h5"

test_append.py
  Cannot serialize the column [invalid]

test_categorical.py
  No description

test_compat.py
  Use PyTables to create a simple HDF5 file.

test_complex.py
  No description

test_errors.py
  No description

test_file_handling.py
  No description

test_keys.py
  No description

test_put.py
  No description

test_pytables_missing.py
  No description

test_read.py
  No description

test_retain_attributes.py
  No description

test_round_trip.py
  No description

test_select.py
  No description

test_store.py
  No description

test_subclass.py
  No description

test_time_series.py
  No description

test_timezones.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\io\sas/
--------------------------------------------------------------------------------

__init__.py
  No description

test_byteswap.py
  No description

test_sas.py
  No description

test_sas7bdat.py
  Errors in RLE/RDC decompression should propagate.""" with open(datapath("io", "sas", "data", test_file), "rb") as fd:

test_xport.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\io/
--------------------------------------------------------------------------------

test_clipboard.py
  Mocks WinError to help with testing the clipboard.

test_common.py
  Tests for the pandas.io.common functionalities

test_compression.py
  Binary file handles support compression. GH22555

test_feather.py
   test feather-format compat """ import numpy as np

test_fsspec.py
  Regression test for writing to a not-yet-existent GCS Parquet file.""" pytest.importorskip("fastparquet")

test_gbq.py
  No description

test_gcs.py
  Emulate GCS using a binary buffer.""" pytest.importorskip("gcsfs")

test_html.py
  Parametrized fixture for HTML encoding test filenames.""" return datapath("io", "data", "html_encoding", request.param)

test_http_headers.py
  Tests for the pandas custom headers in http(s) requests

test_orc.py
   test orc compat """ import datetime

test_parquet.py
   test parquet compat """ import datetime

test_pickle.py
  manage legacy pickle tests How to add pickle tests:

test_s3.py
  No description

test_spss.py
  No description

test_sql.py
  SELECT * FROM iris WHERE Name=:name AND SepalLength=:length

test_stata.py
  Emulate the categorical casting behavior we expect from roundtripping.

training_data_bot\.venv\Lib\site-packages\pandas\tests\io\xml/
--------------------------------------------------------------------------------

__init__.py
  No description

conftest.py
  No description

test_to_xml.py
  \ <?xml version='1.0' encoding='utf-8'?>

test_xml.py
  \ <?xml version='1.0' encoding='utf-8'?>

test_xml_dtypes.py
  \ <?xml version='1.0' encoding='utf-8'?>

training_data_bot\.venv\Lib\site-packages\pandas\tests\libs/
--------------------------------------------------------------------------------

__init__.py
  No description

test_hashtable.py
  No description

test_join.py
  No description

test_lib.py
  No description

test_libalgos.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\plotting/
--------------------------------------------------------------------------------

__init__.py
  No description

common.py
  Module consolidating common testing functions for checking plotting.

conftest.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\plotting\frame/
--------------------------------------------------------------------------------

__init__.py
  No description

test_frame.py
   Test cases for DataFrame.plot """ from datetime import (

test_frame_color.py
   Test cases for DataFrame.plot """ import re

test_frame_groupby.py
   Test cases for DataFrame.plot """ import pytest

test_frame_legend.py
  No description

test_frame_subplots.py
   Test cases for DataFrame.plot """ import string

test_hist_box_by.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\plotting/
--------------------------------------------------------------------------------

test_backend.py
  Restore the plotting backend to matplotlib""" with pandas.option_context("plotting.backend", "matplotlib"):

test_boxplot_method.py
   Test cases for .boxplot method """ from __future__ import annotations

test_common.py
  AB CC

test_converter.py
  Test timedelta converter""" @pytest.mark.parametrize(

test_datetimelike.py
   Test cases for time series specific (freq conversion, etc) """ from datetime import (

test_groupby.py
   Test cases for GroupBy.plot """ import numpy as np

test_hist_method.py
   Test cases for .hist method """ import re

test_misc.py
   Test cases for misc plot functions """ import os

test_series.py
   Test cases for Series.plot """ from datetime import datetime

test_style.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\reductions/
--------------------------------------------------------------------------------

__init__.py
  Tests for reductions where we want to test for matching behavior across Array, Index, Series, and DataFrame methods.

test_reductions.py
  Cases where ``Series.argmax`` and related should raise an exception

test_stat_reductions.py
  Tests for statistical reductions of 2nd moment or higher: var, skew, kurt, ...

training_data_bot\.venv\Lib\site-packages\pandas\tests\resample/
--------------------------------------------------------------------------------

__init__.py
  No description

conftest.py
  Fixture for parametrization of Grouper downsample methods.""" return request.param

test_base.py
  return the _index_factory created using the args, kwargs""" return _index_factory(*args, **kwargs)

test_datetime_index.py
  Series with date range index and random data for test purposes.

test_period_index.py
  Series with period range index and random data for test purposes.

test_resample_api.py
  No description

test_resampler_grouper.py
  \ import numpy as np

test_time_grouper.py
  Check TimeGrouper's aggregation is identical as normal groupby.""" data = np.random.default_rng(2).standard_normal((20, 4))

test_timedelta.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\reshape/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\reshape\concat/
--------------------------------------------------------------------------------

__init__.py
  No description

conftest.py
  Boolean sort keyword for concat and DataFrame.append.""" return request.param

test_append.py
  No description

test_append_common.py
  Test common dtype coercion rules between concat and append.

test_categorical.py
  No description

test_concat.py
  No description

test_dataframe.py
  No description

test_datetimes.py
  No description

test_empty.py
  48510 `concat` to an empty EA should maintain type EA dtype.""" df_empty = DataFrame({"a": pd.array([], dtype=pd.Int64Dtype())})

test_index.py
  No description

test_invalid.py
  index,A,B,C,D foo,2,3,4,5

test_series.py
  No description

test_sort.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\reshape\merge/
--------------------------------------------------------------------------------

__init__.py
  No description

test_join.py
  No description

test_merge.py
  A parametrized fixture returning a variety of Series of different dtypes

test_merge_asof.py
  Resolution for datetimelike dtypes.

test_merge_cross.py
  No description

test_merge_index_as_string.py
  Construct left test DataFrame with specified levels (any of 'outer', 'inner', and 'v1')

test_merge_ordered.py
  No description

test_multi.py
  left dataframe (not multi-indexed) for multi-index join tests""" # a little relevant example with NAs

training_data_bot\.venv\Lib\site-packages\pandas\tests\reshape/
--------------------------------------------------------------------------------

test_crosstab.py
  No description

test_cut.py
  No description

test_from_dummies.py
  No description

test_get_dummies.py
  No description

test_melt.py
  No description

test_pivot.py
  No description

test_pivot_multilevel.py
  No description

test_qcut.py
  No description

test_union_categoricals.py
  No description

test_util.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\scalar/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\scalar\interval/
--------------------------------------------------------------------------------

__init__.py
  No description

test_arithmetic.py
  No description

test_constructors.py
  No description

test_contains.py
  No description

test_formats.py
  No description

test_interval.py
  No description

test_overlaps.py
  Fixture for generating intervals of types from a start value and a shift value that can be added to start to generate an endpoint

training_data_bot\.venv\Lib\site-packages\pandas\tests\scalar\period/
--------------------------------------------------------------------------------

__init__.py
  No description

test_arithmetic.py
  No description

test_asfreq.py
  Test frequency conversion of date objects""" @pytest.mark.filterwarnings("ignore:Period with BDay:FutureWarning")

test_period.py
  Test properties such as year, month, weekday, etc....""" @pytest.mark.parametrize("freq", ["Y", "M", "D", "h"])

training_data_bot\.venv\Lib\site-packages\pandas\tests\scalar/
--------------------------------------------------------------------------------

test_na_scalar.py
  No description

test_nat.py
  Get overlapping public methods between NaT and another class. Parameters

training_data_bot\.venv\Lib\site-packages\pandas\tests\scalar\timedelta/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\scalar\timedelta\methods/
--------------------------------------------------------------------------------

__init__.py
  No description

test_as_unit.py
  No description

test_round.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\scalar\timedelta/
--------------------------------------------------------------------------------

test_arithmetic.py
  Tests for scalar Timedelta arithmetic ops

test_constructors.py
  No description

test_formats.py
  No description

test_timedelta.py
   test the scalar Timedelta """ from datetime import timedelta

training_data_bot\.venv\Lib\site-packages\pandas\tests\scalar\timestamp/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\scalar\timestamp\methods/
--------------------------------------------------------------------------------

__init__.py
  No description

test_as_unit.py
  No description

test_normalize.py
  No description

test_replace.py
  No description

test_round.py
  No description

test_timestamp_method.py
  No description

test_to_julian_date.py
  No description

test_to_pydatetime.py
  No description

test_tz_convert.py
  No description

test_tz_localize.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\scalar\timestamp/
--------------------------------------------------------------------------------

test_arithmetic.py
  No description

test_comparisons.py
  No description

test_constructors.py
  No description

test_formats.py
  {'bar': [{'w': {'a': Timestamp('2011-01-01 00:00:00')}}, {'w': {'a': Timestamp('2011-01-01 00:00:00')}},

test_timestamp.py
   test the scalar Timestamp """ import calendar

test_timezones.py
  Tests for Timestamp timezone-related methods

training_data_bot\.venv\Lib\site-packages\pandas\tests\series/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\series\accessors/
--------------------------------------------------------------------------------

__init__.py
  No description

test_cat_accessor.py
  No description

test_dt_accessor.py
  No description

test_list_accessor.py
  No description

test_sparse_accessor.py
  No description

test_str_accessor.py
  No description

test_struct_accessor.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\series\indexing/
--------------------------------------------------------------------------------

__init__.py
  No description

test_datetime.py
  Also test support for datetime64[ns] in Series / DataFrame

test_delitem.py
  No description

test_get.py
  No description

test_getitem.py
  Series.__getitem__ test classes are organized by the type of key passed.

test_indexing.py
   test get/set & misc """ from datetime import timedelta

test_mask.py
  No description

test_set_value.py
  No description

test_setitem.py
  Check each of several methods that _should_ be equivalent to `obj[key] = val` We assume that

test_take.py
  No description

test_where.py
  No description

test_xs.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\series\methods/
--------------------------------------------------------------------------------

__init__.py
  Test files dedicated to individual (stand-alone) Series methods Ideally these files/tests should correspond 1-to-1 with tests.frame.methods

test_add_prefix_suffix.py
  No description

test_align.py
  No description

test_argsort.py
  No description

test_asof.py
  No description

test_astype.py
  Generate one random byte string.

test_autocorr.py
  No description

test_between.py
  No description

test_case_when.py
  base dataframe for testing

test_clip.py
  Should process np.nan argument as None""" # GH#17276

test_combine.py
  No description

test_combine_first.py
  No description

test_compare.py
  No description

test_convert_dtypes.py
  No description

test_copy.py
  No description

test_count.py
  No description

test_cov_corr.py
  No description

test_describe.py
  No description

test_diff.py
  No description

test_drop.py
  No description

test_drop_duplicates.py
  No description

test_dropna.py
  No description

test_dtypes.py
  No description

test_duplicated.py
  No description

test_equals.py
  No description

test_explode.py
  No description

test_fillna.py
  No description

test_get_numeric_data.py
  No description

test_head_tail.py
  No description

test_infer_objects.py
  No description

test_info.py
  \ <class 'pandas.core.series.Series'>

test_interpolate.py
  Fixture that returns an (method name, required kwargs) pair. This fixture does not include method 'time' as a parameterization; that

test_is_monotonic.py
  No description

test_is_unique.py
  No description

test_isin.py
  No description

test_isna.py
  We also test Series.notna in this file.

test_item.py
  Series.item method, mainly testing that we get python scalars as opposed to numpy scalars.

test_map.py
  Due to new MultiIndex-ing behaviour in v0.14.0, dicts with tuple keys passed to map were being

test_matmul.py
  No description

test_nlargest.py
  Note: for naming purposes, most tests are title with as e.g. "test_nlargest_foo" but are implicitly also testing nsmallest_foo.

test_nunique.py
  No description

test_pct_change.py
  No description

test_pop.py
  No description

test_quantile.py
  No description

test_rank.py
  No description

test_reindex.py
  No description

test_reindex_like.py
  No description

test_rename.py
  No description

test_rename_axis.py
  No description

test_repeat.py
  No description

test_replace.py
  No description

test_reset_index.py
  No description

test_round.py
  No description

test_searchsorted.py
  No description

test_set_name.py
  No description

test_size.py
  No description

test_sort_index.py
  No description

test_sort_values.py
  No description

test_to_csv.py
  No description

test_to_dict.py
  No description

test_to_frame.py
  No description

test_to_numpy.py
  No description

test_tolist.py
  No description

test_truncate.py
  No description

test_tz_localize.py
  No description

test_unique.py
  No description

test_unstack.py
  No description

test_update.py
  No description

test_value_counts.py
  No description

test_values.py
  No description

test_view.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\series/
--------------------------------------------------------------------------------

test_api.py
  No description

test_arithmetic.py
  No description

test_constructors.py
  No description

test_cumulative.py
  Tests for Series cumulative operations. See also

test_formats.py
  \begin{tabular}{ll} \toprule

test_iteration.py
  No description

test_logical_ops.py
  No description

test_missing.py
  No description

test_npfuncs.py
  Tests for np.foo applied to Series, not necessarily ufuncs.

test_reductions.py
  No description

test_subclass.py
  No description

test_ufunc.py
  A pair of random, length-100 integer-dtype arrays, that are mostly 0.

test_unary.py
  No description

test_validate.py
  Tests for error handling related to data types of method arguments.""" msg = 'For argument "inplace" expected type bool'

training_data_bot\.venv\Lib\site-packages\pandas\tests\strings/
--------------------------------------------------------------------------------

__init__.py
  Check if string-like dtype is following NaN semantics, i.e. is object dtype or a NaN-variant of the StringDtype.

conftest.py
  Fixture for all public methods of `StringMethods` This fixture returns a tuple of the method name and sample arguments

test_api.py
  Fixture for all (inferred) dtypes allowed in StringMethods.__init__ The covered (inferred) types are:

test_case_justify.py
  No description

test_cat.py
  No description

test_extract.py
  (?P<user>[a-z0-9]+) @

test_find_replace.py
  No description

test_get_dummies.py
  No description

test_split_partition.py
  No description

test_string_array.py
  No description

test_strings.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests/
--------------------------------------------------------------------------------

test_aggregation.py
  No description

test_algos.py
  Comparing df with int`s (1,2) with a string at isin() ("1")

test_common.py
  import sys sys.modules['bz2'] = None

test_downstream.py
  Testing that we work in the downstream packages

test_errors.py
  No description

test_expressions.py
  tests solely that the result is the same whether or not numexpr is enabled.  Need to test whether the function does the correct thing

test_flags.py
  No description

test_multilevel.py
  everything you wanted to test about sorting""" def test_sort_non_lexsorted(self):

test_nanops.py
  No description

test_optional_dependency.py
  No description

test_register_accessor.py
  Ensure that an attribute added to 'obj' during the test is removed when we're done

test_sorting.py
  The number of # sorted items must be greater than ~50 to check the actual algorithm

test_take.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\tools/
--------------------------------------------------------------------------------

__init__.py
  No description

test_to_datetime.py
   test to_datetime """ import calendar

test_to_numeric.py
  No description

test_to_time.py
  No description

test_to_timedelta.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\tseries/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\tseries\frequencies/
--------------------------------------------------------------------------------

__init__.py
  No description

test_freq_code.py
  No description

test_frequencies.py
  No description

test_inference.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\tseries\holiday/
--------------------------------------------------------------------------------

__init__.py
  No description

test_calendar.py
  No description

test_federal.py
  No description

test_holiday.py
  No description

test_observance.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\tseries\offsets/
--------------------------------------------------------------------------------

__init__.py
  No description

common.py
  Assertion helpers and base class for offsets tests

test_business_day.py
  Tests for offsets.BDay

test_business_hour.py
  Tests for offsets.BusinessHour

test_business_month.py
  Tests for the following offsets: - BMonthBegin

test_business_quarter.py
  Tests for the following offsets: - BQuarterBegin

test_business_year.py
  Tests for the following offsets: - BYearBegin

test_common.py
  No description

test_custom_business_day.py
  Tests for offsets.CustomBusinessDay / CDay

test_custom_business_hour.py
  Tests for offsets.CustomBusinessHour

test_custom_business_month.py
  Tests for the following offsets: - CustomBusinessMonthBase

test_dst.py
  Tests for DateOffset additions over Daylight Savings Time

test_easter.py
  Tests for the following offsets: - Easter

test_fiscal.py
  Tests for Fiscal Year and Fiscal Quarter offset classes

test_index.py
  Tests for offset behavior with indices.

test_month.py
  Tests for the following offsets: - SemiMonthBegin

test_offsets.py
  Tests of pandas.tseries.offsets

test_offsets_properties.py
  Behavioral based tests for offsets and date_range. This file is adapted from https://github.com/pandas-dev/pandas/pull/18761 -

test_quarter.py
  Tests for the following offsets: - QuarterBegin

test_ticks.py
  Tests for offsets.Tick and subclasses

test_week.py
  Tests for the following offsets: - Week

test_year.py
  Tests for the following offsets: - YearBegin

training_data_bot\.venv\Lib\site-packages\pandas\tests\tslibs/
--------------------------------------------------------------------------------

__init__.py
  No description

test_api.py
  Tests that the tslibs API is locked down""" from pandas._libs import tslibs

test_array_to_datetime.py
  No description

test_ccalendar.py
  No description

test_conversion.py
  No description

test_fields.py
  No description

test_libfrequencies.py
  No description

test_liboffsets.py
  Tests for helper functions in the cython tslibs.offsets

test_np_datetime.py
  No description

test_npy_units.py
  No description

test_parse_iso8601.py
  No description

test_parsing.py
  Tests for Timestamp parsing, aimed at pandas/_libs/tslibs/parsing.pyx

test_period.py
  No description

test_resolution.py
  No description

test_strptime.py
  No description

test_timedeltas.py
  No description

test_timezones.py
  No description

test_to_offset.py
  No description

test_tzconversion.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\util/
--------------------------------------------------------------------------------

__init__.py
  No description

conftest.py
  No description

test_assert_almost_equal.py
  Check that two objects are approximately equal. This check is performed commutatively.

test_assert_attr_equal.py
  No description

test_assert_categorical_equal.py
  Categorical\\.categories are different Categorical\\.categories values are different \\(100\\.0 %\\)

test_assert_extension_array_equal.py
  \ ExtensionArray are different

test_assert_frame_equal.py
  Check that two DataFrame equal. This check is performed commutatively.

test_assert_index_equal.py
  Index are different Index levels are different

test_assert_interval_array_equal.py
  \ IntervalArray are different

test_assert_numpy_array_equal.py
  numpy array are different numpy array shapes are different

test_assert_produces_warning.py
  " Test module for testing ``pandas._testing.assert_produces_warning``.

test_assert_series_equal.py
  Check that two Series equal. This check is performed commutatively.

test_deprecate.py
  This is the summary. The deprecate directive goes next. This is the extended summary. The deprecate directive goes before this.

test_deprecate_kwarg.py
  No description

test_deprecate_nonkeyword_arguments.py
  Tests for the `deprecate_nonkeyword_arguments` decorator

test_doc.py
  This is the {method} method. It computes the cumulative {operation}.

test_hashing.py
  No description

test_numba.py
  No description

test_rewrite_warning.py
  No description

test_shares_memory.py
  No description

test_show_versions.py
  No description

test_util.py
  No description

test_validate_args.py
  No description

test_validate_args_and_kwargs.py
  No description

test_validate_inclusive.py
  No description

test_validate_kwargs.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tests\window/
--------------------------------------------------------------------------------

__init__.py
  No description

conftest.py
  raw keyword argument for rolling.apply""" return request.param

training_data_bot\.venv\Lib\site-packages\pandas\tests\window\moments/
--------------------------------------------------------------------------------

__init__.py
  No description

conftest.py
  Test: - Empty Series / DataFrame

test_moments_consistency_ewm.py
  No description

test_moments_consistency_expanding.py
  No description

test_moments_consistency_rolling.py
  window, min_periods""" return request.param

training_data_bot\.venv\Lib\site-packages\pandas\tests\window/
--------------------------------------------------------------------------------

test_api.py
  No description

test_apply.py
  No description

test_base_indexer.py
  No description

test_cython_aggregations.py
  Make a rolling aggregation function as fixture.""" return request.param

test_dtypes.py
  Dtypes for window tests""" return request.param

test_ewm.py
  No description

test_expanding.py
  No description

test_groupby.py
  Frame for testing times argument in EWM groupby.""" return DataFrame(

test_numba.py
  method keyword in rolling/expanding/ewm constructor""" return request.param

test_online.py
  No description

test_pairwise.py
  Pairwise frames test_pairwise""" return request.param

test_rolling.py
  Make sure that decreasing indices give the same results as increasing indices. GH 36933

test_rolling_functions.py
  Replicate result expected in GH #6297""" indices = [datetime(1975, 1, i) for i in range(1, 6)]

test_rolling_quantile.py
  No description

test_rolling_skew_kurt.py
  No description

test_timeseries_window.py
  No description

test_win_type.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\tseries/
--------------------------------------------------------------------------------

__init__.py
  No description

api.py
  Timeseries API

frequencies.py
  Alias to closest period strings BQ->Q etc.

holiday.py
  If holiday falls on Saturday, use following Monday instead; if holiday falls on Sunday, use Monday instead

offsets.py
  No description

training_data_bot\.venv\Lib\site-packages\pandas\util/
--------------------------------------------------------------------------------

__init__.py
  No description

_decorators.py
  Return a new function that emits a deprecation warning on use. To use this method for a deprecated function, another function

_doctools.py
  Layout some DataFrames in vertical/horizontal layout for explanation. Used in merging.rst

_exceptions.py
  Rewrite the message of an exception.

_print_versions.py
  Use vendored versioneer code to get git hash, which handles git worktree correctly.

_test_decorators.py
  This module provides decorator functions which can be applied to test objects in order to skip those objects when certain conditions occur. A sample use case

_tester.py
  Entrypoint for testing from the top-level namespace.

_validators.py
  Module that contains many useful utilities for validating data or function arguments

training_data_bot\.venv\Lib\site-packages\pandas\util\version/
--------------------------------------------------------------------------------

__init__.py
  Parse the given version string and return either a :class:`Version` object or a :class:`LegacyVersion` object depending on if the given version is

training_data_bot\.venv\Lib\site-packages\pathspec/
--------------------------------------------------------------------------------

__init__.py
  The *pathspec* package provides pattern matching for file paths. So far this only includes Git's wildmatch pattern matching (the style used for

_meta.py
  This module contains the project meta-data.

gitignore.py
  This module provides :class:`.GitIgnoreSpec` which replicates *.gitignore* behavior.

pathspec.py
  This module provides an object oriented interface for pattern matching of files.

pattern.py
  This module provides the base definition for patterns.

training_data_bot\.venv\Lib\site-packages\pathspec\patterns/
--------------------------------------------------------------------------------

__init__.py
  The *pathspec.patterns* package contains the pattern matching implementations.

gitwildmatch.py
  This module implements Git's wildmatch pattern matching which itself is derived from Rsync's wildmatch. Git uses wildmatch for its ".gitignore" files.

training_data_bot\.venv\Lib\site-packages\pathspec/
--------------------------------------------------------------------------------

util.py
  This module provides utility methods for dealing with path-specs.

training_data_bot\.venv\Lib\site-packages\pip/
--------------------------------------------------------------------------------

__init__.py
  This is an internal API only meant for use by pip's own console scripts. For additional details, see https://github.com/pypa/pip/issues/7498.

__main__.py
  No description

__pip-runner__.py
  Execute exactly this copy of pip, within a different environment. This file is named as it is, to ensure that this module can't be imported via

training_data_bot\.venv\Lib\site-packages\pip\_internal/
--------------------------------------------------------------------------------

__init__.py
  This is preserved for old console scripts that may still be referencing it.

build_env.py
  Build Environment used for isolation during sdist building""" from __future__ import annotations

cache.py
  Cache Management""" from __future__ import annotations

training_data_bot\.venv\Lib\site-packages\pip\_internal\cli/
--------------------------------------------------------------------------------

__init__.py
  Subpackage containing all of pip's command line interface related code""" # This file intentionally does not import submodules

autocompletion.py
  Logic that powers autocompletion installed by ``pip completion``.""" from __future__ import annotations

base_command.py
  Base Command class, and related routines""" from __future__ import annotations

cmdoptions.py
  shared options and groups The principle here is to define options once, but *not* instantiate them

command_context.py
  No description

index_command.py
  Contains command classes which may interact with an index / the network. Unlike its sister module, req_command, this module still uses lazy imports

main.py
  Primary application entrypoint.""" from __future__ import annotations

main_parser.py
  A single place for constructing and exposing the main parser""" from __future__ import annotations

parser.py
  Base option parser setup""" from __future__ import annotations

progress_bars.py
  Get an object that can be used to render the download progress. Returns a callable, that takes an iterable to "wrap".

req_command.py
  Contains the RequirementCommand base class. This class is in a separate module so the commands that do not always

spinners.py
  Custom rich spinner that matches the style of the legacy spinners. (*) Updates will be handled in a background thread by a rich live panel

status_codes.py
  No description

training_data_bot\.venv\Lib\site-packages\pip\_internal\commands/
--------------------------------------------------------------------------------

__init__.py
  Package containing all pip commands

cache.py
  Inspect and manage pip's wheel cache. Subcommands:

check.py
  Verify installed packages have compatible dependencies.""" ignore_require_venv = True

completion.py
  # pip {shell} completion start{script}# pip {shell} completion end

configuration.py
  Manage local and global configuration. Subcommands:

debug.py
  Log the actual version and print extra info if there is a conflict or if the actual version could not be imported.

download.py
  Download packages from: - PyPI (and other indexes) using requirement specifiers.

freeze.py
  Output installed packages in requirements format. packages are listed in a case-insensitive sorted order.

hash.py
  Compute a hash of a local package archive. These can be used with --hash in a requirements file to do repeatable

help.py
  Show help for commands"""

index.py
  Inspect information available from package indexes.

inspect.py
  Inspect the content of a Python environment and produce a report in JSON format.

install.py
  Install packages from: - PyPI (and other indexes) using requirement specifiers.

list.py
  Give the distribution object a couple of extra fields. These will be populated during ``get_outdated()``. This is dirty but

lock.py
  EXPERIMENTAL - Lock packages and their dependencies from: - PyPI (and other indexes) using requirement specifiers.

search.py
  Search for PyPI packages whose name or summary contains <query>."""

show.py
  Show information about one or more installed packages. The output is in RFC-compliant mail header format.

uninstall.py
  Uninstall packages. pip is able to uninstall most installed packages. Known exceptions are:

wheel.py
  Build Wheel archives for your requirements and dependencies. Wheel is a built-package format, and offers the advantage of not

training_data_bot\.venv\Lib\site-packages\pip\_internal/
--------------------------------------------------------------------------------

configuration.py
  Configuration management setup Some terminology:

training_data_bot\.venv\Lib\site-packages\pip\_internal\distributions/
--------------------------------------------------------------------------------

__init__.py
  Returns a Distribution for the given InstallRequirement""" # Editable requirements will always be source distributions. They use the

base.py
  A base class for handling installable artifacts. The requirements for anything installable are as follows:

installed.py
  Represents an installed package. This does not need any preparation as the required information has already

sdist.py
  Represents a source distribution. The preparation step for these needs metadata for the packages to be

wheel.py
  Represents a wheel distribution. This does not need any preparation as wheels can be directly unpacked.

training_data_bot\.venv\Lib\site-packages\pip\_internal/
--------------------------------------------------------------------------------

exceptions.py
  Exceptions used throughout package. This module MUST NOT try to import from anything within `pip._internal` to

training_data_bot\.venv\Lib\site-packages\pip\_internal\index/
--------------------------------------------------------------------------------

__init__.py
  Index interaction code"""

collector.py
  The main purpose of this module is to expose LinkCollector.collect_sources().

package_finder.py
  Routines related to PyPI, indexes""" from __future__ import annotations

sources.py
  Returns the underlying link, if there's one.""" raise NotImplementedError()

training_data_bot\.venv\Lib\site-packages\pip\_internal\locations/
--------------------------------------------------------------------------------

__init__.py
  This function determines the value of _USE_SYSCONFIG. By default, pip uses sysconfig on Python 3.10+.

_distutils.py
  Locations where we look for configs, install stuff, etc""" # The following comment should be removed at some point in the future.

_sysconfig.py
  Check for Apple's ``osx_framework_library`` scheme. Python distributed by Apple's Command Line Tools has this special scheme

base.py
  Return the major-minor version of the current Python as a string, e.g. "3.7" or "3.10".

training_data_bot\.venv\Lib\site-packages\pip\_internal/
--------------------------------------------------------------------------------

main.py
  This is preserved for old console scripts that may still be referencing it.

training_data_bot\.venv\Lib\site-packages\pip\_internal\metadata/
--------------------------------------------------------------------------------

__init__.py
  Whether to use the ``importlib.metadata`` or ``pkg_resources`` backend. By default, pip uses ``importlib.metadata`` on Python 3.11+, and

_json.py
  Convert a Message object into a JSON-compatible dictionary.""" def sanitise_header(h: Header | str) -> str:

base.py
  Convert a legacy installed-files.txt path into modern RECORD path. The legacy format stores paths relative to the info directory, while the

training_data_bot\.venv\Lib\site-packages\pip\_internal\metadata\importlib/
--------------------------------------------------------------------------------

__init__.py
  No description

_compat.py
  A protocol that various path objects conform. This exists because importlib.metadata uses both ``pathlib.Path`` and

_dists.py
  An ``importlib.metadata.Distribution`` read from a wheel. Although ``importlib.metadata.PathDistribution`` accepts ``zipfile.Path``,

_envs.py
  Finder to locate distributions. The main purpose of this class is to memoize found distributions' names, so

training_data_bot\.venv\Lib\site-packages\pip\_internal\metadata/
--------------------------------------------------------------------------------

pkg_resources.py
  IMetadataProvider that reads metadata files from a dictionary. This also maps metadata decoding exceptions to our internal exception type.

training_data_bot\.venv\Lib\site-packages\pip\_internal\models/
--------------------------------------------------------------------------------

__init__.py
  A package that contains models that represent entities."""

candidate.py
  Represents a potential "candidate" for installation.""" __slots__ = ["name", "version", "link"]

direct_url.py
  PEP 610""" from __future__ import annotations

format_control.py
  Helper for managing formats from which a package can be installed.""" __slots__ = ["no_binary", "only_binary"]

index.py
  Represents a Package Index and provides easier access to endpoints""" __slots__ = ["url", "netloc", "simple_url", "pypi_url", "file_storage_domain"]

installation_report.py
  No description

link.py
  Links to content may have embedded hash values. This class parses those. `name` must be any member of `_SUPPORTED_HASHES`.

pylock.py
  No description

scheme.py
  For types associated with installation schemes. For a general overview of available schemes and their context, see

search_scope.py
  Encapsulates the locations that pip is configured to search.

selection_prefs.py
  Encapsulates the candidate selection preferences for downloading and installing files.

target_python.py
  Encapsulates the properties of a Python interpreter one is targeting for a package install, download, etc.

wheel.py
  Represents a wheel file and provides access to the various parts of the name that have meaning.

training_data_bot\.venv\Lib\site-packages\pip\_internal\network/
--------------------------------------------------------------------------------

__init__.py
  Contains purely network-related utilities."""

auth.py
  Network Authentication Helpers Contains interface (MultiDomainBasicAuth) and associated glue code for

cache.py
  HTTP cache implementation.""" from __future__ import annotations

download.py
  Download files with progress indicators.""" from __future__ import annotations

lazy_wheel.py
  Lazy ZIP over HTTP""" from __future__ import annotations

session.py
  PipSession and supporting code, containing all pip-specific network request configuration and behavior.

utils.py
  Given a requests Response, provide the data chunks.""" try:

xmlrpc.py
  xmlrpclib.Transport implementation""" import logging

training_data_bot\.venv\Lib\site-packages\pip\_internal\operations/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\pip\_internal\operations\build/
--------------------------------------------------------------------------------

__init__.py
  No description

build_tracker.py
  Uniquely identifying string provided to the build tracker.""" class BuildTracker:

metadata.py
  Metadata generation logic for source distributions.""" import os

metadata_editable.py
  Metadata generation logic for source distributions.""" import os

metadata_legacy.py
  Metadata generation logic for legacy source distributions.""" import logging

wheel.py
  Build one InstallRequirement using the PEP 517 build process. Returns path to wheel if successfully built. Otherwise, returns None.

wheel_editable.py
  Build one InstallRequirement using the PEP 660 build process. Returns path to wheel if successfully built. Otherwise, returns None.

wheel_legacy.py
  Format command information for logging.""" command_desc = format_command_args(command_args)

training_data_bot\.venv\Lib\site-packages\pip\_internal\operations/
--------------------------------------------------------------------------------

check.py
  Validation of dependencies of packages""" from __future__ import annotations

freeze.py
  Compute and return values (req, comments) for use in FrozenRequirement.from_dist().

training_data_bot\.venv\Lib\site-packages\pip\_internal\operations\install/
--------------------------------------------------------------------------------

__init__.py
  For modules related to installing packages."""

editable_legacy.py
  Legacy editable installation process, i.e. `setup.py develop`.""" from __future__ import annotations

wheel.py
  Support for installing and building the "wheel" binary package format.""" from __future__ import annotations

training_data_bot\.venv\Lib\site-packages\pip\_internal\operations/
--------------------------------------------------------------------------------

prepare.py
  Prepares a distribution for installation""" # The following comment should be removed at some point in the future.

training_data_bot\.venv\Lib\site-packages\pip\_internal/
--------------------------------------------------------------------------------

pyproject.py
  Load the pyproject.toml file. Parameters:

training_data_bot\.venv\Lib\site-packages\pip\_internal\req/
--------------------------------------------------------------------------------

__init__.py
  Install everything in the given list. (to be called after having downloaded and unpacked the packages)

constructors.py
  Backing implementation for InstallRequirement's various constructors The idea here is that these formed a major chunk of InstallRequirement's size

req_dependency_group.py
  Parse dependency groups data as provided via the CLI, in a `[path:]group` syntax. Raises InstallationErrors if anything goes wrong.

req_file.py
  Requirements file parsing

req_install.py
  Represents something that may be installed later on, may have information about where to fetch the relevant requirement and also contains logic for

req_set.py
  Create a RequirementSet.""" self.requirements: dict[str, InstallRequirement] = OrderedDict()

req_uninstall.py
  Create the fully qualified name of the files created by {console,gui}_scripts for the given ``dist``.

training_data_bot\.venv\Lib\site-packages\pip\_internal\resolution/
--------------------------------------------------------------------------------

__init__.py
  No description

base.py
  No description

training_data_bot\.venv\Lib\site-packages\pip\_internal\resolution\legacy/
--------------------------------------------------------------------------------

__init__.py
  No description

resolver.py
  Dependency Resolution The dependency resolution in pip is performed as follows:

training_data_bot\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib/
--------------------------------------------------------------------------------

__init__.py
  No description

base.py
  The "project name" of a requirement. This is different from ``name`` if this requirement contains extras,

candidates.py
  The runtime version of BaseCandidate.""" base_candidate_classes = (

factory.py
  Get the candidate for the currently-installed version.""" # If --force-reinstall is set, we want the version from the index

found_candidates.py
  Utilities to lazily create and visit candidates found. Creating and visiting a candidate is a *very* costly operation. It involves

provider.py
  Get item from a package name lookup mapping with a resolver identifier. This extra logic is needed when the target mapping is keyed by package

reporter.py
  A reporter that does an info log for every event it sees.""" def starting(self) -> None:

requirements.py
  Requirement backed by an install requirement on a base package. Trims extras from its install requirement if there are any.

resolver.py
  Get order for installation of requirements in RequirementSet. The returned list contains a requirement before another that depends on

training_data_bot\.venv\Lib\site-packages\pip\_internal/
--------------------------------------------------------------------------------

self_outdated_check.py
  Convert an ISO format string to a date. Handles the format 2020-01-22T14:24:01Z (trailing Z)

training_data_bot\.venv\Lib\site-packages\pip\_internal\utils/
--------------------------------------------------------------------------------

__init__.py
  No description

_jaraco_text.py
  Functions brought over from jaraco.text. These functions are not supposed to be used within `pip._internal`. These are

_log.py
  Customize logging Defines custom logger class for the `logger.verbose(...)` method.

appdirs.py
  This code wraps the vendored appdirs module to so the return values are compatible for the current pip code base.

compat.py
  Stuff that differs in different Python versions and platform

compatibility_tags.py
  Generate and work with PEP 425 Compatibility Tags.""" from __future__ import annotations

datetime.py
  For when pip wants to check the date or time.""" import datetime

deprecation.py
  A module that implements tooling to enable easy warnings about deprecations.

direct_url_helpers.py
  Convert a DirectUrl to a pip requirement string.""" direct_url.validate()  # if invalid, this is a pip bug

egg_link.py
  Convert a Name metadata value to a .egg-link name, by applying the same substitution as pkg_resources's safe_name function.

entrypoints.py
  Central wrapper for all old entrypoints. Historically pip has had several entrypoints defined. Because of issues

filesystem.py
  Return a file-like object pointing to a tmp file next to path. The file is created securely and is ensured to be written to disk

filetypes.py
  Filetype information.""" from pip._internal.utils.misc import splitext

glibc.py
  Try to determine the glibc version Returns a tuple of strings (lib, version) which default to empty strings

hashes.py
  A wrapper that builds multiple hashes at once and checks them against known-good values

logging.py
  Raised if BrokenPipeError occurs for the stdout stream while logging.

misc.py
  Convert a tuple of ints representing a Python version to one of length three.

packaging.py
  Check if the given Python version matches a "Requires-Python" specifier. :param version_info: A 3-tuple of ints representing a Python

retry.py
  Decorator to automatically retry a function on error. If the function raises, the function is recalled with the same arguments

setuptools_build.py
  exec(compile(''' # This is <pip-setuptools-caller> -- a caller that pip uses to run setup.py

subprocess.py
  Create a CommandArgs object.

temp_dir.py
  Manages temp directory behavior""" def __init__(self) -> None:

unpacking.py
  Utilities related archives.""" from __future__ import annotations

urls.py
  Convert a path to a file: URL.  The path will be made absolute and have quoted path parts.

virtualenv.py
  Checks if sys.base_prefix and sys.prefix match. This handles PEP 405 compliant virtual environments.

wheel.py
  Support functions for working with wheel files.""" import logging

training_data_bot\.venv\Lib\site-packages\pip\_internal\vcs/
--------------------------------------------------------------------------------

__init__.py
  No description

bazaar.py
  Always assume the versions don't match""" return False

git.py
  ^ # Optional user, e.g. 'git@'

mercurial.py
  Return the repository-local changeset revision number, as an integer.

subversion.py
  Return the maximum revision for all files under a given location

versioncontrol.py
  Handles all VCS (version control) support""" from __future__ import annotations

training_data_bot\.venv\Lib\site-packages\pip\_internal/
--------------------------------------------------------------------------------

wheel_builder.py
  Orchestrator for building wheels from InstallRequirements.""" from __future__ import annotations

training_data_bot\.venv\Lib\site-packages\pip\_vendor/
--------------------------------------------------------------------------------

__init__.py
  pip._vendor is for vendoring dependencies of pip to prevent needing pip to depend on something external.

training_data_bot\.venv\Lib\site-packages\pip\_vendor\cachecontrol/
--------------------------------------------------------------------------------

__init__.py
  CacheControl import Interface. Make it easy to import from cachecontrol without long namespaces.

_cmd.py
  No description

adapter.py
  Send a request. Use the request information to see if it exists in the cache and cache the response if we need to and can.

cache.py
  The cache object API for implementing caches. The default is a thread safe in-memory dictionary.

training_data_bot\.venv\Lib\site-packages\pip\_vendor\cachecontrol\caches/
--------------------------------------------------------------------------------

__init__.py
  No description

file_cache.py
  Shared implementation for both FileCache variants.""" def __init__(

redis_cache.py
  Helper for clearing all the keys in a database. Use with

training_data_bot\.venv\Lib\site-packages\pip\_vendor\cachecontrol/
--------------------------------------------------------------------------------

controller.py
  The httplib2 algorithms ported for use with requests.

filewrapper.py
  Small wrapper around a fp object which will tee everything read into a buffer, and when that file is closed it will execute a callback with the

heuristics.py
  Return a valid 1xx warning header value describing the cache adjustments.

serialize.py
  Verify our vary headers match and construct a real urllib3 HTTPResponse object.

wrapper.py
  No description

training_data_bot\.venv\Lib\site-packages\pip\_vendor\certifi/
--------------------------------------------------------------------------------

__init__.py
  No description

__main__.py
  No description

core.py
  certifi.py ~~~~~~~~~~

training_data_bot\.venv\Lib\site-packages\pip\_vendor\dependency_groups/
--------------------------------------------------------------------------------

__init__.py
  No description

__main__.py
  No description

_implementation.py
  An error representing the detection of a cycle.

_lint_dependency_groups.py
  No description

_pip_wrapper.py
  No description

_toml_compat.py
  No description

training_data_bot\.venv\Lib\site-packages\pip\_vendor\distlib/
--------------------------------------------------------------------------------

__init__.py
  No description

compat.py
  splituser('user[:passwd]@host[:port]') --> 'user[:passwd]', 'host[:port]'.""" # global _userprog

resources.py
  Is the cache stale for the given resource? :param resource: The :class:`Resource` being cached.

scripts.py
  A class to copy or create scripts from source scripts or callable specifications.

util.py
  Parse a marker string and return a dictionary containing a marker expression. The dictionary will contain keys "op", "lhs" and "rhs" for non-terminals in

training_data_bot\.venv\Lib\site-packages\pip\_vendor\distro/
--------------------------------------------------------------------------------

__init__.py
  No description

__main__.py
  No description

distro.py
  The ``distro`` package (``distro`` stands for Linux Distribution) provides information about the Linux distribution it runs on, such as a reliable

training_data_bot\.venv\Lib\site-packages\pip\_vendor\idna/
--------------------------------------------------------------------------------

__init__.py
  No description

codec.py
  No description

compat.py
  No description

core.py
  Base exception for all IDNA-encoding related problems""" pass

idnadata.py
  No description

intranges.py
  Given a list of integers, made up of (hopefully) a small number of long runs of consecutive integers, compute a representation of the form

package_data.py
  No description

uts46data.py
  IDNA Mapping Table from UTS46.""" __version__ = "15.1.0"

training_data_bot\.venv\Lib\site-packages\pip\_vendor\msgpack/
--------------------------------------------------------------------------------

__init__.py
  Pack object `o` and write it to `stream` See :class:`Packer` for options.

exceptions.py
  Base class for some exceptions raised while unpacking. NOTE: unpack may raise exception other than subclass of

ext.py
  ExtType represents ext type in msgpack.""" def __new__(cls, code, data):

fallback.py
  Fallback pure Python implementation of msgpack""" import struct

training_data_bot\.venv\Lib\site-packages\pip\_vendor\packaging/
--------------------------------------------------------------------------------

__init__.py
  No description

_elffile.py
  ELF file parser. This provides a class ``ELFFile`` that parses an ELF executable in a similar

_manylinux.py
  Primary implementation of glibc_version_string using os.confstr.

_musllinux.py
  PEP 656 support. This module implements logic to detect if the currently running Python is

_parser.py
  Handwritten parser of dependency specifiers. The docstring for each __parse_* function contains EBNF-inspired grammar representing

_structures.py
  No description

_tokenizer.py
  The provided source text could not be parsed correctly.""" def __init__(

training_data_bot\.venv\Lib\site-packages\pip\_vendor\packaging\licenses/
--------------------------------------------------------------------------------

__init__.py
  Raised when a license-expression string is invalid >>> canonicalize_license_expression("invalid")

_spdx.py
  No description

training_data_bot\.venv\Lib\site-packages\pip\_vendor\packaging/
--------------------------------------------------------------------------------

markers.py
  An invalid marker was found, users should refer to PEP 508.

metadata.py
  A minimal implementation of :external:exc:`ExceptionGroup` from Python 3.11. If :external:exc:`ExceptionGroup` is already defined by Python itself,

requirements.py
  An invalid requirement was found, users should refer to PEP 508.

specifiers.py
  .. testsetup:: from pip._vendor.packaging.specifiers import Specifier, SpecifierSet, InvalidSpecifier

tags.py
  A representation of the tag triple for a wheel. Instances are considered immutable and thus are hashable. Equality checking

utils.py
  An invalid distribution name; users should refer to the packaging user guide.

version.py
  .. testsetup:: from pip._vendor.packaging.version import parse, Version

training_data_bot\.venv\Lib\site-packages\pip\_vendor\pkg_resources/
--------------------------------------------------------------------------------

__init__.py
  Package resource API --------------------

training_data_bot\.venv\Lib\site-packages\pip\_vendor\platformdirs/
--------------------------------------------------------------------------------

__init__.py
  Utilities for determining application-specific dirs. See <https://github.com/platformdirs/platformdirs> for details and usage.

__main__.py
  Main entry point.""" from __future__ import annotations

android.py
  Android.""" from __future__ import annotations

api.py
  Base API.""" from __future__ import annotations

macos.py
  macOS.""" from __future__ import annotations

unix.py
  Unix.""" from __future__ import annotations

version.py
  No description

windows.py
  Windows.""" from __future__ import annotations

training_data_bot\.venv\Lib\site-packages\pip\_vendor\pygments/
--------------------------------------------------------------------------------

__init__.py
  Pygments ~~~~~~~~

__main__.py
  pygments.__main__ ~~~~~~~~~~~~~~~~~

console.py
  pygments.console ~~~~~~~~~~~~~~~~

filter.py
  pygments.filter ~~~~~~~~~~~~~~~

training_data_bot\.venv\Lib\site-packages\pip\_vendor\pygments\filters/
--------------------------------------------------------------------------------

__init__.py
  pygments.filters ~~~~~~~~~~~~~~~~

training_data_bot\.venv\Lib\site-packages\pip\_vendor\pygments/
--------------------------------------------------------------------------------

formatter.py
  pygments.formatter ~~~~~~~~~~~~~~~~~~

training_data_bot\.venv\Lib\site-packages\pip\_vendor\pygments\formatters/
--------------------------------------------------------------------------------

__init__.py
  pygments.formatters ~~~~~~~~~~~~~~~~~~~

_mapping.py
  No description

training_data_bot\.venv\Lib\site-packages\pip\_vendor\pygments/
--------------------------------------------------------------------------------

lexer.py
  pygments.lexer ~~~~~~~~~~~~~~

training_data_bot\.venv\Lib\site-packages\pip\_vendor\pygments\lexers/
--------------------------------------------------------------------------------

__init__.py
  pygments.lexers ~~~~~~~~~~~~~~~

_mapping.py
  No description

python.py
  pygments.lexers.python ~~~~~~~~~~~~~~~~~~~~~~

training_data_bot\.venv\Lib\site-packages\pip\_vendor\pygments/
--------------------------------------------------------------------------------

modeline.py
  pygments.modeline ~~~~~~~~~~~~~~~~~

plugin.py
  pygments.plugin ~~~~~~~~~~~~~~~

regexopt.py
  pygments.regexopt ~~~~~~~~~~~~~~~~~

scanner.py
  pygments.scanner ~~~~~~~~~~~~~~~~

sphinxext.py
  pygments.sphinxext ~~~~~~~~~~~~~~~~~~

style.py
  pygments.style ~~~~~~~~~~~~~~

training_data_bot\.venv\Lib\site-packages\pip\_vendor\pygments\styles/
--------------------------------------------------------------------------------

__init__.py
  pygments.styles ~~~~~~~~~~~~~~~

_mapping.py
  No description

training_data_bot\.venv\Lib\site-packages\pip\_vendor\pygments/
--------------------------------------------------------------------------------

token.py
  pygments.token ~~~~~~~~~~~~~~

unistring.py
  pygments.unistring ~~~~~~~~~~~~~~~~~~

util.py
  pygments.util ~~~~~~~~~~~~~

training_data_bot\.venv\Lib\site-packages\pip\_vendor\pyproject_hooks/
--------------------------------------------------------------------------------

__init__.py
  Wrappers to call pyproject.toml-based build backend hooks.

_impl.py
  A protocol for the subprocess runner.""" def __call__(

training_data_bot\.venv\Lib\site-packages\pip\_vendor\pyproject_hooks\_in_process/
--------------------------------------------------------------------------------

__init__.py
  This is a subpackage because the directory is on sys.path for _in_process.py The subpackage should stay as empty as possible to avoid shadowing modules that

_in_process.py
  This is invoked in a subprocess to call the build backend hooks. It expects:

training_data_bot\.venv\Lib\site-packages\pip\_vendor\requests/
--------------------------------------------------------------------------------

__init__.py
  Requests HTTP Library ~~~~~~~~~~~~~~~~~~~~~

__version__.py
  No description

_internal_utils.py
  requests._internal_utils ~~~~~~~~~~~~~~

adapters.py
  requests.adapters ~~~~~~~~~~~~~~~~~

api.py
  requests.api ~~~~~~~~~~~~

auth.py
  requests.auth ~~~~~~~~~~~~~

certs.py
  requests.certs ~~~~~~~~~~~~~~

compat.py
  requests.compat ~~~~~~~~~~~~~~~

cookies.py
  requests.cookies ~~~~~~~~~~~~~~~~

exceptions.py
  requests.exceptions ~~~~~~~~~~~~~~~~~~~

help.py
  Module containing bug report helper(s).""" import json

hooks.py
  requests.hooks ~~~~~~~~~~~~~~

models.py
  requests.models ~~~~~~~~~~~~~~~

packages.py
  No description

sessions.py
  requests.sessions ~~~~~~~~~~~~~~~~~

status_codes.py
  The ``codes`` object defines a mapping from common names for HTTP statuses to their numerical codes, accessible either as attributes or as dictionary

structures.py
  requests.structures ~~~~~~~~~~~~~~~~~~~

utils.py
  requests.utils ~~~~~~~~~~~~~~

training_data_bot\.venv\Lib\site-packages\pip\_vendor\resolvelib/
--------------------------------------------------------------------------------

__init__.py
  No description

providers.py
  Delegate class to provide the required interface for the resolver.""" def identify(self, requirement_or_candidate: RT | CT) -> KT:

reporters.py
  Delegate class to provide progress reporting for the resolver.""" def starting(self) -> None:

training_data_bot\.venv\Lib\site-packages\pip\_vendor\resolvelib\resolvers/
--------------------------------------------------------------------------------

__init__.py
  No description

abstract.py
  The thing that performs the actual resolution work.""" base_exception = Exception

criterion.py
  Representation of possible resolution results of a package. This holds three attributes:

exceptions.py
  A base class for all exceptions raised by this module. Exceptions derived by this class should all be handled in this module. Any

resolution.py
  Stateful resolution object. This is designed as a one-off object that holds information to kick start

training_data_bot\.venv\Lib\site-packages\pip\_vendor\resolvelib/
--------------------------------------------------------------------------------

structs.py
  Resolution state in a round.""" mapping: dict[KT, CT]

training_data_bot\.venv\Lib\site-packages\pip\_vendor\rich/
--------------------------------------------------------------------------------

__init__.py
  Rich text and beautiful formatting in the terminal.""" import os

__main__.py
  Get a renderable that demonstrates a number of features.""" table = Table.grid(padding=1, pad_edge=True)

_cell_widths.py
  No description

_emoji_codes.py
  No description

_emoji_replace.py
  Replace emoji code in text.""" get_emoji = EMOJI.__getitem__

_export_format.py
  \ <!DOCTYPE html>

_extension.py
  No description

_fileno.py
  Get fileno() from a file, accounting for poorly implemented file-like objects. Args:

_inspect.py
  Get the first paragraph from a docstring.""" paragraph, _, _ = doc.partition("\n\n")

_log_render.py
  No description

_loop.py
  Iterate and generate a tuple with a flag for first value.""" iter_values = iter(values)

_null_file.py
  No description

_palettes.py
  No description

_pick.py
  Pick the first non-none bool or return the last value. Args:

_ratio.py
  Any object that defines an edge (such as Layout).""" size: Optional[int] = None

_spinners.py
  Spinners are from: * cli-spinners:

_stack.py
  A small shim over builtin list.""" @property

_timer.py
  Timer context manager, only used in debug.

_win32_console.py
  Light wrapper around the Win32 Console API - this module should only be imported on Windows The API that this module wraps is documented at https://docs.microsoft.com/en-us/windows/console/console-functions

_windows.py
  Windows features available.""" vt: bool = False

_windows_renderer.py
  Makes appropriate Windows Console API calls based on the segments in the buffer. Args:

_wrap.py
  Yields each word from the text as a tuple containing (start_index, end_index, word). A "word" in this context may

abc.py
  An abstract base class for Rich renderables. Note that there is no need to extend this class, the intended use is to check if an

align.py
  Align a renderable by adding spaces if necessary. Args:

ansi.py
  (?:\x1b[0-?])| (?:\x1b\](.*?)\x1b\\)|

bar.py
  Renders a solid block bar. Args:

box.py
  Defines characters to render boxes. ┌─┬┐ top

cells.py
  Get the number of cells required to display text. This method always caches, which may use up a lot of memory. It is recommended to use

color.py
  One of the 3 color system supported by terminals.""" STANDARD = 1

color_triplet.py
  The red, green, and blue components of a color.""" red: int

columns.py
  Display renderables in neat columns. Args:

console.py
  Size of the terminal.""" width: int

constrain.py
  Constrain the width of a renderable to a given number of characters. Args:

containers.py
  A list subclass which renders its contents to the console.""" def __init__(

control.py
  A renderable that inserts a control code (non printable but may move cursor). Args:

default_styles.py
  No description

diagnose.py
  Print a report to the terminal with debugging information""" console = Console()

emoji.py
  No emoji by that name.""" class Emoji(JupyterMixin):

errors.py
  An error in console operation.""" class StyleError(Exception):

file_proxy.py
  Wraps a file (e.g. sys.stdout) and redirects writes to a console.""" def __init__(self, console: "Console", file: IO[str]) -> None:

filesize.py
  Functions for reporting filesizes. Borrowed from https://github.com/PyFilesystem/pyfilesystem2 The functions declared in this module should cover the different

highlighter.py
  Combine a number of regexes in to a single regex. Returns:

json.py
  A renderable which pretty prints JSON. Args:

jupyter.py
  \ <pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">{code}</pre>

layout.py
  An individual layout render.""" region: Region

live.py
  A thread that calls refresh() at regular intervals.""" def __init__(self, live: "Live", refresh_per_second: float) -> None:

live_render.py
  Creates a renderable that may be updated. Args:

logging.py
  A logging handler that renders output with Rich. The time / level / message and file are displayed in columns. The level is color coded, and the message is syntax highlighted.

markup.py
  ((\\*)\[([a-z#/@][^[]*?)])""", re.VERBOSE,

measure.py
  Stores the minimum and maximum widths (in characters) required to render an object.""" minimum: int

padding.py
  Draw space around content. Example:

pager.py
  Base class for a pager.""" @abstractmethod

palette.py
  A palette of available colors.""" def __init__(self, colors: Sequence[Tuple[int, int, int]]):

panel.py
  A console renderable that draws a border around its contents. Example:

pretty.py
  Check if an object was created with attrs module.""" return _has_attrs and _attr_module.has(type(obj))

progress.py
  A thread to periodically update progress.""" def __init__(self, progress: "Progress", task_id: "TaskID", update_period: float):

progress_bar.py
  Renders a (progress) bar. Used by rich.progress. Args:

prompt.py
  Exception base class for prompt related errors.""" class InvalidResponse(PromptError):

protocol.py
  aihwerij235234ljsdnp34ksodfipwoe234234jlskjdf""" def is_renderable(check_object: Any) -> bool:

region.py
  Defines a rectangular region of the screen.""" x: int

repr.py
  An error occurred when attempting to build a repr.""" @overload

rule.py
  A console renderable to draw a horizontal rule (line). Args:

scope.py
  Render python variables in a given scope. Args:

screen.py
  A renderable that fills the terminal screen and crops excess. Args:

segment.py
  Non-printable control codes which typically translate to ANSI codes.""" BELL = 1

spinner.py
  A spinner animation. Args:

status.py
  Displays a status indicator with a 'spinner' animation. Args:

style.py
  A descriptor to get/set a style attribute bit.""" __slots__ = ["bit"]

styled.py
  Apply a style to a renderable. Args:

syntax.py
  Base class for a syntax theme.""" @abstractmethod

table.py
  Defines a column within a ~Table. Args:

terminal_theme.py
  A color theme used when exporting console content. Args:

text.py
  A plain string or a :class:`Text` instance.""" GetStyleCallable = Callable[[str], Optional[StyleType]]

theme.py
  A container for style information, used by :class:`~rich.console.Console`. Args:

themes.py
  No description

traceback.py
  Yield start and end positions per line. Args:

tree.py
  A renderable for a tree structure. Attributes:

training_data_bot\.venv\Lib\site-packages\pip\_vendor\tomli/
--------------------------------------------------------------------------------

__init__.py
  No description

_parser.py
  Sentinel to be used as default arg during deprecation

_re.py
  0 (?:

_types.py
  No description

training_data_bot\.venv\Lib\site-packages\pip\_vendor\tomli_w/
--------------------------------------------------------------------------------

__init__.py
  No description

_writer.py
  \n' s = s.replace("\r\n", "\n")

training_data_bot\.venv\Lib\site-packages\pip\_vendor\truststore/
--------------------------------------------------------------------------------

__init__.py
  Verify certificates using native system trust stores""" import sys as _sys

_api.py
  Injects the :class:`truststore.SSLContext` into the ``ssl`` module by replacing :class:`ssl.SSLContext`.

_macos.py
  Loads a CDLL by name, falling back to known path on 10.16+""" try:

_openssl.py
  Check whether capath exists and contains certs in the expected format.""" if not os.path.isdir(capath):

_ssl_constants.py
  No description

_windows.py
  Verify the cert_chain from the server using Windows APIs.""" # If the peer didn't send any certificates then

training_data_bot\.venv\Lib\site-packages\pip\_vendor\urllib3/
--------------------------------------------------------------------------------

__init__.py
  Python HTTP library with thread-safe connection pooling, file post support, user friendly, and more

_collections.py
  Provides a thread-safe dict-like container which maintains up to ``maxsize`` keys while throwing away the least-recently-used keys beyond

_version.py
  No description

connection.py
  Based on :class:`http.client.HTTPConnection` but provides an extra constructor backwards-compatibility layer between older and newer Pythons.

connectionpool.py
  Base class for all connection pools, such as :class:`.HTTPConnectionPool` and :class:`.HTTPSConnectionPool`.

training_data_bot\.venv\Lib\site-packages\pip\_vendor\urllib3\contrib/
--------------------------------------------------------------------------------

__init__.py
  No description

_appengine_environ.py
  This module provides means to detect the App Engine environment.

training_data_bot\.venv\Lib\site-packages\pip\_vendor\urllib3\contrib\_securetransport/
--------------------------------------------------------------------------------

__init__.py
  No description

bindings.py
  This module uses ctypes to bind a whole bunch of functions and constants from SecureTransport. The goal here is to provide the low-level API to

low_level.py
  Low-level helpers for the SecureTransport bindings. These are Python functions that are not directly related to the high-level APIs

training_data_bot\.venv\Lib\site-packages\pip\_vendor\urllib3\contrib/
--------------------------------------------------------------------------------

appengine.py
  This module provides a pool manager that uses Google App Engine's `URLFetch Service <https://cloud.google.com/appengine/docs/python/urlfetch>`_.

ntlmpool.py
  NTLM authenticating pool, contributed by erikcederstran Issue #10, see: http://code.google.com/p/urllib3/issues/detail?id=10

pyopenssl.py
  TLS with SNI_-support for Python 2. Follow these instructions if you would like to verify TLS certificates in Python 2. Note, the default libraries do

securetransport.py
  SecureTranport support for urllib3 via ctypes. This makes platform-native TLS available to urllib3 users on macOS without the

socks.py
  This module contains provisional support for SOCKS proxies from within urllib3. This module supports SOCKS4, SOCKS4A (an extension of SOCKS4), and

training_data_bot\.venv\Lib\site-packages\pip\_vendor\urllib3/
--------------------------------------------------------------------------------

exceptions.py
  Base exception used by this module.""" pass

fields.py
  Guess the "Content-Type" of a file. :param filename:

filepost.py
  Our embarrassingly-simple replacement for mimetools.choose_boundary.

training_data_bot\.venv\Lib\site-packages\pip\_vendor\urllib3\packages/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\pip\_vendor\urllib3\packages\backports/
--------------------------------------------------------------------------------

__init__.py
  No description

makefile.py
  backports.makefile ~~~~~~~~~~~~~~~~~~

weakref_finalize.py
  backports.weakref_finalize ~~~~~~~~~~~~~~~~~~

training_data_bot\.venv\Lib\site-packages\pip\_vendor\urllib3\packages/
--------------------------------------------------------------------------------

six.py
  Utilities for writing code that runs on Python 2 and 3""" from __future__ import absolute_import

training_data_bot\.venv\Lib\site-packages\pip\_vendor\urllib3/
--------------------------------------------------------------------------------

poolmanager.py
  Create a pool key out of a request context dictionary. According to RFC 3986, both the scheme and host are case-insensitive.

request.py
  Convenience mixin for classes who implement a :meth:`urlopen` method, such as :class:`urllib3.HTTPConnectionPool` and

response.py
  From RFC7231: If one or more encodings have been applied to a representation, the

training_data_bot\.venv\Lib\site-packages\pip\_vendor\urllib3\util/
--------------------------------------------------------------------------------

__init__.py
  No description

connection.py
  Returns True if the connection is dropped and should be closed. :param conn:

proxy.py
  Returns True if the connection requires an HTTP CONNECT through the proxy. :param URL proxy_url:

queue.py
  No description

request.py
  Shortcuts for generating request headers. :param keep_alive:

response.py
  Checks whether a given file-like object is closed. :param obj:

retry.py
  Retry configuration. Each retry attempt will create a new Retry object with updated values, so

ssl_.py
  Compare two digests of equal length in constant time. The digests must be of type str/bytes.

ssl_match_hostname.py
  The match_hostname() function from Python 3.3.3, essential when using SSL.""" # Note: This file is under the PSF license as the code comes from the python

ssltransport.py
  The SSLTransport wraps an existing socket and establishes an SSL connection. Contrary to Python's implementation of SSLSocket, it allows you to chain

timeout.py
  Timeout configuration. Timeouts can be defined as a default for a pool:

url.py
  Data structure for representing an HTTP URL. Used as a return value for :func:`parse_url`. Both the scheme and host are normalized as they are

wait.py
  Waits for reading to be available on a given socket. Returns True if the socket is readable, or False if the timeout expired.

training_data_bot\.venv\Lib\site-packages\platformdirs/
--------------------------------------------------------------------------------

__init__.py
  Utilities for determining application-specific dirs. See <https://github.com/platformdirs/platformdirs> for details and usage.

__main__.py
  Main entry point.""" from __future__ import annotations

android.py
  Android.""" from __future__ import annotations

api.py
  Base API.""" from __future__ import annotations

macos.py
  macOS.""" from __future__ import annotations

unix.py
  Unix.""" from __future__ import annotations

version.py
  No description

windows.py
  Windows.""" from __future__ import annotations

training_data_bot\.venv\Lib\site-packages\pluggy/
--------------------------------------------------------------------------------

__init__.py
  No description

_callers.py
  Call loop machinery

_hooks.py
  Internal hook annotation, representation and calling machinery.

_manager.py
  Plugin failed validation. :param plugin: The plugin which failed validation.

_result.py
  Hook wrapper "result" utilities.

_tracing.py
  Tracing utils

_version.py
  No description

_warnings.py
  Base class for all warnings emitted by pluggy.""" __module__ = "pluggy"

training_data_bot\.venv\Lib\site-packages/
--------------------------------------------------------------------------------

py.py
  No description

training_data_bot\.venv\Lib\site-packages\pyarrow/
--------------------------------------------------------------------------------

__init__.py
  PyArrow is the python implementation of Apache Arrow. Apache Arrow is a cross-language development platform for in-memory data.

_compute_docstrings.py
  Custom documentation additions for compute functions.

_generated_version.py
  No description

acero.py
  Perform join of two tables or datasets. The result will be an output table with the result of the join operation

benchmark.py
  No description

cffi.py
  struct ArrowSchema { // Array type description

compute.py
  \ Parameters

conftest.py
  Register a unary scalar function.

csv.py
  No description

cuda.py
  No description

dataset.py
  Dataset is currently unstable. APIs subject to change without notice.""" import pyarrow as pa

feather.py
  Encapsulates details of reading a list of Feather files. Parameters

flight.py
  No description

fs.py
  FileSystem abstraction to interact with various local and remote filesystems.

training_data_bot\.venv\Lib\site-packages\pyarrow\interchange/
--------------------------------------------------------------------------------

__init__.py
  No description

buffer.py
  Integer enum for device type codes matching DLPack.""" CPU = 1

column.py
  Integer enum for data types. Attributes

dataframe.py
  A data frame class, with only the methods required by the interchange protocol defined.

from_dataframe.py
  Build a ``pa.Table`` from any DataFrame supporting the interchange protocol. Parameters

training_data_bot\.venv\Lib\site-packages\pyarrow/
--------------------------------------------------------------------------------

ipc.py
  Reader for the Arrow streaming binary format. Parameters

json.py
  No description

jvm.py
  Functions to interact with Arrow memory allocated by Arrow Java. These functions convert the objects holding the metadata, the actual

orc.py
  Reader interface for a single ORC file Parameters

pandas_compat.py
  Construct the metadata for a given column Parameters

training_data_bot\.venv\Lib\site-packages\pyarrow\parquet/
--------------------------------------------------------------------------------

__init__.py
  No description

core.py
  Check if filters are well-formed.

encryption.py
  No description

training_data_bot\.venv\Lib\site-packages\pyarrow/
--------------------------------------------------------------------------------

substrait.py
  No description

training_data_bot\.venv\Lib\site-packages\pyarrow\tests/
--------------------------------------------------------------------------------

__init__.py
  No description

arrow_16597.py
  No description

arrow_39313.py
  No description

arrow_7980.py
  No description

conftest.py
  Stop the AWS SDK from trying to contact the EC2 metadata server. Otherwise, this causes a 5 second delay in tests that exercise the

training_data_bot\.venv\Lib\site-packages\pyarrow\tests\interchange/
--------------------------------------------------------------------------------

__init__.py
  No description

test_conversion.py
  No description

test_interchange_spec.py
  No description

training_data_bot\.venv\Lib\site-packages\pyarrow\tests/
--------------------------------------------------------------------------------

pandas_examples.py
  Dataframe with numpy arrays columns of every possible primitive type. Returns

pandas_threaded_import.py
  No description

training_data_bot\.venv\Lib\site-packages\pyarrow\tests\parquet/
--------------------------------------------------------------------------------

__init__.py
  No description

common.py
  No description

conftest.py
  No description

encryption.py
  This is a mock class implementation of KmsClient, built for testing only.

test_basic.py
  Check that checksum verification works for datasets created with

test_compliant_nested_type.py
  No description

test_data_types.py
  No description

test_dataset.py
  Verify kwargs in pq.write_to_dataset are passed onto ds.write_dataset""" import pyarrow.dataset as ds

test_datetime.py
  ARROW-2555: Test that we can truncate timestamps when coercing if explicitly allowed.

test_encryption.py
  Sets up and returns the KMS connection configuration and crypto factory based on provided KMS configuration parameters.

test_metadata.py
  No description

test_pandas.py
  \ carat        cut  color  clarity  depth  table  price     x     y     z

test_parquet_file.py
  Unopened files should be closed explicitly after use, and previously opened files should be left open.

test_parquet_writer.py
  No description

training_data_bot\.venv\Lib\site-packages\pyarrow\tests/
--------------------------------------------------------------------------------

read_record_batch.py
  No description

strategies.py
  No description

test_acero.py
  No description

test_adhoc_memory_leak.py
  No description

test_array.py
  if 1: import pyarrow as pa

test_builder.py
  No description

test_cffi.py
  No description

test_compute.py
  \ Compute the minimum and maximum values of a numeric array.

test_convert_builtin.py
  Check a struct type is as expected, but not taking order into account.

test_cpp_internals.py
  Inject C++ tests as Python functions into namespace `ns` (a dict).

test_csv.py
  Check setting and getting attributes of an *Options class.

test_cuda.py
  UNTESTED: read_message

test_cuda_numba_interop.py
  Return a host or device buffer with random data.

test_cython.py
  if 1: from setuptools import setup

test_dataset.py
  Test passing file_size to make_fragment. Not all FS implementations make use of the file size (by implementing an OpenInputFile that takes a FileInfo), but

test_dataset_encryption.py
  Test write_dataset with ParquetFileFormat and test if an exception is thrown

test_deprecations.py
  No description

test_device.py
  No description

test_dlpack.py
  No description

test_exec_plan.py
  No description

test_extension_type.py
  Generic extension type that can store any storage type.

test_feather.py
  No description

test_flight.py
  Get the path to the test resources directory.""" if not os.environ.get("ARROW_TEST_DATA"):

test_flight_async.py
  No description

test_fs.py
  { "Version": "2012-10-17",

test_gandiva.py
  No description

test_gdb.py
  Record output until the gdb prompt displays.  Return recorded output.

test_io.py
  No description

test_ipc.py
  ARROW-15783: Verify to_pandas works for interval types. Interval types require static structures to be enabled. This test verifies

test_json.py
  :param b: bytes to be parsed :param kwargs: arguments passed on to open the json file

test_jvm.py
  No description

test_memory.py
  Temporarily allocate *nbytes* from the given *pool*.

test_misc.py
  if 1: import pyarrow as pa

test_orc.py
  Fix type of expected values (as read from JSON) according to actual ORC datatype.

test_pandas.py
  Conversion tests for Pandas metadata & indices.

test_scalars.py
  Check we can call `MapScalar.as_py` with custom field names See https://github.com/apache/arrow/issues/36809

test_schema.py
  \ foo: int32

test_sparse_tensor.py
  No description

test_strategies.py
  No description

test_substrait.py
  { "version": { "major": 9999 },

test_table.py
  [ [

test_tensor.py
  No description

test_types.py
  Conversion is using utcoffset()

test_udf.py
  Register a unary aggregate function (mean)

test_util.py
  This is the {method} method. It computes {operation}.

test_without_numpy.py
  No description

util.py
  Utility functions for testing

wsgi_examples.py
  No description

training_data_bot\.venv\Lib\site-packages\pyarrow/
--------------------------------------------------------------------------------

types.py
  Return True if value is an instance of type: {datatype}. Parameters

util.py
  A decorator that takes docstring templates, concatenates them, and finally performs string substitution on them.

training_data_bot\.venv\Lib\site-packages\pyarrow\vendored/
--------------------------------------------------------------------------------

__init__.py
  No description

docscrape.py
  Extract reference documentation from the NumPy source tree.

version.py
  Parse the given version string and return either a :class:`Version` object or a :class:`LegacyVersion` object depending on if the given version is

training_data_bot\.venv\Lib\site-packages\pydantic/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\pydantic\_internal/
--------------------------------------------------------------------------------

__init__.py
  No description

_config.py
  Internal wrapper for Config which exposes ConfigDict items as attributes.""" __slots__ = ('config_dict',)

_core_metadata.py
  A `TypedDict` for holding the metadata dict of the schema. Attributes:

_core_utils.py
  Produces the ref to be used for this type by pydantic_core's core schemas. This `args_override` argument was added for the purpose of creating valid recursive references

_dataclasses.py
  Private logic for creating pydantic dataclasses.""" from __future__ import annotations as _annotations

_decorators.py
  Logic related to validators applied to models etc. via the `@field_validator` and `@model_validator` decorators.""" from __future__ import annotations as _annotations

_decorators_v1.py
  Logic for V1 validators, e.g. `@validator` and `@root_validator`.""" from __future__ import annotations as _annotations

_discriminated_union.py
  Raised when applying a discriminated union discriminator to a schema requires a definition that is not yet defined

_docs_extraction.py
  Utilities related to attribute docstring extraction.""" from __future__ import annotations

_fields.py
  Private logic related to fields (the `Field()` function and `FieldInfo` class), and arguments to `Annotated`.""" from __future__ import annotations as _annotations

_forward_ref.py
  Defining __call__ is necessary for the `typing` module to let you use an instance of this class as the result of resolving a standard ForwardRef.

_generate_schema.py
  Convert python types to pydantic-core schema.""" from __future__ import annotations as _annotations

_generics.py
  Variant of ChainMap that allows direct updates to inner scopes. Taken from https://docs.python.org/3/library/collections.html#collections.ChainMap,

_git.py
  Git utilities, adopted from mypy's git utilities (https://github.com/python/mypy/blob/master/mypy/git.py).""" from __future__ import annotations

_import_utils.py
  No description

_internal_dataclass.py
  No description

_known_annotated_metadata.py
  Expand the annotations. Args:

_mock_val_ser.py
  Mocker for `pydantic_core.CoreSchema` which optionally attempts to rebuild the thing it's mocking when one of its methods is accessed and raises an error if that fails.

_model_construction.py
  Private logic for creating models.""" from __future__ import annotations as _annotations

_namespace_utils.py
  A global namespace. In most cases, this is a reference to the `__dict__` attribute of a module.

_repr.py
  Tools to provide pretty/human-readable display of objects.""" from __future__ import annotations as _annotations

_schema_gather.py
  Schema traversing result.""" collected_references: dict[str, DefinitionReferenceSchema | None]

_schema_generation_shared.py
  Types and utility functions used by various other internal tools.""" from __future__ import annotations

_serializers.py
  No description

_signature.py
  Extract the correct name to use for the field when generating a signature. Assuming the field has a valid alias, this will return the alias. Otherwise, it will return the field name.

_typing_extra.py
  Logic for interacting with type annotations, mostly extensions, shims and hacks to wrap Python's typing module.""" from __future__ import annotations

_utils.py
  Bucket of reusable internal utilities. This should be reduced as much as possible with functions only used in one place, moved to that place.

_validate_call.py
  Extract the name of a `ValidateCallSupportedTypes` object.""" return f'partial({func.func.__name__})' if isinstance(func, functools.partial) else func.__name__

_validators.py
  Validator functions for standard library types. Import of this module is deferred since it contains imports of many standard library modules.

training_data_bot\.venv\Lib\site-packages\pydantic/
--------------------------------------------------------------------------------

_migration.py
  Implement PEP 562 for objects that were either moved or removed on the migration to V2.

alias_generators.py
  Alias generators for converting between different capitalization conventions.""" import re

aliases.py
  Support for alias configurations.""" from __future__ import annotations

annotated_handlers.py
  Type annotations to use with `__get_pydantic_core_schema__` and `__get_pydantic_json_schema__`.""" from __future__ import annotations as _annotations

class_validators.py
  `class_validators` module is a backport module from V1.""" from ._migration import getattr_migration

color.py
  Color definitions are used as per the CSS3 [CSS Color Module Level 3](http://www.w3.org/TR/css3-color/#svg-color) specification.

config.py
  Configuration for Pydantic models.""" from __future__ import annotations as _annotations

dataclasses.py
  Provide an enhanced dataclass that performs validation.""" from __future__ import annotations as _annotations

datetime_parse.py
  The `datetime_parse` module is a backport module from V1.""" from ._migration import getattr_migration

decorator.py
  The `decorator` module is a backport module from V1.""" from ._migration import getattr_migration

training_data_bot\.venv\Lib\site-packages\pydantic\deprecated/
--------------------------------------------------------------------------------

__init__.py
  No description

class_validators.py
  Old `@validator` and `@root_validator` function validators from V1.""" from __future__ import annotations as _annotations

config.py
  This class is only retained for backwards compatibility. !!! Warning "Deprecated"

copy_internals.py
  No description

decorator.py
  Decorator to validate the arguments passed to a function.""" warnings.warn(

json.py
  Encodes a Decimal as int of there's no exponent, otherwise float. This is useful when we use ConstrainedDecimal to represent Numeric(x,0)

parse.py
  No description

tools.py
  Generate a JSON schema (as dict) for the passed model or dynamically generated one.""" warnings.warn(

training_data_bot\.venv\Lib\site-packages\pydantic/
--------------------------------------------------------------------------------

env_settings.py
  The `env_settings` module is a backport module from V1.""" from ._migration import getattr_migration

error_wrappers.py
  The `error_wrappers` module is a backport module from V1.""" from ._migration import getattr_migration

errors.py
  Pydantic-specific errors.""" from __future__ import annotations as _annotations

training_data_bot\.venv\Lib\site-packages\pydantic\experimental/
--------------------------------------------------------------------------------

__init__.py
  The "experimental" module of pydantic contains potential new features that are subject to change.""" import warnings

arguments_schema.py
  Experimental module exposing a function to generate a core schema that validates callable arguments.""" from __future__ import annotations

pipeline.py
  Experimental pipeline API functionality. Be careful with this API, it's subject to change.""" from __future__ import annotations

training_data_bot\.venv\Lib\site-packages\pydantic/
--------------------------------------------------------------------------------

fields.py
  Defining fields on models.""" from __future__ import annotations as _annotations

functional_serializers.py
  This module contains related classes and functions for serialization.""" from __future__ import annotations

functional_validators.py
  This module contains related classes and functions for validation.""" from __future__ import annotations as _annotations

generics.py
  The `generics` module is a backport module from V1.""" from ._migration import getattr_migration

json.py
  The `json` module is a backport module from V1.""" from ._migration import getattr_migration

json_schema.py
  !!! abstract "Usage Documentation" [JSON Schema](../concepts/json_schema.md)

main.py
  Logic for creating models.""" # Because `dict` is in the local namespace of the `BaseModel` class, we use `Dict` for annotations.

mypy.py
  This module includes classes and functions designed specifically for use with the mypy plugin.""" from __future__ import annotations

networks.py
  The networks module contains types for common network-related fields.""" from __future__ import annotations as _annotations

parse.py
  The `parse` module is a backport module from V1.""" from ._migration import getattr_migration

training_data_bot\.venv\Lib\site-packages\pydantic\plugin/
--------------------------------------------------------------------------------

__init__.py
  !!! abstract "Usage Documentation" [Build a Plugin](../concepts/plugins.md#build-a-plugin)

_loader.py
  Load plugins for Pydantic. Inspired by: https://github.com/pytest-dev/pluggy/blob/1.3.0/src/pluggy/_manager.py#L376-L402

_schema_validator.py
  Pluggable schema validator for pydantic.""" from __future__ import annotations

training_data_bot\.venv\Lib\site-packages\pydantic/
--------------------------------------------------------------------------------

root_model.py
  RootModel class and type definitions.""" from __future__ import annotations as _annotations

schema.py
  The `schema` module is a backport module from V1.""" from ._migration import getattr_migration

tools.py
  The `tools` module is a backport module from V1.""" from ._migration import getattr_migration

type_adapter.py
  Type adapter specification.""" from __future__ import annotations as _annotations

types.py
  The types module contains custom types used by pydantic.""" from __future__ import annotations as _annotations

typing.py
  `typing` module is a backport module from V1.""" from ._migration import getattr_migration

utils.py
  The `utils` module is a backport module from V1.""" from ._migration import getattr_migration

training_data_bot\.venv\Lib\site-packages\pydantic\v1/
--------------------------------------------------------------------------------

__init__.py
  No description

_hypothesis_plugin.py
  Register Hypothesis strategies for Pydantic custom types. This enables fully-automatic generation of test data for most Pydantic classes.

annotated_types.py
  Create a `BaseModel` based on the fields of a `TypedDict`. Since `typing.TypedDict` in Python 3.8 does not store runtime information about optional keys,

class_validators.py
  Decorate methods on the class indicating that they should be used to validate fields :param fields: which field(s) the method should be called on

color.py
  Color definitions are  used as per CSS3 specification: http://www.w3.org/TR/css3-color/#svg-color

config.py
  Get properties of FieldInfo from the `fields` property of the config class.

dataclasses.py
  The main purpose is to enhance stdlib dataclasses by adding validation A pydantic dataclass can be generated from scratch or from a stdlib one.

datetime_parse.py
  Functions to parse datetime objects. We're using regular expressions rather than time.strptime because:

decorator.py
  Decorator to validate the arguments passed to a function.

env_settings.py
  Base class for settings, allowing values to be overridden by environment variables. This is useful in production for secrets you do not wish to save in code, it plays nicely with docker(-compose),

error_wrappers.py
  No description

errors.py
  For built-in exceptions like ValueError or TypeError, we need to implement __reduce__ to override the default behaviour (instead of __getstate__/__setstate__)

fields.py
  Captures extra information about a field.

generics.py
  Instantiates a new class from a generic class `cls` and type variables `params`. :param params: Tuple of types the class . Given a generic class

json.py
  Encodes a Decimal as int of there's no exponent, otherwise float This is useful when we use ConstrainedDecimal to represent Numeric(x,0)

main.py
  Avoid calling ABC _abc_subclasscheck unless we're pretty sure. See #3829 and python/cpython#92810

mypy.py
  `version` is the mypy version string We might want to use this to print a warning if the mypy version being used is

networks.py
  Compiled multi host url regex. Additionally to `url_regex` it allows to match multiple hosts.

parse.py
  No description

schema.py
  Process a list of models and generate a single JSON Schema with all of them defined in the ``definitions`` top-level JSON key, including their sub-models.

tools.py
  Generate a JSON schema (as dict) for the passed model or dynamically generated one""" return _get_parsing_type(type_, type_name=title).schema(**schema_kwargs)

types.py
  StrictBool to allow for bools which are not type-coerced.

typing.py
  We can't directly use `typing.get_origin` since we need a fallback to support custom generic classes like `ConstrainedList`

utils.py
  Stolen approximately from django. Import a dotted module path and return the attribute/class designated by the last name in the path. Raise ImportError if the import fails.

validators.py
  Validate ``const`` fields. The value provided for a ``const`` field must be equal to the default value

version.py
  No description

training_data_bot\.venv\Lib\site-packages\pydantic/
--------------------------------------------------------------------------------

validate_call_decorator.py
  Decorator for validating function calls.""" from __future__ import annotations as _annotations

validators.py
  The `validators` module is a backport module from V1.""" from ._migration import getattr_migration

version.py
  The `version` module holds the version information for Pydantic.""" from __future__ import annotations as _annotations

warnings.py
  Pydantic-specific warnings.""" from __future__ import annotations as _annotations

training_data_bot\.venv\Lib\site-packages\pydantic_core/
--------------------------------------------------------------------------------

__init__.py
  The type of error that occurred, this is an identifier designed for programmatic use that will change rarely or never.

core_schema.py
  This module contains definitions to build schemas which `pydantic_core` can validate and serialize.

training_data_bot\.venv\Lib\site-packages\pydantic_settings/
--------------------------------------------------------------------------------

__init__.py
  No description

exceptions.py
  Base exception for settings-related errors.""" pass

main.py
  Specifies the top-level key in a YAML file from which to load the settings. If provided, the settings will be loaded from the nested section under this key.

training_data_bot\.venv\Lib\site-packages\pydantic_settings\sources/
--------------------------------------------------------------------------------

__init__.py
  Package for handling configuration sources in pydantic-settings.""" from .base import (

base.py
  Base classes and core functionality for pydantic-settings sources.""" from __future__ import annotations as _annotations

training_data_bot\.venv\Lib\site-packages\pydantic_settings\sources\providers/
--------------------------------------------------------------------------------

__init__.py
  Package containing individual source implementations.""" from .aws import AWSSecretsManagerSettingsSource

aws.py
  No description

azure.py
  Azure Key Vault settings source.""" from __future__ import annotations as _annotations

cli.py
  Command-line interface settings source.""" from __future__ import annotations as _annotations

dotenv.py
  Dotenv file settings source.""" from __future__ import annotations as _annotations

env.py
  Source class for loading settings values from environment variables.

gcp.py
  No description

json.py
  JSON file settings source.""" from __future__ import annotations as _annotations

pyproject.py
  Pyproject TOML file settings source.""" from __future__ import annotations as _annotations

secrets.py
  Secrets file settings source.""" from __future__ import annotations as _annotations

toml.py
  TOML file settings source.""" from __future__ import annotations as _annotations

yaml.py
  YAML file settings source.""" from __future__ import annotations as _annotations

training_data_bot\.venv\Lib\site-packages\pydantic_settings\sources/
--------------------------------------------------------------------------------

types.py
  Type definitions for pydantic-settings sources.""" from __future__ import annotations as _annotations

utils.py
  Utility functions for pydantic-settings sources.""" from __future__ import annotations as _annotations

training_data_bot\.venv\Lib\site-packages\pydantic_settings/
--------------------------------------------------------------------------------

utils.py
  Find out what sort of thing a path is.

version.py
  No description

training_data_bot\.venv\Lib\site-packages\pygments/
--------------------------------------------------------------------------------

__init__.py
  Pygments ~~~~~~~~

__main__.py
  pygments.__main__ ~~~~~~~~~~~~~~~~~

cmdline.py
  pygments.cmdline ~~~~~~~~~~~~~~~~

console.py
  pygments.console ~~~~~~~~~~~~~~~~

filter.py
  pygments.filter ~~~~~~~~~~~~~~~

training_data_bot\.venv\Lib\site-packages\pygments\filters/
--------------------------------------------------------------------------------

__init__.py
  pygments.filters ~~~~~~~~~~~~~~~~

training_data_bot\.venv\Lib\site-packages\pygments/
--------------------------------------------------------------------------------

formatter.py
  pygments.formatter ~~~~~~~~~~~~~~~~~~

training_data_bot\.venv\Lib\site-packages\pygments\formatters/
--------------------------------------------------------------------------------

__init__.py
  pygments.formatters ~~~~~~~~~~~~~~~~~~~

_mapping.py
  No description

bbcode.py
  pygments.formatters.bbcode ~~~~~~~~~~~~~~~~~~~~~~~~~~

groff.py
  pygments.formatters.groff ~~~~~~~~~~~~~~~~~~~~~~~~~

html.py
  pygments.formatters.html ~~~~~~~~~~~~~~~~~~~~~~~~

img.py
  pygments.formatters.img ~~~~~~~~~~~~~~~~~~~~~~~

irc.py
  pygments.formatters.irc ~~~~~~~~~~~~~~~~~~~~~~~

latex.py
  pygments.formatters.latex ~~~~~~~~~~~~~~~~~~~~~~~~~

other.py
  pygments.formatters.other ~~~~~~~~~~~~~~~~~~~~~~~~~

pangomarkup.py
  pygments.formatters.pangomarkup ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

rtf.py
  pygments.formatters.rtf ~~~~~~~~~~~~~~~~~~~~~~~

svg.py
  pygments.formatters.svg ~~~~~~~~~~~~~~~~~~~~~~~

terminal.py
  pygments.formatters.terminal ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

terminal256.py
  pygments.formatters.terminal256 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

training_data_bot\.venv\Lib\site-packages\pygments/
--------------------------------------------------------------------------------

lexer.py
  pygments.lexer ~~~~~~~~~~~~~~

training_data_bot\.venv\Lib\site-packages\pygments\lexers/
--------------------------------------------------------------------------------

__init__.py
  pygments.lexers ~~~~~~~~~~~~~~~

_ada_builtins.py
  pygments.lexers._ada_builtins ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

_asy_builtins.py
  pygments.lexers._asy_builtins ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

_cl_builtins.py
  pygments.lexers._cl_builtins ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

_cocoa_builtins.py
  pygments.lexers._cocoa_builtins ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

_csound_builtins.py
  pygments.lexers._csound_builtins ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

_css_builtins.py
  pygments.lexers._css_builtins ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

_googlesql_builtins.py
  pygments.lexers._googlesql_builtins ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

_julia_builtins.py
  pygments.lexers._julia_builtins ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

_lasso_builtins.py
  pygments.lexers._lasso_builtins ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

_lilypond_builtins.py
  pygments.lexers._lilypond_builtins ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

_lua_builtins.py
  pygments.lexers._lua_builtins ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

_luau_builtins.py
  pygments.lexers._luau_builtins ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

_mapping.py
  No description

_mql_builtins.py
  pygments.lexers._mql_builtins ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

_mysql_builtins.py
  pygments.lexers._mysql_builtins ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

_openedge_builtins.py
  pygments.lexers._openedge_builtins ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

_php_builtins.py
  pygments.lexers._php_builtins ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

_postgres_builtins.py
  pygments.lexers._postgres_builtins ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

_qlik_builtins.py
  pygments.lexers._qlik_builtins ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

_scheme_builtins.py
  pygments.lexers._scheme_builtins ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

_scilab_builtins.py
  pygments.lexers._scilab_builtins ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

_sourcemod_builtins.py
  pygments.lexers._sourcemod_builtins ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

_sql_builtins.py
  pygments.lexers._sql_builtins ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

_stan_builtins.py
  pygments.lexers._stan_builtins ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

_stata_builtins.py
  pygments.lexers._stata_builtins ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

_tsql_builtins.py
  pygments.lexers._tsql_builtins ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

_usd_builtins.py
  pygments.lexers._usd_builtins ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

_vbscript_builtins.py
  pygments.lexers._vbscript_builtins ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

_vim_builtins.py
  pygments.lexers._vim_builtins ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

actionscript.py
  pygments.lexers.actionscript ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

ada.py
  pygments.lexers.ada ~~~~~~~~~~~~~~~~~~~

agile.py
  pygments.lexers.agile ~~~~~~~~~~~~~~~~~~~~~

algebra.py
  pygments.lexers.algebra ~~~~~~~~~~~~~~~~~~~~~~~

ambient.py
  pygments.lexers.ambient ~~~~~~~~~~~~~~~~~~~~~~~

amdgpu.py
  pygments.lexers.amdgpu ~~~~~~~~~~~~~~~~~~~~~~

ampl.py
  pygments.lexers.ampl ~~~~~~~~~~~~~~~~~~~~

apdlexer.py
  pygments.lexers.apdlexer ~~~~~~~~~~~~~~~~~~~~~~~~

apl.py
  pygments.lexers.apl ~~~~~~~~~~~~~~~~~~~

archetype.py
  pygments.lexers.archetype ~~~~~~~~~~~~~~~~~~~~~~~~~

arrow.py
  pygments.lexers.arrow ~~~~~~~~~~~~~~~~~~~~~

arturo.py
  pygments.lexers.arturo ~~~~~~~~~~~~~~~~~~~~~~

asc.py
  pygments.lexers.asc ~~~~~~~~~~~~~~~~~~~

asm.py
  pygments.lexers.asm ~~~~~~~~~~~~~~~~~~~

asn1.py
  pygments.lexers.asn1 ~~~~~~~~~~~~~~~~~~~~

automation.py
  pygments.lexers.automation ~~~~~~~~~~~~~~~~~~~~~~~~~~

bare.py
  pygments.lexers.bare ~~~~~~~~~~~~~~~~~~~~

basic.py
  pygments.lexers.basic ~~~~~~~~~~~~~~~~~~~~~

bdd.py
  pygments.lexers.bdd ~~~~~~~~~~~~~~~~~~~

berry.py
  pygments.lexers.berry ~~~~~~~~~~~~~~~~~~~~~

bibtex.py
  pygments.lexers.bibtex ~~~~~~~~~~~~~~~~~~~~~~

blueprint.py
  pygments.lexers.blueprint ~~~~~~~~~~~~~~~~~~~~~~~~~

boa.py
  pygments.lexers.boa ~~~~~~~~~~~~~~~~~~~

bqn.py
  pygments.lexers.bqn ~~~~~~~~~~~~~~~~~~~

business.py
  pygments.lexers.business ~~~~~~~~~~~~~~~~~~~~~~~~

c_cpp.py
  pygments.lexers.c_cpp ~~~~~~~~~~~~~~~~~~~~~

c_like.py
  pygments.lexers.c_like ~~~~~~~~~~~~~~~~~~~~~~

capnproto.py
  pygments.lexers.capnproto ~~~~~~~~~~~~~~~~~~~~~~~~~

carbon.py
  pygments.lexers.carbon ~~~~~~~~~~~~~~~~~~~~~~

cddl.py
  pygments.lexers.cddl ~~~~~~~~~~~~~~~~~~~~

chapel.py
  pygments.lexers.chapel ~~~~~~~~~~~~~~~~~~~~~~

clean.py
  pygments.lexers.clean ~~~~~~~~~~~~~~~~~~~~~

codeql.py
  pygments.lexers.codeql ~~~~~~~~~~~~~~~~~~~~~~

comal.py
  pygments.lexers.comal ~~~~~~~~~~~~~~~~~~~~~

compiled.py
  pygments.lexers.compiled ~~~~~~~~~~~~~~~~~~~~~~~~

configs.py
  pygments.lexers.configs ~~~~~~~~~~~~~~~~~~~~~~~

console.py
  pygments.lexers.console ~~~~~~~~~~~~~~~~~~~~~~~

cplint.py
  pygments.lexers.cplint ~~~~~~~~~~~~~~~~~~~~~~

crystal.py
  pygments.lexers.crystal ~~~~~~~~~~~~~~~~~~~~~~~

csound.py
  pygments.lexers.csound ~~~~~~~~~~~~~~~~~~~~~~

css.py
  pygments.lexers.css ~~~~~~~~~~~~~~~~~~~

d.py
  pygments.lexers.d ~~~~~~~~~~~~~~~~~

dalvik.py
  pygments.lexers.dalvik ~~~~~~~~~~~~~~~~~~~~~~

data.py
  pygments.lexers.data ~~~~~~~~~~~~~~~~~~~~

dax.py
  pygments.lexers.dax ~~~~~~~~~~~~~~~~~~~

devicetree.py
  pygments.lexers.devicetree ~~~~~~~~~~~~~~~~~~~~~~~~~~

diff.py
  pygments.lexers.diff ~~~~~~~~~~~~~~~~~~~~

dns.py
  pygments.lexers.dns ~~~~~~~~~~~~~~~~~~~

dotnet.py
  pygments.lexers.dotnet ~~~~~~~~~~~~~~~~~~~~~~

dsls.py
  pygments.lexers.dsls ~~~~~~~~~~~~~~~~~~~~

dylan.py
  pygments.lexers.dylan ~~~~~~~~~~~~~~~~~~~~~

ecl.py
  pygments.lexers.ecl ~~~~~~~~~~~~~~~~~~~

eiffel.py
  pygments.lexers.eiffel ~~~~~~~~~~~~~~~~~~~~~~

elm.py
  pygments.lexers.elm ~~~~~~~~~~~~~~~~~~~

elpi.py
  pygments.lexers.elpi ~~~~~~~~~~~~~~~~~~~~

email.py
  pygments.lexers.email ~~~~~~~~~~~~~~~~~~~~~

erlang.py
  pygments.lexers.erlang ~~~~~~~~~~~~~~~~~~~~~~

esoteric.py
  pygments.lexers.esoteric ~~~~~~~~~~~~~~~~~~~~~~~~

ezhil.py
  pygments.lexers.ezhil ~~~~~~~~~~~~~~~~~~~~~

factor.py
  pygments.lexers.factor ~~~~~~~~~~~~~~~~~~~~~~

fantom.py
  pygments.lexers.fantom ~~~~~~~~~~~~~~~~~~~~~~

felix.py
  pygments.lexers.felix ~~~~~~~~~~~~~~~~~~~~~

fift.py
  pygments.lexers.fift ~~~~~~~~~~~~~~~~~~~~

floscript.py
  pygments.lexers.floscript ~~~~~~~~~~~~~~~~~~~~~~~~~

forth.py
  pygments.lexers.forth ~~~~~~~~~~~~~~~~~~~~~

fortran.py
  pygments.lexers.fortran ~~~~~~~~~~~~~~~~~~~~~~~

foxpro.py
  pygments.lexers.foxpro ~~~~~~~~~~~~~~~~~~~~~~

freefem.py
  pygments.lexers.freefem ~~~~~~~~~~~~~~~~~~~~~~~

func.py
  pygments.lexers.func ~~~~~~~~~~~~~~~~~~~~

functional.py
  pygments.lexers.functional ~~~~~~~~~~~~~~~~~~~~~~~~~~

futhark.py
  pygments.lexers.futhark ~~~~~~~~~~~~~~~~~~~~~~~

gcodelexer.py
  pygments.lexers.gcodelexer ~~~~~~~~~~~~~~~~~~~~~~~~~~

gdscript.py
  pygments.lexers.gdscript ~~~~~~~~~~~~~~~~~~~~~~~~

gleam.py
  pygments.lexers.gleam ~~~~~~~~~~~~~~~~~~~~~

go.py
  pygments.lexers.go ~~~~~~~~~~~~~~~~~~

grammar_notation.py
  pygments.lexers.grammar_notation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

graph.py
  pygments.lexers.graph ~~~~~~~~~~~~~~~~~~~~~

graphics.py
  pygments.lexers.graphics ~~~~~~~~~~~~~~~~~~~~~~~~

graphql.py
  pygments.lexers.graphql ~~~~~~~~~~~~~~~~~~~~~~~

graphviz.py
  pygments.lexers.graphviz ~~~~~~~~~~~~~~~~~~~~~~~~

gsql.py
  pygments.lexers.gsql ~~~~~~~~~~~~~~~~~~~~

hare.py
  pygments.lexers.hare ~~~~~~~~~~~~~~~~~~~~

haskell.py
  pygments.lexers.haskell ~~~~~~~~~~~~~~~~~~~~~~~

haxe.py
  pygments.lexers.haxe ~~~~~~~~~~~~~~~~~~~~

hdl.py
  pygments.lexers.hdl ~~~~~~~~~~~~~~~~~~~

hexdump.py
  pygments.lexers.hexdump ~~~~~~~~~~~~~~~~~~~~~~~

html.py
  pygments.lexers.html ~~~~~~~~~~~~~~~~~~~~

idl.py
  pygments.lexers.idl ~~~~~~~~~~~~~~~~~~~

igor.py
  pygments.lexers.igor ~~~~~~~~~~~~~~~~~~~~

inferno.py
  pygments.lexers.inferno ~~~~~~~~~~~~~~~~~~~~~~~

installers.py
  pygments.lexers.installers ~~~~~~~~~~~~~~~~~~~~~~~~~~

int_fiction.py
  pygments.lexers.int_fiction ~~~~~~~~~~~~~~~~~~~~~~~~~~~

iolang.py
  pygments.lexers.iolang ~~~~~~~~~~~~~~~~~~~~~~

j.py
  pygments.lexers.j ~~~~~~~~~~~~~~~~~

javascript.py
  pygments.lexers.javascript ~~~~~~~~~~~~~~~~~~~~~~~~~~

jmespath.py
  pygments.lexers.jmespath ~~~~~~~~~~~~~~~~~~~~~~~~

jslt.py
  pygments.lexers.jslt ~~~~~~~~~~~~~~~~~~~~

json5.py
  pygments.lexers.json5 ~~~~~~~~~~~~~~~~~~~~~

jsonnet.py
  pygments.lexers.jsonnet ~~~~~~~~~~~~~~~~~~~~~~~

jsx.py
  pygments.lexers.jsx ~~~~~~~~~~~~~~~~~~~

julia.py
  pygments.lexers.julia ~~~~~~~~~~~~~~~~~~~~~

jvm.py
  pygments.lexers.jvm ~~~~~~~~~~~~~~~~~~~

kuin.py
  pygments.lexers.kuin ~~~~~~~~~~~~~~~~~~~~

kusto.py
  pygments.lexers.kusto ~~~~~~~~~~~~~~~~~~~~~

ldap.py
  pygments.lexers.ldap ~~~~~~~~~~~~~~~~~~~~

lean.py
  pygments.lexers.lean ~~~~~~~~~~~~~~~~~~~~

lilypond.py
  pygments.lexers.lilypond ~~~~~~~~~~~~~~~~~~~~~~~~

lisp.py
  pygments.lexers.lisp ~~~~~~~~~~~~~~~~~~~~

macaulay2.py
  pygments.lexers.macaulay2 ~~~~~~~~~~~~~~~~~~~~~~~~~

make.py
  pygments.lexers.make ~~~~~~~~~~~~~~~~~~~~

maple.py
  pygments.lexers.maple ~~~~~~~~~~~~~~~~~~~~~

markup.py
  pygments.lexers.markup ~~~~~~~~~~~~~~~~~~~~~~

math.py
  pygments.lexers.math ~~~~~~~~~~~~~~~~~~~~

matlab.py
  pygments.lexers.matlab ~~~~~~~~~~~~~~~~~~~~~~

maxima.py
  pygments.lexers.maxima ~~~~~~~~~~~~~~~~~~~~~~

meson.py
  pygments.lexers.meson ~~~~~~~~~~~~~~~~~~~~~

mime.py
  pygments.lexers.mime ~~~~~~~~~~~~~~~~~~~~

minecraft.py
  pygments.lexers.minecraft ~~~~~~~~~~~~~~~~~~~~~~~~~

mips.py
  pygments.lexers.mips ~~~~~~~~~~~~~~~~~~~~

ml.py
  pygments.lexers.ml ~~~~~~~~~~~~~~~~~~

modeling.py
  pygments.lexers.modeling ~~~~~~~~~~~~~~~~~~~~~~~~

modula2.py
  pygments.lexers.modula2 ~~~~~~~~~~~~~~~~~~~~~~~

mojo.py
  pygments.lexers.mojo ~~~~~~~~~~~~~~~~~~~~

monte.py
  pygments.lexers.monte ~~~~~~~~~~~~~~~~~~~~~

mosel.py
  pygments.lexers.mosel ~~~~~~~~~~~~~~~~~~~~~

ncl.py
  pygments.lexers.ncl ~~~~~~~~~~~~~~~~~~~

nimrod.py
  pygments.lexers.nimrod ~~~~~~~~~~~~~~~~~~~~~~

nit.py
  pygments.lexers.nit ~~~~~~~~~~~~~~~~~~~

nix.py
  pygments.lexers.nix ~~~~~~~~~~~~~~~~~~~

numbair.py
  pygments.lexers.numbair ~~~~~~~~~~~~~~~~~~~~~~~

oberon.py
  pygments.lexers.oberon ~~~~~~~~~~~~~~~~~~~~~~

objective.py
  pygments.lexers.objective ~~~~~~~~~~~~~~~~~~~~~~~~~

ooc.py
  pygments.lexers.ooc ~~~~~~~~~~~~~~~~~~~

openscad.py
  pygments.lexers.openscad ~~~~~~~~~~~~~~~~~~~~~~~~

other.py
  pygments.lexers.other ~~~~~~~~~~~~~~~~~~~~~

parasail.py
  pygments.lexers.parasail ~~~~~~~~~~~~~~~~~~~~~~~~

parsers.py
  pygments.lexers.parsers ~~~~~~~~~~~~~~~~~~~~~~~

pascal.py
  pygments.lexers.pascal ~~~~~~~~~~~~~~~~~~~~~~

pawn.py
  pygments.lexers.pawn ~~~~~~~~~~~~~~~~~~~~

pddl.py
  pygments.lexers.pddl ~~~~~~~~~~~~~~~~~~~~

perl.py
  pygments.lexers.perl ~~~~~~~~~~~~~~~~~~~~

phix.py
  pygments.lexers.phix ~~~~~~~~~~~~~~~~~~~~

php.py
  pygments.lexers.php ~~~~~~~~~~~~~~~~~~~

pointless.py
  pygments.lexers.pointless ~~~~~~~~~~~~~~~~~~~~~~~~~

pony.py
  pygments.lexers.pony ~~~~~~~~~~~~~~~~~~~~

praat.py
  pygments.lexers.praat ~~~~~~~~~~~~~~~~~~~~~

procfile.py
  pygments.lexers.procfile ~~~~~~~~~~~~~~~~~~~~~~~~

prolog.py
  pygments.lexers.prolog ~~~~~~~~~~~~~~~~~~~~~~

promql.py
  pygments.lexers.promql ~~~~~~~~~~~~~~~~~~~~~~

prql.py
  pygments.lexers.prql ~~~~~~~~~~~~~~~~~~~~

ptx.py
  pygments.lexers.ptx ~~~~~~~~~~~~~~~~~~~

python.py
  pygments.lexers.python ~~~~~~~~~~~~~~~~~~~~~~

q.py
  pygments.lexers.q ~~~~~~~~~~~~~~~~~

qlik.py
  pygments.lexers.qlik ~~~~~~~~~~~~~~~~~~~~

qvt.py
  pygments.lexers.qvt ~~~~~~~~~~~~~~~~~~~

r.py
  pygments.lexers.r ~~~~~~~~~~~~~~~~~

rdf.py
  pygments.lexers.rdf ~~~~~~~~~~~~~~~~~~~

rebol.py
  pygments.lexers.rebol ~~~~~~~~~~~~~~~~~~~~~

rego.py
  pygments.lexers.rego ~~~~~~~~~~~~~~~~~~~~

resource.py
  pygments.lexers.resource ~~~~~~~~~~~~~~~~~~~~~~~~

ride.py
  pygments.lexers.ride ~~~~~~~~~~~~~~~~~~~~

rita.py
  pygments.lexers.rita ~~~~~~~~~~~~~~~~~~~~

rnc.py
  pygments.lexers.rnc ~~~~~~~~~~~~~~~~~~~

roboconf.py
  pygments.lexers.roboconf ~~~~~~~~~~~~~~~~~~~~~~~~

robotframework.py
  pygments.lexers.robotframework ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

ruby.py
  pygments.lexers.ruby ~~~~~~~~~~~~~~~~~~~~

rust.py
  pygments.lexers.rust ~~~~~~~~~~~~~~~~~~~~

sas.py
  pygments.lexers.sas ~~~~~~~~~~~~~~~~~~~

savi.py
  pygments.lexers.savi ~~~~~~~~~~~~~~~~~~~~

scdoc.py
  pygments.lexers.scdoc ~~~~~~~~~~~~~~~~~~~~~

scripting.py
  pygments.lexers.scripting ~~~~~~~~~~~~~~~~~~~~~~~~~

sgf.py
  pygments.lexers.sgf ~~~~~~~~~~~~~~~~~~~

shell.py
  pygments.lexers.shell ~~~~~~~~~~~~~~~~~~~~~

sieve.py
  pygments.lexers.sieve ~~~~~~~~~~~~~~~~~~~~~

slash.py
  pygments.lexers.slash ~~~~~~~~~~~~~~~~~~~~~

smalltalk.py
  pygments.lexers.smalltalk ~~~~~~~~~~~~~~~~~~~~~~~~~

smithy.py
  pygments.lexers.smithy ~~~~~~~~~~~~~~~~~~~~~~

smv.py
  pygments.lexers.smv ~~~~~~~~~~~~~~~~~~~

snobol.py
  pygments.lexers.snobol ~~~~~~~~~~~~~~~~~~~~~~

solidity.py
  pygments.lexers.solidity ~~~~~~~~~~~~~~~~~~~~~~~~

soong.py
  pygments.lexers.soong ~~~~~~~~~~~~~~~~~~~~~

sophia.py
  pygments.lexers.sophia ~~~~~~~~~~~~~~~~~~~~~~

special.py
  pygments.lexers.special ~~~~~~~~~~~~~~~~~~~~~~~

spice.py
  pygments.lexers.spice ~~~~~~~~~~~~~~~~~~~~~

sql.py
  pygments.lexers.sql ~~~~~~~~~~~~~~~~~~~

srcinfo.py
  pygments.lexers.srcinfo ~~~~~~~~~~~~~~~~~~~~~~~

stata.py
  pygments.lexers.stata ~~~~~~~~~~~~~~~~~~~~~

supercollider.py
  pygments.lexers.supercollider ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

tablegen.py
  pygments.lexers.tablegen ~~~~~~~~~~~~~~~~~~~~~~~~

tact.py
  pygments.lexers.tact ~~~~~~~~~~~~~~~~~~~~

tal.py
  pygments.lexers.tal ~~~~~~~~~~~~~~~~~~~

tcl.py
  pygments.lexers.tcl ~~~~~~~~~~~~~~~~~~~

teal.py
  pygments.lexers.teal ~~~~~~~~~~~~~~~~~~~~

templates.py
  pygments.lexers.templates ~~~~~~~~~~~~~~~~~~~~~~~~~

teraterm.py
  pygments.lexers.teraterm ~~~~~~~~~~~~~~~~~~~~~~~~

testing.py
  pygments.lexers.testing ~~~~~~~~~~~~~~~~~~~~~~~

text.py
  pygments.lexers.text ~~~~~~~~~~~~~~~~~~~~

textedit.py
  pygments.lexers.textedit ~~~~~~~~~~~~~~~~~~~~~~~~

textfmts.py
  pygments.lexers.textfmts ~~~~~~~~~~~~~~~~~~~~~~~~

theorem.py
  pygments.lexers.theorem ~~~~~~~~~~~~~~~~~~~~~~~

thingsdb.py
  pygments.lexers.thingsdb ~~~~~~~~~~~~~~~~~~~~~~~~

tlb.py
  pygments.lexers.tlb ~~~~~~~~~~~~~~~~~~~

tls.py
  pygments.lexers.tls ~~~~~~~~~~~~~~~~~~~

tnt.py
  pygments.lexers.tnt ~~~~~~~~~~~~~~~~~~~

trafficscript.py
  pygments.lexers.trafficscript ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

typoscript.py
  pygments.lexers.typoscript ~~~~~~~~~~~~~~~~~~~~~~~~~~

typst.py
  pygments.lexers.typst ~~~~~~~~~~~~~~~~~~~~~

ul4.py
  pygments.lexers.ul4 ~~~~~~~~~~~~~~~~~~~

unicon.py
  pygments.lexers.unicon ~~~~~~~~~~~~~~~~~~~~~~

urbi.py
  pygments.lexers.urbi ~~~~~~~~~~~~~~~~~~~~

usd.py
  pygments.lexers.usd ~~~~~~~~~~~~~~~~~~~

varnish.py
  pygments.lexers.varnish ~~~~~~~~~~~~~~~~~~~~~~~

verification.py
  pygments.lexers.verification ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

verifpal.py
  pygments.lexers.verifpal ~~~~~~~~~~~~~~~~~~~~~~~~

vip.py
  pygments.lexers.vip ~~~~~~~~~~~~~~~~~~~

vyper.py
  pygments.lexers.vyper ~~~~~~~~~~~~~~~~~~~~~

web.py
  pygments.lexers.web ~~~~~~~~~~~~~~~~~~~

webassembly.py
  pygments.lexers.webassembly ~~~~~~~~~~~~~~~~~~~~~~~~~~~

webidl.py
  pygments.lexers.webidl ~~~~~~~~~~~~~~~~~~~~~~

webmisc.py
  pygments.lexers.webmisc ~~~~~~~~~~~~~~~~~~~~~~~

wgsl.py
  pygments.lexers.wgsl ~~~~~~~~~~~~~~~~~~~~

whiley.py
  pygments.lexers.whiley ~~~~~~~~~~~~~~~~~~~~~~

wowtoc.py
  pygments.lexers.wowtoc ~~~~~~~~~~~~~~~~~~~~~~

wren.py
  pygments.lexers.wren ~~~~~~~~~~~~~~~~~~~~

x10.py
  pygments.lexers.x10 ~~~~~~~~~~~~~~~~~~~

xorg.py
  pygments.lexers.xorg ~~~~~~~~~~~~~~~~~~~~

yang.py
  pygments.lexers.yang ~~~~~~~~~~~~~~~~~~~~

yara.py
  pygments.lexers.yara ~~~~~~~~~~~~~~~~~~~~

zig.py
  pygments.lexers.zig ~~~~~~~~~~~~~~~~~~~

training_data_bot\.venv\Lib\site-packages\pygments/
--------------------------------------------------------------------------------

modeline.py
  pygments.modeline ~~~~~~~~~~~~~~~~~

plugin.py
  pygments.plugin ~~~~~~~~~~~~~~~

regexopt.py
  pygments.regexopt ~~~~~~~~~~~~~~~~~

scanner.py
  pygments.scanner ~~~~~~~~~~~~~~~~

sphinxext.py
  pygments.sphinxext ~~~~~~~~~~~~~~~~~~

style.py
  pygments.style ~~~~~~~~~~~~~~

training_data_bot\.venv\Lib\site-packages\pygments\styles/
--------------------------------------------------------------------------------

__init__.py
  pygments.styles ~~~~~~~~~~~~~~~

_mapping.py
  No description

abap.py
  pygments.styles.abap ~~~~~~~~~~~~~~~~~~~~

algol.py
  pygments.styles.algol ~~~~~~~~~~~~~~~~~~~~~

algol_nu.py
  pygments.styles.algol_nu ~~~~~~~~~~~~~~~~~~~~~~~~

arduino.py
  pygments.styles.arduino ~~~~~~~~~~~~~~~~~~~~~~~

autumn.py
  pygments.styles.autumn ~~~~~~~~~~~~~~~~~~~~~~

borland.py
  pygments.styles.borland ~~~~~~~~~~~~~~~~~~~~~~~

bw.py
  pygments.styles.bw ~~~~~~~~~~~~~~~~~~

coffee.py
  pygments.styles.coffee ~~~~~~~~~~~~~~~~~~~~~~

colorful.py
  pygments.styles.colorful ~~~~~~~~~~~~~~~~~~~~~~~~

default.py
  pygments.styles.default ~~~~~~~~~~~~~~~~~~~~~~~

dracula.py
  pygments.styles.dracula ~~~~~~~~~~~~~~~~~~~~~~~

emacs.py
  pygments.styles.emacs ~~~~~~~~~~~~~~~~~~~~~

friendly.py
  pygments.styles.friendly ~~~~~~~~~~~~~~~~~~~~~~~~

friendly_grayscale.py
  pygments.styles.friendly_grayscale ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

fruity.py
  pygments.styles.fruity ~~~~~~~~~~~~~~~~~~~~~~

gh_dark.py
  pygments.styles.gh_dark ~~~~~~~~~~~~~~~~~~~~~~~

gruvbox.py
  pygments.styles.gruvbox ~~~~~~~~~~~~~~~~~~~~~~~

igor.py
  pygments.styles.igor ~~~~~~~~~~~~~~~~~~~~

inkpot.py
  pygments.styles.inkpot ~~~~~~~~~~~~~~~~~~~~~~

lightbulb.py
  pygments.styles.lightbulb ~~~~~~~~~~~~~~~~~~~~~~~~~

lilypond.py
  pygments.styles.lilypond ~~~~~~~~~~~~~~~~~~~~~~~~

lovelace.py
  pygments.styles.lovelace ~~~~~~~~~~~~~~~~~~~~~~~~

manni.py
  pygments.styles.manni ~~~~~~~~~~~~~~~~~~~~~

material.py
  pygments.styles.material ~~~~~~~~~~~~~~~~~~~~~~~~

monokai.py
  pygments.styles.monokai ~~~~~~~~~~~~~~~~~~~~~~~

murphy.py
  pygments.styles.murphy ~~~~~~~~~~~~~~~~~~~~~~

native.py
  pygments.styles.native ~~~~~~~~~~~~~~~~~~~~~~

nord.py
  pygments.styles.nord ~~~~~~~~~~~~~~~~~~~~

onedark.py
  pygments.styles.onedark ~~~~~~~~~~~~~~~~~~~~~~~

paraiso_dark.py
  pygments.styles.paraiso_dark ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

paraiso_light.py
  pygments.styles.paraiso_light ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

pastie.py
  pygments.styles.pastie ~~~~~~~~~~~~~~~~~~~~~~

perldoc.py
  pygments.styles.perldoc ~~~~~~~~~~~~~~~~~~~~~~~

rainbow_dash.py
  pygments.styles.rainbow_dash ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

rrt.py
  pygments.styles.rrt ~~~~~~~~~~~~~~~~~~~

sas.py
  pygments.styles.sas ~~~~~~~~~~~~~~~~~~~

solarized.py
  pygments.styles.solarized ~~~~~~~~~~~~~~~~~~~~~~~~~

staroffice.py
  pygments.styles.staroffice ~~~~~~~~~~~~~~~~~~~~~~~~~~

stata_dark.py
  pygments.styles.stata_dark ~~~~~~~~~~~~~~~~~~~~~~~~~~

stata_light.py
  pygments.styles.stata_light ~~~~~~~~~~~~~~~~~~~~~~~~~~~

tango.py
  pygments.styles.tango ~~~~~~~~~~~~~~~~~~~~~

trac.py
  pygments.styles.trac ~~~~~~~~~~~~~~~~~~~~

vim.py
  pygments.styles.vim ~~~~~~~~~~~~~~~~~~~

vs.py
  pygments.styles.vs ~~~~~~~~~~~~~~~~~~

xcode.py
  pygments.styles.xcode ~~~~~~~~~~~~~~~~~~~~~

zenburn.py
  pygments.styles.zenburn ~~~~~~~~~~~~~~~~~~~~~~~

training_data_bot\.venv\Lib\site-packages\pygments/
--------------------------------------------------------------------------------

token.py
  pygments.token ~~~~~~~~~~~~~~

unistring.py
  pygments.unistring ~~~~~~~~~~~~~~~~~~

util.py
  pygments.util ~~~~~~~~~~~~~

training_data_bot\.venv\Lib\site-packages\pymupdf/
--------------------------------------------------------------------------------

__init__.py
  annotation appearance bbox""" CheckParent(self)

__main__.py
  Return image for a given XREF.""" x = item[0]  # xref of PDF image

_apply_pages.py
  No description

_build.py
  No description

_wxcolors.py
  No description

extra.py
  Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass""" def wrapper(cls):

mupdf.py
  Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass""" def wrapper(cls):

pymupdf.py
  No description

table.py
  Copyright (C) 2023 Artifex Software, Inc. This file is part of PyMuPDF.

utils.py
  This is a collection of functions to extend PyMupdf.

training_data_bot\.venv\Lib\site-packages\pytest/
--------------------------------------------------------------------------------

__init__.py
  pytest: unit and functional testing with Python.""" from __future__ import annotations

__main__.py
  The pytest entry point.""" from __future__ import annotations

training_data_bot\.venv\Lib\site-packages\pytest_asyncio/
--------------------------------------------------------------------------------

__init__.py
  The main point for importing pytest-asyncio items.""" from __future__ import annotations

plugin.py
  pytest-asyncio implementation.""" from __future__ import annotations

training_data_bot\.venv\Lib\site-packages\pytokens/
--------------------------------------------------------------------------------

__init__.py
  pytokens - A Fast, spec compliant Python 3.12+ tokenizer that runs on older Pythons.""" from __future__ import annotations

__main__.py
  Support executing the CLI by doing `python -m pytokens`.""" from __future__ import annotations

cli.py
  CLI interface for pytokens.""" from __future__ import annotations

training_data_bot\.venv\Lib\site-packages\pytz/
--------------------------------------------------------------------------------

__init__.py
  >>> ascii('Hello') 'Hello'

exceptions.py
  No description

lazy.py
  Dictionary populated on first use.""" data = None

reference.py
  Fixed offset in minutes east from UTC.""" def __init__(self, offset, name):

tzfile.py
  Cast a string or byte string to an ASCII byte string.""" return s.encode('ASCII')

tzinfo.py
  Factory function for unpickling pytz tzinfo instances. This is shared for both StaticTzInfo and DstTzInfo instances, because

training_data_bot\.venv\Lib\site-packages\regex/
--------------------------------------------------------------------------------

__init__.py
  No description

_regex_core.py
  Exception raised for invalid regular expressions. Attributes:

regex.py
  Support for regular expressions (RE). This module provides regular expression matching operations similar to those

test_regex.py
  (?x)w# comment 1 x y

training_data_bot\.venv\Lib\site-packages\requests/
--------------------------------------------------------------------------------

__init__.py
  Requests HTTP Library ~~~~~~~~~~~~~~~~~~~~~

__version__.py
  No description

_internal_utils.py
  requests._internal_utils ~~~~~~~~~~~~~~

adapters.py
  requests.adapters ~~~~~~~~~~~~~~~~~

api.py
  requests.api ~~~~~~~~~~~~

auth.py
  requests.auth ~~~~~~~~~~~~~

certs.py
  requests.certs ~~~~~~~~~~~~~~

compat.py
  requests.compat ~~~~~~~~~~~~~~~

cookies.py
  requests.cookies ~~~~~~~~~~~~~~~~

exceptions.py
  requests.exceptions ~~~~~~~~~~~~~~~~~~~

help.py
  Module containing bug report helper(s).""" import json

hooks.py
  requests.hooks ~~~~~~~~~~~~~~

models.py
  requests.models ~~~~~~~~~~~~~~~

packages.py
  No description

sessions.py
  requests.sessions ~~~~~~~~~~~~~~~~~

status_codes.py
  The ``codes`` object defines a mapping from common names for HTTP statuses to their numerical codes, accessible either as attributes or as dictionary

structures.py
  requests.structures ~~~~~~~~~~~~~~~~~~~

utils.py
  requests.utils ~~~~~~~~~~~~~~

training_data_bot\.venv\Lib\site-packages/
--------------------------------------------------------------------------------

six.py
  Utilities for writing code that runs on Python 2 and 3""" from __future__ import absolute_import

training_data_bot\.venv\Lib\site-packages\sniffio/
--------------------------------------------------------------------------------

__init__.py
  Top-level package for sniffio.""" __all__ = [

_impl.py
  Detect which async library is currently running. The following libraries are currently supported:

training_data_bot\.venv\Lib\site-packages\sniffio\_tests/
--------------------------------------------------------------------------------

__init__.py
  No description

test_sniffio.py
  No description

training_data_bot\.venv\Lib\site-packages\sniffio/
--------------------------------------------------------------------------------

_version.py
  No description

training_data_bot\.venv\Lib\site-packages\soupsieve/
--------------------------------------------------------------------------------

__init__.py
  Soup Sieve. A CSS selector filter for BeautifulSoup4.

__meta__.py
  Meta related things.""" from __future__ import annotations

css_match.py
  CSS matcher.""" from __future__ import annotations

css_parser.py
  CSS selector parser.""" from __future__ import annotations

css_types.py
  CSS selector structure items.""" from __future__ import annotations

pretty.py
  Format a pretty string of a `SoupSieve` object for easy debugging. This won't necessarily support all types and such, and definitely

util.py
  Utility.""" from __future__ import annotations

training_data_bot\.venv\Lib\site-packages\tiktoken/
--------------------------------------------------------------------------------

__init__.py
  No description

_educational.py
  This is an educational implementation of the byte pair encoding algorithm.""" from __future__ import annotations

core.py
  Creates an Encoding object. See openai_public.py for examples of how to construct an Encoding object.

load.py
  No description

model.py
  Returns the name of the encoding used by a model. Raises a KeyError if the model name is not recognised.

registry.py
  No description

training_data_bot\.venv\Lib\site-packages\tiktoken_ext/
--------------------------------------------------------------------------------

openai_public.py
  's|'t|'re|'ve|'m|'ll|'d| ?[\p{L}]+| ?[\p{N}]+| ?[^\s\p{L}\p{N}]+|\s+(?!\S)|\s+""" # This is equivalent, but executes faster:

training_data_bot\.venv\Lib\site-packages\tqdm/
--------------------------------------------------------------------------------

__init__.py
  See tqdm.notebook.tqdm for full documentation""" from warnings import warn

__main__.py
  No description

_dist_ver.py
  No description

_main.py
  No description

_monitor.py
  tqdm multi-thread/-process errors which may cause incorrect nesting

_tqdm.py
  No description

_tqdm_gui.py
  No description

_tqdm_notebook.py
  No description

_tqdm_pandas.py
  Registers the given `tqdm` instance with `pandas.core.groupby.DataFrameGroupBy.progress_apply`.

_utils.py
  No description

asyncio.py
  Asynchronous progressbar decorator for iterators. Includes a default `range` iterator printing to `stderr`.

auto.py
  Enables multiple commonly used features. Method resolution order:

autonotebook.py
  Automatically choose between `tqdm.notebook` and `tqdm.std`. Usage:

cli.py
  Module version for monitoring CLI pipes (`... | python -m tqdm | ...`).

training_data_bot\.venv\Lib\site-packages\tqdm\contrib/
--------------------------------------------------------------------------------

__init__.py
  Thin wrappers around common functions. Subpackages contain potentially unstable extensions.

bells.py
  Even more features than `tqdm.auto` (all the bells & whistles): - `tqdm.auto`

concurrent.py
  Thin wrappers around `concurrent.futures`.

discord.py
  Sends updates to a Discord bot. Usage:

itertools.py
  Thin wrappers around `itertools`.

logging.py
  Helper functionality for interoperability with stdlib `logging`.

slack.py
  Sends updates to a Slack app. Usage:

telegram.py
  Sends updates to a Telegram bot. Usage:

utils_worker.py
  IO/concurrency helpers for `tqdm.contrib`.

training_data_bot\.venv\Lib\site-packages\tqdm/
--------------------------------------------------------------------------------

dask.py
  Dask callback for task progress.""" def __init__(self, start=None, pretask=None, tqdm_class=tqdm_auto,

gui.py
  Matplotlib GUI progressbar decorator for iterators. Usage:

keras.py
  Keras callback for epoch and batch progress.""" @staticmethod

notebook.py
  IPython/Jupyter Notebook progressbar decorator for iterators. Includes a default `range` iterator printing to `stderr`.

rich.py
  `rich.progress` decorator for iterators. Usage:

std.py
  Customisable progressbar decorator for iterators. Includes a default `range` iterator printing to `stderr`.

tk.py
  Tkinter GUI progressbar decorator for iterators. Usage:

utils.py
  General helpers required for `tqdm.std`.

version.py
  `tqdm` version detector. Precedence: installed dist, git, 'UNKNOWN'.""" try:

training_data_bot\.venv\Lib\site-packages/
--------------------------------------------------------------------------------

typing_extensions.py
  Special type indicating an unconstrained type. - Any is compatible with every type.

training_data_bot\.venv\Lib\site-packages\typing_inspection/
--------------------------------------------------------------------------------

__init__.py
  No description

introspection.py
  High-level introspection utilities, used to inspect type annotations.""" from __future__ import annotations

typing_objects.py
  Low-level introspection utilities for [`typing`][] members. The provided functions in this module check against both the [`typing`][] and [`typing_extensions`][]

training_data_bot\.venv\Lib\site-packages\tzdata/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\tzdata\zoneinfo/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\tzdata\zoneinfo\Africa/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\tzdata\zoneinfo\America/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\tzdata\zoneinfo\America\Argentina/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\tzdata\zoneinfo\America\Indiana/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\tzdata\zoneinfo\America\Kentucky/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\tzdata\zoneinfo\America\North_Dakota/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\tzdata\zoneinfo\Antarctica/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\tzdata\zoneinfo\Arctic/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\tzdata\zoneinfo\Asia/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\tzdata\zoneinfo\Atlantic/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\tzdata\zoneinfo\Australia/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\tzdata\zoneinfo\Brazil/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\tzdata\zoneinfo\Canada/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\tzdata\zoneinfo\Chile/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\tzdata\zoneinfo\Etc/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\tzdata\zoneinfo\Europe/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\tzdata\zoneinfo\Indian/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\tzdata\zoneinfo\Mexico/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\tzdata\zoneinfo\Pacific/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\tzdata\zoneinfo\US/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\urllib3/
--------------------------------------------------------------------------------

__init__.py
  Python HTTP library with thread-safe connection pooling, file post support, user friendly, and more

_base_connection.py
  Whether the connection either is brand new or has been previously closed. If this property is True then both ``is_connected`` and ``has_connected_to_proxy``

_collections.py
  Provides a thread-safe dict-like container which maintains up to ``maxsize`` keys while throwing away the least-recently-used keys beyond

_request_methods.py
  Convenience mixin for classes who implement a :meth:`urlopen` method, such as :class:`urllib3.HTTPConnectionPool` and

_version.py
  No description

connection.py
  Based on :class:`http.client.HTTPConnection` but provides an extra constructor backwards-compatibility layer between older and newer Pythons.

connectionpool.py
  Base class for all connection pools, such as :class:`.HTTPConnectionPool` and :class:`.HTTPSConnectionPool`.

training_data_bot\.venv\Lib\site-packages\urllib3\contrib/
--------------------------------------------------------------------------------

__init__.py
  No description

training_data_bot\.venv\Lib\site-packages\urllib3\contrib\emscripten/
--------------------------------------------------------------------------------

__init__.py
  No description

connection.py
  Whether the connection either is brand new or has been previously closed. If this property is True then both ``is_connected`` and ``has_connected_to_proxy``

fetch.py
  Support for streaming http requests in emscripten. A few caveats -

request.py
  No description

response.py
  A generator wrapper for the read() method. A call will block until ``amt`` bytes have been read from the connection or until the

training_data_bot\.venv\Lib\site-packages\urllib3\contrib/
--------------------------------------------------------------------------------

pyopenssl.py
  Module for using pyOpenSSL as a TLS backend. This module was relevant before the standard library ``ssl`` module supported SNI, but now that we've dropped

socks.py
  This module contains provisional support for SOCKS proxies from within urllib3. This module supports SOCKS4, SOCKS4A (an extension of SOCKS4), and

training_data_bot\.venv\Lib\site-packages\urllib3/
--------------------------------------------------------------------------------

exceptions.py
  Base exception used by this module.""" class HTTPWarning(Warning):

fields.py
  Guess the "Content-Type" of a file. :param filename:

filepost.py
  Our embarrassingly-simple replacement for mimetools.choose_boundary.

training_data_bot\.venv\Lib\site-packages\urllib3\http2/
--------------------------------------------------------------------------------

__init__.py
  No description

connection.py
  "An implementation that validates fields according to the definitions in Sections 5.1 and 5.5 of [HTTP] only needs an additional check that field names do not

probe.py
  This function is for testing purposes only. Gets the current state of the probe cache""" with self._lock:

training_data_bot\.venv\Lib\site-packages\urllib3/
--------------------------------------------------------------------------------

poolmanager.py
  All known keyword arguments that could be provided to the pool manager, its pools, or the underlying connections.

response.py
  From RFC7231: If one or more encodings have been applied to a representation, the

training_data_bot\.venv\Lib\site-packages\urllib3\util/
--------------------------------------------------------------------------------

__init__.py
  No description

connection.py
  Returns True if the connection is dropped and should be closed. :param conn: :class:`urllib3.connection.HTTPConnection` object.

proxy.py
  Returns True if the connection requires an HTTP CONNECT through the proxy. :param URL proxy_url:

request.py
  Shortcuts for generating request headers. :param keep_alive:

response.py
  Checks whether a given file-like object is closed. :param obj:

retry.py
  Retry configuration. Each retry attempt will create a new Retry object with updated values, so

ssl_.py
  Return True for CPython 3.9.3+ or 3.10+ and PyPy 7.3.8+ where setting SSLContext.hostname_checks_common_name to False works.

ssl_match_hostname.py
  The match_hostname() function from Python 3.5, essential when using SSL.""" # Note: This file is under the PSF license as the code comes from the python

ssltransport.py
  The SSLTransport wraps an existing socket and establishes an SSL connection. Contrary to Python's implementation of SSLSocket, it allows you to chain

timeout.py
  Timeout configuration. Timeouts can be defined as a default for a pool:

url.py
  Data structure for representing an HTTP URL. Used as a return value for :func:`parse_url`. Both the scheme and host are normalized as they are

util.py
  No description

wait.py
  Waits for reading to be available on a given socket. Returns True if the socket is readable, or False if the timeout expired.

training_data_bot\.venv\Lib\site-packages\yaml/
--------------------------------------------------------------------------------

__init__.py
  Scan a YAML stream and produce scanning tokens.

composer.py
  No description

constructor.py
  Block special attributes/methods from being set in a newly created object, to prevent user-controlled methods from being called during

cyaml.py
  No description

dumper.py
  No description

emitter.py
  No description

error.py
  No description

events.py
  No description

loader.py
  No description

nodes.py
  No description

parser.py
  No description

reader.py
  No description

representer.py
  No description

resolver.py
  No description

scanner.py
  Initialize the scanner.""" # It is assumed that Scanner and Reader will have a common descendant.

serializer.py
  No description

tokens.py
  No description

training_data_bot/
--------------------------------------------------------------------------------

__init__.py
  Training Data Curation Bot A bot that curates training data for fine-tuning large language models (LLMs)

training_data_bot\ai/
--------------------------------------------------------------------------------

__init__.py
  AI client module. This module provides AI integration for text generation using

client.py
  Main AI client for managing AI providers. This module provides a unified interface for interacting with different

training_data_bot\ai\providers/
--------------------------------------------------------------------------------

__init__.py
  AI providers module. This module contains implementations for different AI providers

anthropic_provider.py
  Anthropic AI provider implementation. This module provides integration with Anthropic's Claude API for text generation.

base.py
  Base AI provider interface. This module defines the abstract base class that all AI providers must implement.

openai_provider.py
  OpenAI AI provider implementation. This module provides integration with OpenAI's API for text generation.

training_data_bot/
--------------------------------------------------------------------------------

API_key_test.py
  No description

bot.py
  Main Training Data Bot class. This module provides the high-level interface for the entire

training_data_bot\core/
--------------------------------------------------------------------------------

__init__.py
  Core module for the Training Data Bot. This module provides the foundational data models, exceptions, and utilities

config.py
  Configuration management for the Training Data Bot. This module handles all configuration loading from environment variables,

exceptions.py
  Custom exceptions for the Training Data Bot. This module defines all custom exception types used throughout the system

logging.py
  Logging infrastrucutre for the Training Data Bot. This module provides structured logging with context management, performance tracking, and configurable output formats.

models.py
  Core data models for the Training Data Bot. This module defines all the data strucutures used throughout the system,

training_data_bot/
--------------------------------------------------------------------------------

diagnostic.py
  No description

training_data_bot\evaluation/
--------------------------------------------------------------------------------

__init__.py
  Evaluation module for quality assessment. This module provides quality evaluation tools for training data.

evaluator.py
  Quality evaluator for training data. This module provides comprehensive quality assessment for training examples

training_data_bot/
--------------------------------------------------------------------------------

example_session7_usage.py
  Example usage of Session 7: Task Generation System Demonstrates how to use the task generators to create training data.

example_usage.py
  Example usage of the UnifiedLoader. This script demonstrates various ways to use the unified loader

training_data_bot\preprocessing/
--------------------------------------------------------------------------------

__init__.py
  Text preprocessing module. This module provides text preprocessing and hunking functionality for preparing documents for AI processing.

processor.py
  Text preprocessing and chunking for document processing. This module handles splitting documents into manageable chunks for AI processing, with configurable size, overlap and metadata

training_data_bot/
--------------------------------------------------------------------------------

production_bot.py
  Production Bot Configuration Loader Loads production configuration from YAML file and creates production-ready bot instance.

training_data_bot\sources/
--------------------------------------------------------------------------------

__init__.py
  Document loading sources module. This module provides loaders for various document types including

base.py
  Base loader class for document loading. This module provides the abstract base class that all document loaders must inherit from, ensuring consistent interface behavior.

document_loader.py
  Document loader for text-based formats. Handles TXT, MD, HTML, JSON, CSV, and DOCX files with appropriate

pdf_loader.py
  PDF document loader. Handles PDF file loading and text extraction using PyMuPDF (fitz).

unified.py
  Unified document loader. This module provides a single interface for loading any supported document

web_loader.py
  Web content loader. Handles loading and extracting content from web pages using HTTP requests.

training_data_bot\storage/
--------------------------------------------------------------------------------

__init__.py
  Storage module for data persistence and export. This module provides dataset export and optional database storage.

exporter.py
  Dataset exporter for multiple formats. This module handles exporting training datasets to various formats

training_data_bot\tasks/
--------------------------------------------------------------------------------

__init__.py
  Tasks module for training data generation. This module provides task generators for creating different types

base.py
  Base task generator interface. This module defines the abstract base class that all task generators must implement.

training_data_bot\tasks\generators/
--------------------------------------------------------------------------------

__init__.py
  Task generators module. Exports all available task generators.

classification_generator.py
  Classification task generator. Generates text classification training examples from text chunks.

qa_generator.py
  Q&A task generator. Generates question-answer pairs from text chunks for training data.

summarization_generator.py
  Summarization task generator. Generates text summaries from text chunks for training data.

training_data_bot\tasks/
--------------------------------------------------------------------------------

manager.py
  Task manager for orchestrating task generation. This module manages the creation and execution of tasks across

training_data_bot/
--------------------------------------------------------------------------------

tasks.py
  No description

test_foundation.py
  No description

test_imports.py
  Quick import test to verify all imports work.""" import sys

test_openai_live.py
  Test OpenAI API connection and functionality.""" print("\n" + "="*60)

test_session2.py
  Test script for Session 2: Configuration and Logging Infrastructure Run this to verify the configuration and logging systems are working correctly.

test_session3.py
  Test script for Session 3: Document Loaders Run this to verify the document loading system is working correctly.

test_session4.py
  Test script for Session 4: Unified Loading System Run this to verify the unified loader is working correctly.

test_session5.py
  Test script for Session 5: Text Preprocessing Pipeline Run this to verify the text preprocessing system is working correctly.

test_session6.py
  Test script for Session 6: AI Client Integration Run this to verify the AI client system is working correctly.

test_session7.py
  Test suite for Session 7: Task Generation System Tests all task generators and the task manager.

test_session8.py
  Test suite for Session 8: Evaluation, Storage & Final Integration Tests the complete system end-to-end.


================================================================================
5. CODE STATISTICS
================================================================================

Module                                             Files    Total    Code     Comments
--------------------------------------------------------------------------------
training_data_bot                                  18       4410     1388     2047    
training_data_bot\.venv\Lib\site-packages          5        5592     2400     2187    
training_data_bot\.venv\Lib\site-packages\_pytest  46       24783    8165     12244   
training_data_bot\.venv\Lib\site-packages\_pytest\_code 3        1821     505      1031    
training_data_bot\.venv\Lib\site-packages\_pytest\_io 5        1129     227      734     
training_data_bot\.venv\Lib\site-packages\_pytest\_py 3        1597     536      832     
training_data_bot\.venv\Lib\site-packages\_pytest\assertion 4        2186     590      1274    
training_data_bot\.venv\Lib\site-packages\_pytest\config 5        2906     1345     1139    
training_data_bot\.venv\Lib\site-packages\_pytest\mark 3        1297     545      495     
training_data_bot\.venv\Lib\site-packages\_yaml    1        34       18       12      
training_data_bot\.venv\Lib\site-packages\aiofiles 4        183      19       130     
training_data_bot\.venv\Lib\site-packages\aiofiles\tempfile 2        428      163      207     
training_data_bot\.venv\Lib\site-packages\aiofiles\threadpool 4        383      161      157     
training_data_bot\.venv\Lib\site-packages\annotated_types 2        585      272      168     
training_data_bot\.venv\Lib\site-packages\anthropic 16       6653     3395     1929    
training_data_bot\.venv\Lib\site-packages\anthropic\_decoders 1        124      12       85      
training_data_bot\.venv\Lib\site-packages\anthropic\_utils 13       1610     851      362     
training_data_bot\.venv\Lib\site-packages\anthropic\lib 1        1        0        0       
training_data_bot\.venv\Lib\site-packages\anthropic\lib\_extras 3        46       24       4       
training_data_bot\.venv\Lib\site-packages\anthropic\lib\bedrock 7        788      532      84      
training_data_bot\.venv\Lib\site-packages\anthropic\lib\streaming 5        1216     641      345     
training_data_bot\.venv\Lib\site-packages\anthropic\lib\tools 4        1011     643      160     
training_data_bot\.venv\Lib\site-packages\anthropic\lib\vertex 5        664      455      57      
training_data_bot\.venv\Lib\site-packages\anthropic\resources 3        1246     516      451     
training_data_bot\.venv\Lib\site-packages\anthropic\resources\beta 4        1272     797      260     
training_data_bot\.venv\Lib\site-packages\anthropic\resources\beta\messages 3        3927     1372     1851    
training_data_bot\.venv\Lib\site-packages\anthropic\resources\messages 3        3243     1404     1190    
training_data_bot\.venv\Lib\site-packages\anthropic\types 111      3141     1414     656     
training_data_bot\.venv\Lib\site-packages\anthropic\types\beta 168      4495     2003     891     
training_data_bot\.venv\Lib\site-packages\anthropic\types\beta\messages 12       330      122      95      
training_data_bot\.venv\Lib\site-packages\anthropic\types\messages 12       313      108      95      
training_data_bot\.venv\Lib\site-packages\anthropic\types\shared 12       191      101      12      
training_data_bot\.venv\Lib\site-packages\anyio    7        1716     1076     308     
training_data_bot\.venv\Lib\site-packages\anyio\_backends 3        4354     2108     1476    
training_data_bot\.venv\Lib\site-packages\anyio\_core 16       4423     1816     1659    
training_data_bot\.venv\Lib\site-packages\anyio\abc 8        1424     520      610     
training_data_bot\.venv\Lib\site-packages\anyio\streams 7        1383     575      528     
training_data_bot\.venv\Lib\site-packages\black    24       12774    5189     5674    
training_data_bot\.venv\Lib\site-packages\black\resources 1        1        0        0       
training_data_bot\.venv\Lib\site-packages\blackd   3        305      246      8       
training_data_bot\.venv\Lib\site-packages\blib2to3 3        1179     351      643     
training_data_bot\.venv\Lib\site-packages\blib2to3\pgen2 9        1987     739      959     
training_data_bot\.venv\Lib\site-packages\bs4      11       7862     3511     3168    
training_data_bot\.venv\Lib\site-packages\bs4\builder 4        2429     891      1165    
training_data_bot\.venv\Lib\site-packages\certifi  3        102      44       36      
training_data_bot\.venv\Lib\site-packages\charset_normalizer 10       4640     3785     316     
training_data_bot\.venv\Lib\site-packages\charset_normalizer\cli 2        391      318      29      
training_data_bot\.venv\Lib\site-packages\click    17       11055    4503     4432    
training_data_bot\.venv\Lib\site-packages\colorama 6        888      524      217     
training_data_bot\.venv\Lib\site-packages\colorama\tests 7        804      626      27      
training_data_bot\.venv\Lib\site-packages\dateutil 8        2577     1728     508     
training_data_bot\.venv\Lib\site-packages\dateutil\parser 3        2093     724      960     
training_data_bot\.venv\Lib\site-packages\dateutil\tz 5        2735     822      1305    
training_data_bot\.venv\Lib\site-packages\dateutil\zoneinfo 2        244      112      74      
training_data_bot\.venv\Lib\site-packages\distro   3        1464     328      856     
training_data_bot\.venv\Lib\site-packages\docstring_parser 9        2115     593      1171    
training_data_bot\.venv\Lib\site-packages\docstring_parser\tests 9        3783     1451     1937    
training_data_bot\.venv\Lib\site-packages\docx     13       2342     664      1121    
training_data_bot\.venv\Lib\site-packages\docx\dml 2        114      48       43      
training_data_bot\.venv\Lib\site-packages\docx\drawing 1        60       20       26      
training_data_bot\.venv\Lib\site-packages\docx\enum 8        1321     276      607     
training_data_bot\.venv\Lib\site-packages\docx\image 10       1586     587      678     
training_data_bot\.venv\Lib\site-packages\docx\opc 14       1992     506      1107    
training_data_bot\.venv\Lib\site-packages\docx\opc\parts 2        50       2        36      
training_data_bot\.venv\Lib\site-packages\docx\oxml 17       4532     1614     2025    
training_data_bot\.venv\Lib\site-packages\docx\oxml\text 7        1466     436      743     
training_data_bot\.venv\Lib\site-packages\docx\parts 9        581      112      343     
training_data_bot\.venv\Lib\site-packages\docx\styles 4        632      191      298     
training_data_bot\.venv\Lib\site-packages\docx\text 8        1500     465      731     
training_data_bot\.venv\Lib\site-packages\dotenv   8        969      561      219     
training_data_bot\.venv\Lib\site-packages\fitz     3        20       14       3       
training_data_bot\.venv\Lib\site-packages\h11      11       2579     1230     940     
training_data_bot\.venv\Lib\site-packages\httpcore 8        1311     842      233     
training_data_bot\.venv\Lib\site-packages\httpcore\_async 8        2505     1784     362     
training_data_bot\.venv\Lib\site-packages\httpcore\_backends 7        849      701      17      
training_data_bot\.venv\Lib\site-packages\httpcore\_sync 8        2505     1784     362     
training_data_bot\.venv\Lib\site-packages\httpx    17       7959     5078     1649    
training_data_bot\.venv\Lib\site-packages\httpx\_transports 6        892      623      99      
training_data_bot\.venv\Lib\site-packages\idna     8        13609    4647     8654    
training_data_bot\.venv\Lib\site-packages\iniconfig 4        343      268      13      
training_data_bot\.venv\Lib\site-packages\jiter    1        5        4        0       
training_data_bot\.venv\Lib\site-packages\lxml     9        1751     1017     486     
training_data_bot\.venv\Lib\site-packages\lxml\html 14       6486     3425     2099    
training_data_bot\.venv\Lib\site-packages\lxml\includes 1        1        0        0       
training_data_bot\.venv\Lib\site-packages\lxml\includes\extlibs 1        1        0        0       
training_data_bot\.venv\Lib\site-packages\lxml\includes\libexslt 1        1        0        0       
training_data_bot\.venv\Lib\site-packages\lxml\includes\libxml 1        1        0        0       
training_data_bot\.venv\Lib\site-packages\lxml\includes\libxslt 1        1        0        0       
training_data_bot\.venv\Lib\site-packages\lxml\isoschematron 1        349      178      120     
training_data_bot\.venv\Lib\site-packages\numpy    13       2837     1468     946     
training_data_bot\.venv\Lib\site-packages\numpy\_core 30       30609    7711     17037   
training_data_bot\.venv\Lib\site-packages\numpy\_core\tests 67       60308    29712    21234   
training_data_bot\.venv\Lib\site-packages\numpy\_core\tests\examples\cython 1        40       26       5       
training_data_bot\.venv\Lib\site-packages\numpy\_core\tests\examples\limited_api 1        25       14       3       
training_data_bot\.venv\Lib\site-packages\numpy\_pyinstaller 2        38       15       15      
training_data_bot\.venv\Lib\site-packages\numpy\_pyinstaller\tests 3        86       35       31      
training_data_bot\.venv\Lib\site-packages\numpy\_typing 12       988      386      428     
training_data_bot\.venv\Lib\site-packages\numpy\_utils 4        795      376      239     
training_data_bot\.venv\Lib\site-packages\numpy\char 1        3        2        0       
training_data_bot\.venv\Lib\site-packages\numpy\core 19       324      216      40      
training_data_bot\.venv\Lib\site-packages\numpy\ctypeslib 2        618      244      267     
training_data_bot\.venv\Lib\site-packages\numpy\doc 1        139      0        107     
training_data_bot\.venv\Lib\site-packages\numpy\f2py 18       13107    6145     5665    
training_data_bot\.venv\Lib\site-packages\numpy\f2py\_backends 4        364      170      151     
training_data_bot\.venv\Lib\site-packages\numpy\f2py\tests 33       5436     3229     1181    
training_data_bot\.venv\Lib\site-packages\numpy\fft 4        2164     258      1466    
training_data_bot\.venv\Lib\site-packages\numpy\fft\tests 3        759      563      97      
training_data_bot\.venv\Lib\site-packages\numpy\lib 32       27116    9832     12659   
training_data_bot\.venv\Lib\site-packages\numpy\lib\tests 26       20678    11312    6203    
training_data_bot\.venv\Lib\site-packages\numpy\linalg 3        3800     1194     1906    
training_data_bot\.venv\Lib\site-packages\numpy\linalg\tests 4        2648     664      1510    
training_data_bot\.venv\Lib\site-packages\numpy\ma 5        12405    5089     5342    
training_data_bot\.venv\Lib\site-packages\numpy\ma\tests 9        10028    7474     1313    
training_data_bot\.venv\Lib\site-packages\numpy\matrixlib 2        1133     264      671     
training_data_bot\.venv\Lib\site-packages\numpy\matrixlib\tests 8        1234     813      186     
training_data_bot\.venv\Lib\site-packages\numpy\polynomial 9        12427    2527     7620    
training_data_bot\.venv\Lib\site-packages\numpy\polynomial\tests 11       5049     3574     583     
training_data_bot\.venv\Lib\site-packages\numpy\random 2        303      101      160     
training_data_bot\.venv\Lib\site-packages\numpy\random\_examples\cffi 2        99       52       23      
training_data_bot\.venv\Lib\site-packages\numpy\random\_examples\numba 2        155      83       31      
training_data_bot\.venv\Lib\site-packages\numpy\random\tests 11       8895     5349     2163    
training_data_bot\.venv\Lib\site-packages\numpy\random\tests\data 1        1        0        0       
training_data_bot\.venv\Lib\site-packages\numpy\rec 1        3        2        0       
training_data_bot\.venv\Lib\site-packages\numpy\strings 1        3        2        0       
training_data_bot\.venv\Lib\site-packages\numpy\testing 3        316      193      66      
training_data_bot\.venv\Lib\site-packages\numpy\testing\_private 3        3012     1180     1355    
training_data_bot\.venv\Lib\site-packages\numpy\testing\tests 2        1919     354      1207    
training_data_bot\.venv\Lib\site-packages\numpy\tests 12       1651     886      482     
training_data_bot\.venv\Lib\site-packages\numpy\typing 2        398      123      169     
training_data_bot\.venv\Lib\site-packages\numpy\typing\tests 4        343      175      86      
training_data_bot\.venv\Lib\site-packages\numpy\typing\tests\data\pass 36       5016     3502     618     
training_data_bot\.venv\Lib\site-packages\openai   19       7646     4087     1932    
training_data_bot\.venv\Lib\site-packages\openai\_extras 5        122      68       6       
training_data_bot\.venv\Lib\site-packages\openai\_utils 12       1584     838      350     
training_data_bot\.venv\Lib\site-packages\openai\cli 6        382      269      12      
training_data_bot\.venv\Lib\site-packages\openai\cli\_api 7        570      434      28      
training_data_bot\.venv\Lib\site-packages\openai\cli\_api\chat 2        175      135      6       
training_data_bot\.venv\Lib\site-packages\openai\cli\_api\fine_tuning 2        185      153      0       
training_data_bot\.venv\Lib\site-packages\openai\cli\_tools 4        249      108      66      
training_data_bot\.venv\Lib\site-packages\openai\helpers 3        272      223      3       
training_data_bot\.venv\Lib\site-packages\openai\lib 6        1757     1291     175     
training_data_bot\.venv\Lib\site-packages\openai\lib\_parsing 3        496      380      20      
training_data_bot\.venv\Lib\site-packages\openai\lib\streaming 3        1113     403      497     
training_data_bot\.venv\Lib\site-packages\openai\lib\streaming\chat 4        944      231      523     
training_data_bot\.venv\Lib\site-packages\openai\lib\streaming\responses 4        547      376      95      
training_data_bot\.venv\Lib\site-packages\openai\resources 9        5543     2401     2137    
training_data_bot\.venv\Lib\site-packages\openai\resources\audio 5        1636     891      475     
training_data_bot\.venv\Lib\site-packages\openai\resources\beta 3        1226     668      363     
training_data_bot\.venv\Lib\site-packages\openai\resources\beta\realtime 4        1847     812      709     
training_data_bot\.venv\Lib\site-packages\openai\resources\beta\threads 3        2703     1360     976     
training_data_bot\.venv\Lib\site-packages\openai\resources\beta\threads\runs 3        3515     1768     1332    
training_data_bot\.venv\Lib\site-packages\openai\resources\chat 2        137      86       20      
training_data_bot\.venv\Lib\site-packages\openai\resources\chat\completions 3        3301     1340     1395    
training_data_bot\.venv\Lib\site-packages\openai\resources\containers 2        545      332      122     
training_data_bot\.venv\Lib\site-packages\openai\resources\containers\files 3        754      457      169     
training_data_bot\.venv\Lib\site-packages\openai\resources\conversations 3        1079     621      283     
training_data_bot\.venv\Lib\site-packages\openai\resources\evals 2        697      408      178     
training_data_bot\.venv\Lib\site-packages\openai\resources\evals\runs 3        985      605      221     
training_data_bot\.venv\Lib\site-packages\openai\resources\fine_tuning 2        229      166      20      
training_data_bot\.venv\Lib\site-packages\openai\resources\fine_tuning\alpha 3        420      235      99      
training_data_bot\.venv\Lib\site-packages\openai\resources\fine_tuning\checkpoints 3        556      330      121     
training_data_bot\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs 3        1153     644      309     
training_data_bot\.venv\Lib\site-packages\openai\resources\realtime 3        1246     572      443     
training_data_bot\.venv\Lib\site-packages\openai\resources\responses 3        3308     1574     1244    
training_data_bot\.venv\Lib\site-packages\openai\resources\uploads 3        962      516      269     
training_data_bot\.venv\Lib\site-packages\openai\resources\vector_stores 4        2652     1390     867     
training_data_bot\.venv\Lib\site-packages\openai\types 78       3504     1118     1251    
training_data_bot\.venv\Lib\site-packages\openai\types\audio 17       645      190      244     
training_data_bot\.venv\Lib\site-packages\openai\types\beta 28       1956     601      800     
training_data_bot\.venv\Lib\site-packages\openai\types\beta\chat 1        4        1        1       
training_data_bot\.venv\Lib\site-packages\openai\types\beta\realtime 71       4456     1482     1687    
training_data_bot\.venv\Lib\site-packages\openai\types\beta\threads 43       1572     580      490     
training_data_bot\.venv\Lib\site-packages\openai\types\beta\threads\runs 21       743      252      239     
training_data_bot\.venv\Lib\site-packages\openai\types\chat 51       2039     700      708     
training_data_bot\.venv\Lib\site-packages\openai\types\chat\completions 2        28       8        8       
training_data_bot\.venv\Lib\site-packages\openai\types\containers 6        152      43       51      
training_data_bot\.venv\Lib\site-packages\openai\types\containers\files 1        4        1        1       
training_data_bot\.venv\Lib\site-packages\openai\types\conversations 24       664      249      192     
training_data_bot\.venv\Lib\site-packages\openai\types\evals 13       2571     800      980     
training_data_bot\.venv\Lib\site-packages\openai\types\evals\runs 4        309      60       142     
training_data_bot\.venv\Lib\site-packages\openai\types\fine_tuning 21       834      253      304     
training_data_bot\.venv\Lib\site-packages\openai\types\fine_tuning\alpha 5        164      79       20      
training_data_bot\.venv\Lib\site-packages\openai\types\fine_tuning\checkpoints 6        123      43       29      
training_data_bot\.venv\Lib\site-packages\openai\types\fine_tuning\jobs 3        71       25       16      
training_data_bot\.venv\Lib\site-packages\openai\types\graders 13       626      241      183     
training_data_bot\.venv\Lib\site-packages\openai\types\realtime 150      6390     2387     2044    
training_data_bot\.venv\Lib\site-packages\openai\types\responses 146      7335     2473     2569    
training_data_bot\.venv\Lib\site-packages\openai\types\shared 18       457      227      101     
training_data_bot\.venv\Lib\site-packages\openai\types\shared_params 14       390      188      93      
training_data_bot\.venv\Lib\site-packages\openai\types\uploads 3        44       15       10      
training_data_bot\.venv\Lib\site-packages\openai\types\vector_stores 10       358      106      136     
training_data_bot\.venv\Lib\site-packages\openai\types\webhooks 17       546      184      170     
training_data_bot\.venv\Lib\site-packages\packaging 14       4829     2173     1795    
training_data_bot\.venv\Lib\site-packages\packaging\licenses 2        906      829      45      
training_data_bot\.venv\Lib\site-packages\pandas   6        3687     1765     1310    
training_data_bot\.venv\Lib\site-packages\pandas\_config 5        1269     541      442     
training_data_bot\.venv\Lib\site-packages\pandas\_libs 1        28       22       3       
training_data_bot\.venv\Lib\site-packages\pandas\_libs\tslibs 1        88       86       0       
training_data_bot\.venv\Lib\site-packages\pandas\_libs\window 1        1        0        0       
training_data_bot\.venv\Lib\site-packages\pandas\_testing 7        2886     1349     1110    
training_data_bot\.venv\Lib\site-packages\pandas\api 1        17       0        15      
training_data_bot\.venv\Lib\site-packages\pandas\api\extensions 1        34       26       3       
training_data_bot\.venv\Lib\site-packages\pandas\api\indexers 1        18       12       3       
training_data_bot\.venv\Lib\site-packages\pandas\api\interchange 1        9        3        3       
training_data_bot\.venv\Lib\site-packages\pandas\api\types 1        24       17       3       
training_data_bot\.venv\Lib\site-packages\pandas\api\typing 1        56       44       7       
training_data_bot\.venv\Lib\site-packages\pandas\arrays 1        54       42       5       
training_data_bot\.venv\Lib\site-packages\pandas\compat 6        799      447      218     
training_data_bot\.venv\Lib\site-packages\pandas\compat\numpy 2        473      261      118     
training_data_bot\.venv\Lib\site-packages\pandas\core 22       52722    21044    23782   
training_data_bot\.venv\Lib\site-packages\pandas\core\_numba 3        827      537      134     
training_data_bot\.venv\Lib\site-packages\pandas\core\_numba\kernels 6        872      683      65      
training_data_bot\.venv\Lib\site-packages\pandas\core\array_algos 9        1550     925      375     
training_data_bot\.venv\Lib\site-packages\pandas\core\arrays 20       21922    10074    8371    
training_data_bot\.venv\Lib\site-packages\pandas\core\arrays\arrow 5        3678     1477     1696    
training_data_bot\.venv\Lib\site-packages\pandas\core\arrays\sparse 4        2589     1146     1011    
training_data_bot\.venv\Lib\site-packages\pandas\core\computation 13       3765     1844     1189    
training_data_bot\.venv\Lib\site-packages\pandas\core\dtypes 11       8826     3941     3372    
training_data_bot\.venv\Lib\site-packages\pandas\core\groupby 9        11911    5101     5120    
training_data_bot\.venv\Lib\site-packages\pandas\core\indexers 3        1040     379      493     
training_data_bot\.venv\Lib\site-packages\pandas\core\indexes 14       19233    7836     8305    
training_data_bot\.venv\Lib\site-packages\pandas\core\interchange 7        1922     944      671     
training_data_bot\.venv\Lib\site-packages\pandas\core\internals 9        9139     4646     3036    
training_data_bot\.venv\Lib\site-packages\pandas\core\methods 4        961      467      323     
training_data_bot\.venv\Lib\site-packages\pandas\core\ops 8        2080     830      930     
training_data_bot\.venv\Lib\site-packages\pandas\core\reshape 10       7401     3242     3076    
training_data_bot\.venv\Lib\site-packages\pandas\core\sparse 2        7        3        0       
training_data_bot\.venv\Lib\site-packages\pandas\core\strings 4        4403     1544     2146    
training_data_bot\.venv\Lib\site-packages\pandas\core\tools 5        2028     1012     700     
training_data_bot\.venv\Lib\site-packages\pandas\core\util 3        440      233      131     
training_data_bot\.venv\Lib\site-packages\pandas\core\window 8        5774     2333     2843    
training_data_bot\.venv\Lib\site-packages\pandas\errors 1        851      171      504     
training_data_bot\.venv\Lib\site-packages\pandas\io 16       17877    6477     8754    
training_data_bot\.venv\Lib\site-packages\pandas\io\clipboard 1        748      450      162     
training_data_bot\.venv\Lib\site-packages\pandas\io\excel 10       3946     1881     1450    
training_data_bot\.venv\Lib\site-packages\pandas\io\formats 14       13763    6053     5640    
training_data_bot\.venv\Lib\site-packages\pandas\io\json 4        2444     742      1368    
training_data_bot\.venv\Lib\site-packages\pandas\io\parsers 6        5952     2252     2905    
training_data_bot\.venv\Lib\site-packages\pandas\io\sas 5        1766     1051     467     
training_data_bot\.venv\Lib\site-packages\pandas\plotting 3        2735     696      1569    
training_data_bot\.venv\Lib\site-packages\pandas\plotting\_matplotlib 10       6283     3263     2023    
training_data_bot\.venv\Lib\site-packages\pandas\tests 14       6055     4596     362     
training_data_bot\.venv\Lib\site-packages\pandas\tests\api 3        448      380      18      
training_data_bot\.venv\Lib\site-packages\pandas\tests\apply 11       3776     2745     292     
training_data_bot\.venv\Lib\site-packages\pandas\tests\arithmetic 11       8979     5839     1516    
training_data_bot\.venv\Lib\site-packages\pandas\tests\arrays 8        3453     1923     879     
training_data_bot\.venv\Lib\site-packages\pandas\tests\arrays\boolean 11       1084     657      201     
training_data_bot\.venv\Lib\site-packages\pandas\tests\arrays\categorical 17       4133     2821     567     
training_data_bot\.venv\Lib\site-packages\pandas\tests\arrays\datetimes 4        515      266      141     
training_data_bot\.venv\Lib\site-packages\pandas\tests\arrays\floating 11       1108     778      77      
training_data_bot\.venv\Lib\site-packages\pandas\tests\arrays\integer 11       1490     1050     120     
training_data_bot\.venv\Lib\site-packages\pandas\tests\arrays\interval 6        531      347      80      
training_data_bot\.venv\Lib\site-packages\pandas\tests\arrays\masked 5        597      387      71      
training_data_bot\.venv\Lib\site-packages\pandas\tests\arrays\numpy_ 3        395      254      34      
training_data_bot\.venv\Lib\site-packages\pandas\tests\arrays\period 5        400      284      14      
training_data_bot\.venv\Lib\site-packages\pandas\tests\arrays\sparse 12       3232     1736     877     
training_data_bot\.venv\Lib\site-packages\pandas\tests\arrays\string_ 4        1252     893      62      
training_data_bot\.venv\Lib\site-packages\pandas\tests\arrays\timedeltas 4        345      258      9       
training_data_bot\.venv\Lib\site-packages\pandas\tests\base 9        1587     1107     203     
training_data_bot\.venv\Lib\site-packages\pandas\tests\computation 3        2041     1610     129     
training_data_bot\.venv\Lib\site-packages\pandas\tests\config 3        596      420      46      
training_data_bot\.venv\Lib\site-packages\pandas\tests\construction 2        20       14       0       
training_data_bot\.venv\Lib\site-packages\pandas\tests\copy_view 16       6407     4776     414     
training_data_bot\.venv\Lib\site-packages\pandas\tests\copy_view\index 5        318      264      1       
training_data_bot\.venv\Lib\site-packages\pandas\tests\dtypes 7        5282     4088     293     
training_data_bot\.venv\Lib\site-packages\pandas\tests\dtypes\cast 12       1302     916      120     
training_data_bot\.venv\Lib\site-packages\pandas\tests\extension 13       6024     1879     3063    
training_data_bot\.venv\Lib\site-packages\pandas\tests\extension\array_with_attr 3        131      86       13      
training_data_bot\.venv\Lib\site-packages\pandas\tests\extension\base 19       3985     1241     1960    
training_data_bot\.venv\Lib\site-packages\pandas\tests\extension\date 2        196      153      5       
training_data_bot\.venv\Lib\site-packages\pandas\tests\extension\decimal 3        909      518      200     
training_data_bot\.venv\Lib\site-packages\pandas\tests\extension\json 3        773      526      115     
training_data_bot\.venv\Lib\site-packages\pandas\tests\extension\list 3        180      113      29      
training_data_bot\.venv\Lib\site-packages\pandas\tests\frame 22       15675    11674    1564    
training_data_bot\.venv\Lib\site-packages\pandas\tests\frame\constructors 3        729      553      50      
training_data_bot\.venv\Lib\site-packages\pandas\tests\frame\indexing 14       6352     4723     554     
training_data_bot\.venv\Lib\site-packages\pandas\tests\frame\methods 82       26456    19503    2801    
training_data_bot\.venv\Lib\site-packages\pandas\tests\generic 8        2540     1610     559     
training_data_bot\.venv\Lib\site-packages\pandas\tests\groupby 25       16019    12165    1189    
training_data_bot\.venv\Lib\site-packages\pandas\tests\groupby\aggregate 5        3192     2431     208     
training_data_bot\.venv\Lib\site-packages\pandas\tests\groupby\methods 13       4484     3632     219     
training_data_bot\.venv\Lib\site-packages\pandas\tests\groupby\transform 3        2007     218      1442    
training_data_bot\.venv\Lib\site-packages\pandas\tests\indexes 14       6011     4388     639     
training_data_bot\.venv\Lib\site-packages\pandas\tests\indexes\base_class 8        740      525      90      
training_data_bot\.venv\Lib\site-packages\pandas\tests\indexes\categorical 12       1627     1160     171     
training_data_bot\.venv\Lib\site-packages\pandas\tests\indexes\datetimelike_ 8        840      654      44      
training_data_bot\.venv\Lib\site-packages\pandas\tests\indexes\datetimes 18       6460     3809     1601    
training_data_bot\.venv\Lib\site-packages\pandas\tests\indexes\datetimes\methods 23       2834     2212     155     
training_data_bot\.venv\Lib\site-packages\pandas\tests\indexes\interval 12       3390     2350     472     
training_data_bot\.venv\Lib\site-packages\pandas\tests\indexes\multi 29       7184     5055     713     
training_data_bot\.venv\Lib\site-packages\pandas\tests\indexes\numeric 6        1813     1338     114     
training_data_bot\.venv\Lib\site-packages\pandas\tests\indexes\object 3        177      131      18      
training_data_bot\.venv\Lib\site-packages\pandas\tests\indexes\period 16       3252     2320     306     
training_data_bot\.venv\Lib\site-packages\pandas\tests\indexes\period\methods 10       768      605      21      
training_data_bot\.venv\Lib\site-packages\pandas\tests\indexes\ranges 6        1599     1195     98      
training_data_bot\.venv\Lib\site-packages\pandas\tests\indexes\string 3        223      174      9       
training_data_bot\.venv\Lib\site-packages\pandas\tests\indexes\timedeltas 15       1683     1217     148     
training_data_bot\.venv\Lib\site-packages\pandas\tests\indexes\timedeltas\methods 7        505      386      26      
training_data_bot\.venv\Lib\site-packages\pandas\tests\indexing 18       10872    4977     4040    
training_data_bot\.venv\Lib\site-packages\pandas\tests\indexing\interval 3        457      314      40      
training_data_bot\.venv\Lib\site-packages\pandas\tests\indexing\multiindex 12       3890     2191     1084    
training_data_bot\.venv\Lib\site-packages\pandas\tests\interchange 4        884      646      90      
training_data_bot\.venv\Lib\site-packages\pandas\tests\internals 4        1615     580      785     
training_data_bot\.venv\Lib\site-packages\pandas\tests\io 19       14342    6499     5557    
training_data_bot\.venv\Lib\site-packages\pandas\tests\io\excel 9        4333     3247     350     
training_data_bot\.venv\Lib\site-packages\pandas\tests\io\formats 13       8246     4503     2679    
training_data_bot\.venv\Lib\site-packages\pandas\tests\io\formats\style 12       5538     3496     1245    
training_data_bot\.venv\Lib\site-packages\pandas\tests\io\json 10       6085     3452     1742    
training_data_bot\.venv\Lib\site-packages\pandas\tests\io\parser 23       9974     6005     2434    
training_data_bot\.venv\Lib\site-packages\pandas\tests\io\parser\common 13       3246     2121     559     
training_data_bot\.venv\Lib\site-packages\pandas\tests\io\parser\dtypes 4        1163     773      190     
training_data_bot\.venv\Lib\site-packages\pandas\tests\io\parser\usecols 4        857      582      128     
training_data_bot\.venv\Lib\site-packages\pandas\tests\io\pytables 20       6644     4879     516     
training_data_bot\.venv\Lib\site-packages\pandas\tests\io\sas 5        682      458      88      
training_data_bot\.venv\Lib\site-packages\pandas\tests\io\xml 5        3982     1897     1366    
training_data_bot\.venv\Lib\site-packages\pandas\tests\libs 5        1604     1228     78      
training_data_bot\.venv\Lib\site-packages\pandas\tests\plotting 13       6734     1036     4738    
training_data_bot\.venv\Lib\site-packages\pandas\tests\plotting\frame 7        4739     921      3213    
training_data_bot\.venv\Lib\site-packages\pandas\tests\reductions 3        2005     1481     180     
training_data_bot\.venv\Lib\site-packages\pandas\tests\resample 9        6311     4519     706     
training_data_bot\.venv\Lib\site-packages\pandas\tests\reshape 11       7869     6587     302     
training_data_bot\.venv\Lib\site-packages\pandas\tests\reshape\concat 13       4302     3235     336     
training_data_bot\.venv\Lib\site-packages\pandas\tests\reshape\merge 8        9274     7781     417     
training_data_bot\.venv\Lib\site-packages\pandas\tests\scalar 3        1028     765      70      
training_data_bot\.venv\Lib\site-packages\pandas\tests\scalar\interval 7        488      380      18      
training_data_bot\.venv\Lib\site-packages\pandas\tests\scalar\period 4        2476     1007     1052    
training_data_bot\.venv\Lib\site-packages\pandas\tests\scalar\timedelta 5        2661     1465     710     
training_data_bot\.venv\Lib\site-packages\pandas\tests\scalar\timedelta\methods 3        270      211      7       
training_data_bot\.venv\Lib\site-packages\pandas\tests\scalar\timestamp 7        2884     1407     978     
training_data_bot\.venv\Lib\site-packages\pandas\tests\scalar\timestamp\methods 10       1236     958      84      
training_data_bot\.venv\Lib\site-packages\pandas\tests\series 15       5950     4198     688     
training_data_bot\.venv\Lib\site-packages\pandas\tests\series\accessors 7        1467     1173     89      
training_data_bot\.venv\Lib\site-packages\pandas\tests\series\indexing 12       4648     2953     739     
training_data_bot\.venv\Lib\site-packages\pandas\tests\series\methods 71       12396    9094     1104    
training_data_bot\.venv\Lib\site-packages\pandas\tests\strings 11       5031     3726     403     
training_data_bot\.venv\Lib\site-packages\pandas\tests\tools 5        5321     1497     3124    
training_data_bot\.venv\Lib\site-packages\pandas\tests\tseries 1        1        0        0       
training_data_bot\.venv\Lib\site-packages\pandas\tests\tseries\frequencies 4        660      512      30      
training_data_bot\.venv\Lib\site-packages\pandas\tests\tseries\holiday 5        619      478      37      
training_data_bot\.venv\Lib\site-packages\pandas\tests\tseries\offsets 22       7934     6593     353     
training_data_bot\.venv\Lib\site-packages\pandas\tests\tslibs 19       2517     1849     190     
training_data_bot\.venv\Lib\site-packages\pandas\tests\util 26       3905     2321     571     
training_data_bot\.venv\Lib\site-packages\pandas\tests\window 19       9807     5713     2606    
training_data_bot\.venv\Lib\site-packages\pandas\tests\window\moments 5        708      346      231     
training_data_bot\.venv\Lib\site-packages\pandas\tseries 5        1354     832      296     
training_data_bot\.venv\Lib\site-packages\pandas\util 8        1689     719      661     
training_data_bot\.venv\Lib\site-packages\pandas\util\version 1        580      339      107     
training_data_bot\.venv\Lib\site-packages\pathspec 6        1696     712      661     
training_data_bot\.venv\Lib\site-packages\pathspec\patterns 2        434      188      163     
training_data_bot\.venv\Lib\site-packages\pip      3        90       40       21      
training_data_bot\.venv\Lib\site-packages\pip\_internal 9        2727     1034     1193    
training_data_bot\.venv\Lib\site-packages\pip\_internal\cli 13       3040     1218     1340    
training_data_bot\.venv\Lib\site-packages\pip\_internal\commands 19       3753     2496     672     
training_data_bot\.venv\Lib\site-packages\pip\_internal\distributions 5        323      94       168     
training_data_bot\.venv\Lib\site-packages\pip\_internal\index 4        1840     518      1021    
training_data_bot\.venv\Lib\site-packages\pip\_internal\locations 4        915      265      482     
training_data_bot\.venv\Lib\site-packages\pip\_internal\metadata 4        1238     652      359     
training_data_bot\.venv\Lib\site-packages\pip\_internal\metadata\importlib 4        463      256      122     
training_data_bot\.venv\Lib\site-packages\pip\_internal\models 13       1697     692      701     
training_data_bot\.venv\Lib\site-packages\pip\_internal\network 8        1948     650      965     
training_data_bot\.venv\Lib\site-packages\pip\_internal\operations 4        1180     483      533     
training_data_bot\.venv\Lib\site-packages\pip\_internal\operations\build 8        504      240      156     
training_data_bot\.venv\Lib\site-packages\pip\_internal\operations\install 3        798      313      356     
training_data_bot\.venv\Lib\site-packages\pip\_internal\req 7        3026     1441     1127    
training_data_bot\.venv\Lib\site-packages\pip\_internal\resolution 2        22       15       0       
training_data_bot\.venv\Lib\site-packages\pip\_internal\resolution\legacy 2        600      369      148     
training_data_bot\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib 9        2657     1135     1100    
training_data_bot\.venv\Lib\site-packages\pip\_internal\utils 26       3869     1429     1706    
training_data_bot\.venv\Lib\site-packages\pip\_internal\vcs 6        1936     863      794     
training_data_bot\.venv\Lib\site-packages\pip\_vendor 1        118      75       32      
training_data_bot\.venv\Lib\site-packages\pip\_vendor\cachecontrol 9        1327     794      276     
training_data_bot\.venv\Lib\site-packages\pip\_vendor\cachecontrol\caches 3        204      55       105     
training_data_bot\.venv\Lib\site-packages\pip\_vendor\certifi 3        102      44       36      
training_data_bot\.venv\Lib\site-packages\pip\_vendor\dependency_groups 6        423      287      53      
training_data_bot\.venv\Lib\site-packages\pip\_vendor\distlib 5        3964     1406     1961    
training_data_bot\.venv\Lib\site-packages\pip\_vendor\distro 3        1464     328      856     
training_data_bot\.venv\Lib\site-packages\pip\_vendor\idna 8        13609    4647     8654    
training_data_bot\.venv\Lib\site-packages\pip\_vendor\msgpack 4        1206     671      349     
training_data_bot\.venv\Lib\site-packages\pip\_vendor\packaging 14       4829     2173     1795    
training_data_bot\.venv\Lib\site-packages\pip\_vendor\packaging\licenses 2        906      829      45      
training_data_bot\.venv\Lib\site-packages\pip\_vendor\pkg_resources 1        3677     1243     1765    
training_data_bot\.venv\Lib\site-packages\pip\_vendor\platformdirs 8        1951     740      864     
training_data_bot\.venv\Lib\site-packages\pip\_vendor\pygments 15       2797     1059     1215    
training_data_bot\.venv\Lib\site-packages\pip\_vendor\pygments\filters 1        941      745      116     
training_data_bot\.venv\Lib\site-packages\pip\_vendor\pygments\formatters 2        182      69       79      
training_data_bot\.venv\Lib\site-packages\pip\_vendor\pygments\lexers 3        2168     1675     352     
training_data_bot\.venv\Lib\site-packages\pip\_vendor\pygments\styles 2        117      78       25      
training_data_bot\.venv\Lib\site-packages\pip\_vendor\pyproject_hooks 2        443      213      148     
training_data_bot\.venv\Lib\site-packages\pip\_vendor\pyproject_hooks\_in_process 2        412      115      205     
training_data_bot\.venv\Lib\site-packages\pip\_vendor\requests 18       5638     2108     2433    
training_data_bot\.venv\Lib\site-packages\pip\_vendor\resolvelib 4        491      213      171     
training_data_bot\.venv\Lib\site-packages\pip\_vendor\resolvelib\resolvers 5        806      407      263     
training_data_bot\.venv\Lib\site-packages\pip\_vendor\rich 77       25998    14532    8323    
training_data_bot\.venv\Lib\site-packages\pip\_vendor\tomli 4        904      239      527     
training_data_bot\.venv\Lib\site-packages\pip\_vendor\tomli_w 2        235      177      19      
training_data_bot\.venv\Lib\site-packages\pip\_vendor\truststore 6        1610     729      614     
training_data_bot\.venv\Lib\site-packages\pip\_vendor\urllib3 11       4487     2334     1294    
training_data_bot\.venv\Lib\site-packages\pip\_vendor\urllib3\contrib 7        2141     1302     459     
training_data_bot\.venv\Lib\site-packages\pip\_vendor\urllib3\contrib\_securetransport 3        919      249      510     
training_data_bot\.venv\Lib\site-packages\pip\_vendor\urllib3\packages 2        1078     311      547     
training_data_bot\.venv\Lib\site-packages\pip\_vendor\urllib3\packages\backports 3        209      132      51      
training_data_bot\.venv\Lib\site-packages\pip\_vendor\urllib3\util 13       2898     1240     1111    
training_data_bot\.venv\Lib\site-packages\platformdirs 8        1966     754      864     
training_data_bot\.venv\Lib\site-packages\pluggy   8        1671     734      654     
training_data_bot\.venv\Lib\site-packages\pyarrow  22       7008     3546     2341    
training_data_bot\.venv\Lib\site-packages\pyarrow\interchange 5        1492     633      649     
training_data_bot\.venv\Lib\site-packages\pyarrow\parquet 3        2468     794      1309    
training_data_bot\.venv\Lib\site-packages\pyarrow\tests 55       54912    37759    6809    
training_data_bot\.venv\Lib\site-packages\pyarrow\tests\interchange 3        842      600      87      
training_data_bot\.venv\Lib\site-packages\pyarrow\tests\parquet 14       6880     4453     942     
training_data_bot\.venv\Lib\site-packages\pyarrow\vendored 3        1280     673      344     
training_data_bot\.venv\Lib\site-packages\pydantic 35       18023    5546     9188    
training_data_bot\.venv\Lib\site-packages\pydantic\_internal 29       10784    3721     5148    
training_data_bot\.venv\Lib\site-packages\pydantic\deprecated 8        1168     501      467     
training_data_bot\.venv\Lib\site-packages\pydantic\experimental 3        724      263      286     
training_data_bot\.venv\Lib\site-packages\pydantic\plugin 3        388      177      134     
training_data_bot\.venv\Lib\site-packages\pydantic\v1 26       13162    9180     1661    
training_data_bot\.venv\Lib\site-packages\pydantic_core 2        4471     1369     2476    
training_data_bot\.venv\Lib\site-packages\pydantic_settings 5        807      564      160     
training_data_bot\.venv\Lib\site-packages\pydantic_settings\sources 4        883      134      582     
training_data_bot\.venv\Lib\site-packages\pydantic_settings\sources\providers 12       2573     802      1397    
training_data_bot\.venv\Lib\site-packages\pygments 16       3464     1603     1262    
training_data_bot\.venv\Lib\site-packages\pygments\filters 1        941      745      116     
training_data_bot\.venv\Lib\site-packages\pygments\formatters 14       4067     1952     1383    
training_data_bot\.venv\Lib\site-packages\pygments\lexers 259      112706   84915    20005   
training_data_bot\.venv\Lib\site-packages\pygments\styles 48       3789     2387     581     
training_data_bot\.venv\Lib\site-packages\pymupdf  10       94577    35921    40957   
training_data_bot\.venv\Lib\site-packages\pytest   2        191      0        179     
training_data_bot\.venv\Lib\site-packages\pytest_asyncio 2        914      346      403     
training_data_bot\.venv\Lib\site-packages\pytokens 3        1347     85       1031    
training_data_bot\.venv\Lib\site-packages\pytz     6        2646     1583     717     
training_data_bot\.venv\Lib\site-packages\regex    4        9880     6228     2016    
training_data_bot\.venv\Lib\site-packages\requests 18       5641     2101     2441    
training_data_bot\.venv\Lib\site-packages\sniffio  3        118      38       51      
training_data_bot\.venv\Lib\site-packages\sniffio\_tests 2        86       58       2       
training_data_bot\.venv\Lib\site-packages\soupsieve 7        3998     1402     1931    
training_data_bot\.venv\Lib\site-packages\tiktoken 6        1057     461      399     
training_data_bot\.venv\Lib\site-packages\tiktoken_ext 1        163      117      27      
training_data_bot\.venv\Lib\site-packages\tqdm     23       3658     1432     1708    
training_data_bot\.venv\Lib\site-packages\tqdm\contrib 9        860      361      363     
training_data_bot\.venv\Lib\site-packages\typing_inspection 3        1186     379      587     
training_data_bot\.venv\Lib\site-packages\tzdata   1        7        2        3       
training_data_bot\.venv\Lib\site-packages\tzdata\zoneinfo 1        1        0        0       
training_data_bot\.venv\Lib\site-packages\tzdata\zoneinfo\Africa 1        1        0        0       
training_data_bot\.venv\Lib\site-packages\tzdata\zoneinfo\America 1        1        0        0       
training_data_bot\.venv\Lib\site-packages\tzdata\zoneinfo\America\Argentina 1        1        0        0       
training_data_bot\.venv\Lib\site-packages\tzdata\zoneinfo\America\Indiana 1        1        0        0       
training_data_bot\.venv\Lib\site-packages\tzdata\zoneinfo\America\Kentucky 1        1        0        0       
training_data_bot\.venv\Lib\site-packages\tzdata\zoneinfo\America\North_Dakota 1        1        0        0       
training_data_bot\.venv\Lib\site-packages\tzdata\zoneinfo\Antarctica 1        1        0        0       
training_data_bot\.venv\Lib\site-packages\tzdata\zoneinfo\Arctic 1        1        0        0       
training_data_bot\.venv\Lib\site-packages\tzdata\zoneinfo\Asia 1        1        0        0       
training_data_bot\.venv\Lib\site-packages\tzdata\zoneinfo\Atlantic 1        1        0        0       
training_data_bot\.venv\Lib\site-packages\tzdata\zoneinfo\Australia 1        1        0        0       
training_data_bot\.venv\Lib\site-packages\tzdata\zoneinfo\Brazil 1        1        0        0       
training_data_bot\.venv\Lib\site-packages\tzdata\zoneinfo\Canada 1        1        0        0       
training_data_bot\.venv\Lib\site-packages\tzdata\zoneinfo\Chile 1        1        0        0       
training_data_bot\.venv\Lib\site-packages\tzdata\zoneinfo\Etc 1        1        0        0       
training_data_bot\.venv\Lib\site-packages\tzdata\zoneinfo\Europe 1        1        0        0       
training_data_bot\.venv\Lib\site-packages\tzdata\zoneinfo\Indian 1        1        0        0       
training_data_bot\.venv\Lib\site-packages\tzdata\zoneinfo\Mexico 1        1        0        0       
training_data_bot\.venv\Lib\site-packages\tzdata\zoneinfo\Pacific 1        1        0        0       
training_data_bot\.venv\Lib\site-packages\tzdata\zoneinfo\US 1        1        0        0       
training_data_bot\.venv\Lib\site-packages\urllib3  12       6162     3345     1729    
training_data_bot\.venv\Lib\site-packages\urllib3\contrib 3        795      285      358     
training_data_bot\.venv\Lib\site-packages\urllib3\contrib\emscripten 5        1303     812      284     
training_data_bot\.venv\Lib\site-packages\urllib3\http2 3        499      293      113     
training_data_bot\.venv\Lib\site-packages\urllib3\util 13       2999     1404     1017    
training_data_bot\.venv\Lib\site-packages\yaml     17       5907     3416     1700    
training_data_bot\ai                               2        339      162      120     
training_data_bot\ai\providers                     4        541      235      220     
training_data_bot\core                             5        1613     635      673     
training_data_bot\evaluation                       2        468      225      156     
training_data_bot\preprocessing                    2        433      127      221     
training_data_bot\sources                          6        1407     482      657     
training_data_bot\storage                          2        356      153      146     
training_data_bot\tasks                            3        744      389      225     
training_data_bot\tasks\generators                 4        778      177      456     
--------------------------------------------------------------------------------
TOTAL                                              4836     1682627  866746   542063  


================================================================================
6. DEPENDENCIES
================================================================================

Core Dependencies:
--------------------------------------------------------------------------------
  - pydantic>=2.0.0
  - httpx>=0.24.0
  - beautifulsoup4>=4.12.0
  - PyMuPDF>=1.22.0
  - python-docx>=0.8.11
  - openai>=1.0.0
  - anthropic>=0.25.0
  - pandas>=2.0.0
  - pyarrow>=12.0.0
  - pyyaml>=6.0
  - python-dotenv>=1.0.0
  - pytest>=7.4.0
  - pytest-asyncio>=0.21.0
  - pydantic-settings>=2.0.0
  - psutil>=5.9.0


================================================================================
END OF ARCHITECTURE DOCUMENTATION
================================================================================
